.class public final Lcom/android/server/am/ActivityManagerService;
.super Landroid/app/ActivityManagerNative;
.source "ActivityManagerService.java"

# interfaces
.implements Lcom/android/server/Watchdog$Monitor;
.implements Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/android/server/am/ActivityManagerService$AppTaskImpl;,
        Lcom/android/server/am/ActivityManagerService$LocalService;,
        Lcom/android/server/am/ActivityManagerService$MemItem;,
        Lcom/android/server/am/ActivityManagerService$ItemMatcher;,
        Lcom/android/server/am/ActivityManagerService$NeededUriGrants;,
        Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;,
        Lcom/android/server/am/ActivityManagerService$PermissionController;,
        Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;,
        Lcom/android/server/am/ActivityManagerService$Lifecycle;,
        Lcom/android/server/am/ActivityManagerService$CpuBinder;,
        Lcom/android/server/am/ActivityManagerService$DbBinder;,
        Lcom/android/server/am/ActivityManagerService$GraphicsBinder;,
        Lcom/android/server/am/ActivityManagerService$MemBinder;,
        Lcom/android/server/am/ActivityManagerService$MainHandler;,
        Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;,
        Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;,
        Lcom/android/server/am/ActivityManagerService$Identity;,
        Lcom/android/server/am/ActivityManagerService$GrantUri;,
        Lcom/android/server/am/ActivityManagerService$Association;,
        Lcom/android/server/am/ActivityManagerService$ForegroundToken;,
        Lcom/android/server/am/ActivityManagerService$BadProcessInfo;,
        Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    }
.end annotation


# static fields
.field static final ALLOW_FULL_ONLY:I = 0x2

.field static final ALLOW_NON_FULL:I = 0x0

.field static final ALLOW_NON_FULL_IN_PROFILE:I = 0x1

.field static final APP_SWITCH_DELAY_TIME:J = 0x1388L

.field private static final ATTR_CREATED_TIME:Ljava/lang/String; = "createdTime"

.field private static final ATTR_MODE_FLAGS:Ljava/lang/String; = "modeFlags"

.field private static final ATTR_PREFIX:Ljava/lang/String; = "prefix"

.field private static final ATTR_SOURCE_PKG:Ljava/lang/String; = "sourcePkg"

.field private static final ATTR_SOURCE_USER_ID:Ljava/lang/String; = "sourceUserId"

.field private static final ATTR_TARGET_PKG:Ljava/lang/String; = "targetPkg"

.field private static final ATTR_TARGET_USER_ID:Ljava/lang/String; = "targetUserId"

.field private static final ATTR_URI:Ljava/lang/String; = "uri"

.field private static final ATTR_USER_HANDLE:Ljava/lang/String; = "userHandle"

.field static final BATTERY_STATS_TIME:J = 0x1b7740L

.field static final BROADCAST_BG_TIMEOUT:I = 0xea60

.field static final BROADCAST_FG_TIMEOUT:I = 0x2710

.field static final CALLED_PRE_BOOTS_FILENAME:Ljava/lang/String; = "called_pre_boots.dat"

.field static final CANCEL_HEAVY_NOTIFICATION_MSG:I = 0x19

.field static final CHECK_EXCESSIVE_WAKE_LOCKS_MSG:I = 0x1b

.field static final CLEAR_DNS_CACHE_MSG:I = 0x1c

.field static final COLLECT_PSS_BG_MSG:I = 0x1

.field static final CONTINUE_USER_SWITCH_MSG:I = 0x23

.field static final CPU_MIN_CHECK_DURATION:I = 0x493e0

.field static final DEBUG:Z = false

.field static final DEBUG_BACKGROUND_BROADCAST:Z = false

.field static final DEBUG_BACKUP:Z = false

.field static final DEBUG_BROADCAST:Z = false

.field static final DEBUG_BROADCAST_LIGHT:Z = false

.field static final DEBUG_CLEANUP:Z = false

.field static final DEBUG_CONFIGURATION:Z = false

.field static final DEBUG_FOCUS:Z = false

.field static final DEBUG_IMMERSIVE:Z = false

.field static final DEBUG_LOCKSCREEN:Z = false

.field static final DEBUG_LRU:Z = false

.field static final DEBUG_MU:Z = false

.field static final DEBUG_OOM_ADJ:Z = false

.field static final DEBUG_PAUSE:Z = false

.field static final DEBUG_POWER:Z = false

.field static final DEBUG_POWER_QUICK:Z = false

.field static final DEBUG_PROCESSES:Z = false

.field static final DEBUG_PROCESS_OBSERVERS:Z = false

.field static final DEBUG_PROVIDER:Z = false

.field static final DEBUG_PSS:Z = false

.field static final DEBUG_RECENTS:Z = false

.field static final DEBUG_RESULTS:Z = false

.field static final DEBUG_SERVICE:Z = false

.field static final DEBUG_SERVICE_EXECUTING:Z = false

.field static final DEBUG_STACK:Z = false

.field static final DEBUG_SWITCH:Z = false

.field static final DEBUG_TASKS:Z = false

.field static final DEBUG_THUMBNAILS:Z = false

.field static final DEBUG_TRANSITION:Z = false

.field static final DEBUG_URI_PERMISSION:Z = false

.field static final DEBUG_USER_LEAVING:Z = false

.field static final DEBUG_VISBILITY:Z = false

.field static final DISMISS_DIALOG_MSG:I = 0x30

.field static final DISPATCH_PROCESSES_CHANGED:I = 0x1f

.field static final DISPATCH_PROCESS_DIED:I = 0x20

.field static final DO_PENDING_ACTIVITY_LAUNCHES_MSG:I = 0x15

.field static final DROPBOX_MAX_SIZE:I = 0x40000

.field static final DUMP_MEM_BUCKETS:[J

.field static final DUMP_MEM_OOM_ADJ:[I

.field static final DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

.field static final DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

.field static final EMPTY_STRING_ARRAY:[Ljava/lang/String;

.field static final ENTER_ANIMATION_COMPLETE_MSG:I = 0x2c

.field static final FINALIZE_PENDING_INTENT_MSG:I = 0x17

.field static final FINISH_BOOTING_MSG:I = 0x2d

.field static final FIRST_ACTIVITY_STACK_MSG:I = 0x64

.field static final FIRST_BROADCAST_QUEUE_MSG:I = 0xc8

.field static final FIRST_COMPAT_MODE_MSG:I = 0x12c

.field static final FIRST_SUPERVISOR_STACK_MSG:I = 0x64

.field static final FULL_PSS_LOWERED_INTERVAL:I = 0x1d4c0

.field static final FULL_PSS_MIN_INTERVAL:I = 0x927c0

.field static final GC_BACKGROUND_PROCESSES_MSG:I = 0x5

.field static final GC_MIN_INTERVAL:I = 0xea60

.field static final GC_TIMEOUT:I = 0x1388

.field static final IMMERSIVE_MODE_LOCK_MSG:I = 0x25

.field static final INSTRUMENTATION_KEY_DISPATCHING_TIMEOUT:I = 0xea60

.field static final IS_USER_BUILD:Z

.field static final KEY_DISPATCHING_TIMEOUT:I = 0x1388

.field static final KILL_APPLICATION_MSG:I = 0x16

.field private static final KSM_SHARED:I = 0x0

.field private static final KSM_SHARING:I = 0x1

.field private static final KSM_UNSHARED:I = 0x2

.field private static final KSM_VOLATILE:I = 0x3

.field static final LAST_PREBOOT_DELIVERED_FILE_VERSION:I = 0x2710

.field static final LOCK_SCREEN_HIDDEN:I = 0x0

.field static final LOCK_SCREEN_LEAVING:I = 0x1

.field static final LOCK_SCREEN_SHOWN:I = 0x2

.field private static final MAX_DUP_SUPPRESSED_STACKS:I = 0x1388

.field static final MAX_PERSISTED_URI_GRANTS:I = 0x80

.field static final MAX_RECENT_BITMAPS:I = 0x3

.field static final MAX_RUNNING_USERS:I = 0x3

.field static final MONITOR_CPU_MAX_TIME:J = 0xfffffffL

.field static final MONITOR_CPU_MIN_TIME:J = 0x1388L

.field static final MONITOR_CPU_USAGE:Z = true

.field static final MONITOR_THREAD_CPU_USAGE:Z = false

.field static final MY_PID:I

.field static final NOTIFY_TASK_STACK_CHANGE_LISTENERS_DELAY:I = 0x3e8

.field static final NOTIFY_TASK_STACK_CHANGE_LISTENERS_MSG:I = 0x31

.field static final PENDING_ASSIST_EXTRAS_TIMEOUT:I = 0x1f4

.field static final PERSIST_URI_GRANTS_MSG:I = 0x26

.field static final POST_HEAVY_NOTIFICATION_MSG:I = 0x18

.field static final POWER_CHECK_DELAY:I = 0xdbba0

.field static final PROC_START_TIMEOUT:I = 0x2710

.field static final PROC_START_TIMEOUT_MSG:I = 0x14

.field static final PROC_START_TIMEOUT_WITH_WRAPPER:I = 0x124f80

.field static final REPORT_MEM_USAGE_MSG:I = 0x21

.field static final REPORT_USER_SWITCH_MSG:I = 0x22

.field static final REQUEST_ALL_PSS_MSG:I = 0x27

.field static final SEND_LOCALE_TO_MOUNT_DAEMON_MSG:I = 0x2f

.field static final SERVICE_TIMEOUT_MSG:I = 0xc

.field static final SHOW_ACTIVITY_START_TIME:Z = true

.field static final SHOW_COMPAT_MODE_DIALOG_MSG:I = 0x1e

.field static final SHOW_ERROR_MSG:I = 0x1

.field static final SHOW_FACTORY_ERROR_MSG:I = 0x3

.field static final SHOW_FINGERPRINT_ERROR_MSG:I = 0xf

.field static final SHOW_NOT_RESPONDING_MSG:I = 0x2

.field static final SHOW_STRICT_MODE_VIOLATION_MSG:I = 0x1a

.field static final SHOW_UID_ERROR_MSG:I = 0xe

.field static final START_PROFILES_MSG:I = 0x28

.field static final START_USER_SWITCH_MSG:I = 0x2e

.field static final STOCK_PM_FLAGS:I = 0x400

.field private static final SYSTEM_DEBUGGABLE:Ljava/lang/String; = "ro.debuggable"

.field static final SYSTEM_USER_CURRENT_MSG:I = 0x2b

.field static final SYSTEM_USER_START_MSG:I = 0x2a

.field static final TAG:Ljava/lang/String; = "ActivityManager"

.field static final TAG_MU:Ljava/lang/String; = "ActivityManagerServiceMU"

.field private static final TAG_URI_GRANT:Ljava/lang/String; = "uri-grant"

.field private static final TAG_URI_GRANTS:Ljava/lang/String; = "uri-grants"

.field static final UPDATE_CONFIGURATION_MSG:I = 0x4

.field static final UPDATE_HTTP_PROXY_MSG:I = 0x1d

.field static final UPDATE_TIME:I = 0x29

.field static final UPDATE_TIME_ZONE:I = 0xd

.field private static final USER_DATA_DIR:Ljava/lang/String; = "/data/user/"

.field static final USER_SWITCH_TIMEOUT:I = 0x7d0

.field static final USER_SWITCH_TIMEOUT_MSG:I = 0x24

.field static final VALIDATE_TOKENS:Z = false

.field static final WAIT_FOR_DEBUGGER_MSG:I = 0x6

.field static final WAKE_LOCK_MIN_CHECK_DURATION:I = 0x493e0

.field static final localLOGV:Z

.field private static final sCallerIdentity:Ljava/lang/ThreadLocal;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/lang/ThreadLocal",
            "<",
            "Lcom/android/server/am/ActivityManagerService$Identity;",
            ">;"
        }
    .end annotation
.end field


# instance fields
.field final GL_ES_VERSION:I

.field mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

.field mAdjSeq:I

.field mAllowLowerMemLevel:Z

.field private final mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashSet",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field mAlwaysFinishActivities:Z

.field mAppBindArgs:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation
.end field

.field final mAppOpsService:Lcom/android/server/AppOpsService;

.field mAppSwitchesAllowedTime:J

.field final mAssociations:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Landroid/content/ComponentName;",
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Ljava/lang/String;",
            "Lcom/android/server/am/ActivityManagerService$Association;",
            ">;>;>;>;"
        }
    .end annotation
.end field

.field mAutoStopProfiler:Z

.field final mAvailProcessChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field mBackupAppName:Ljava/lang/String;

.field mBackupTarget:Lcom/android/server/am/BackupRecord;

.field final mBadProcesses:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Lcom/android/server/am/ActivityManagerService$BadProcessInfo;",
            ">;"
        }
    .end annotation
.end field

.field final mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

.field mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field final mBgHandler:Landroid/os/Handler;

.field mBootAnimationComplete:Z

.field mBooted:Z

.field mBooting:Z

.field final mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

.field mCallFinishBooting:Z

.field mCheckedForSetup:Z

.field mCompatModeDialog:Lcom/android/server/am/CompatModeDialog;

.field final mCompatModePackages:Lcom/android/server/am/CompatModePackages;

.field mConfiguration:Landroid/content/res/Configuration;

.field mConfigurationSeq:I

.field mContext:Landroid/content/Context;

.field mController:Landroid/app/IActivityController;

.field mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

.field private mCurResumedPackage:Ljava/lang/String;

.field private mCurResumedUid:I

.field mCurUserSwitchCallback:Ljava/lang/Object;

.field mCurrentProfileIds:[I

.field mCurrentUserId:I

.field mDebugApp:Ljava/lang/String;

.field mDebugTransient:Z

.field mDidAppSwitch:Z

.field mDidDexOpt:Z

.field mDidUpdate:Z

.field mFactoryTest:I

.field mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

.field mFocusedActivity:Lcom/android/server/am/ActivityRecord;

.field final mForegroundPackages:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field final mForegroundProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ForegroundToken;",
            ">;"
        }
    .end annotation
.end field

.field mFullPssPending:Z

.field private final mGrantFile:Landroid/util/AtomicFile;

.field private final mGrantedUriPermissions:Landroid/util/SparseArray;
    .annotation build Lcom/android/internal/annotations/GuardedBy;
        value = "this"
    .end annotation

    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Lcom/android/server/am/ActivityManagerService$GrantUri;",
            "Lcom/android/server/am/UriPermission;",
            ">;>;"
        }
    .end annotation
.end field

.field final mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

.field final mHandlerThread:Lcom/android/server/ServiceThread;

.field mHasRecents:Z

.field mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

.field mHomeProcess:Lcom/android/server/am/ProcessRecord;

.field private mInstaller:Lcom/android/server/pm/Installer;

.field public mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

.field final mIntentSenderRecords:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Lcom/android/server/am/PendingIntentRecord$Key;",
            "Ljava/lang/ref/WeakReference",
            "<",
            "Lcom/android/server/am/PendingIntentRecord;",
            ">;>;"
        }
    .end annotation
.end field

.field final mIsolatedProcesses:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

.field mLastAddedTaskComponent:Landroid/content/ComponentName;

.field mLastAddedTaskUid:I

.field final mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

.field mLastFullPssTime:J

.field mLastIdleTime:J

.field mLastMemUsageReportTime:J

.field mLastMemoryLevel:I

.field mLastNumProcesses:I

.field mLastPowerCheckRealtime:J

.field mLastPowerCheckUptime:J

.field mLastWriteTime:J

.field mLaunchWarningShown:Z

.field final mLaunchingProviders:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ContentProviderRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLockScreenShown:I

.field mLowRamStartTime:J

.field mLowRamTimeSinceLastIdle:J

.field mLruProcessActivityStart:I

.field mLruProcessServiceStart:I

.field final mLruProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mLruSeq:I

.field mNewNumAServiceProcs:I

.field mNewNumServiceProcs:I

.field mNextIsolatedProcessUid:I

.field mNumCachedHiddenProcs:I

.field mNumNonCachedProcs:I

.field mNumServiceProcs:I

.field mOnBattery:Z

.field mOpenGlTraceApp:Ljava/lang/String;

.field mOrigDebugApp:Ljava/lang/String;

.field mOrigWaitForDebugger:Z

.field final mPendingAssistExtras:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingProcessChanges:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;",
            ">;"
        }
    .end annotation
.end field

.field final mPendingPssProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mPersistentStartingProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mPidsSelfLocked:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mPreviousProcess:Lcom/android/server/am/ProcessRecord;

.field mPreviousProcessVisibleTime:J

.field final mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

.field final mProcessCpuThread:Ljava/lang/Thread;

.field final mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

.field final mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Ljava/lang/Long;",
            ">;"
        }
    .end annotation
.end field

.field mProcessLimit:I

.field mProcessLimitOverride:I

.field final mProcessList:Lcom/android/server/am/ProcessList;

.field final mProcessNames:Lcom/android/internal/app/ProcessMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/internal/app/ProcessMap",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mProcessObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/IProcessObserver;",
            ">;"
        }
    .end annotation
.end field

.field final mProcessStats:Lcom/android/server/am/ProcessStatsService;

.field final mProcessesOnHold:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mProcessesReady:Z

.field final mProcessesToGc:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field mProfileApp:Ljava/lang/String;

.field mProfileFd:Landroid/os/ParcelFileDescriptor;

.field mProfileFile:Ljava/lang/String;

.field mProfileProc:Lcom/android/server/am/ProcessRecord;

.field mProfileType:I

.field final mProviderMap:Lcom/android/server/am/ProviderMap;

.field final mReceiverResolver:Lcom/android/server/IntentResolver;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Lcom/android/server/IntentResolver",
            "<",
            "Lcom/android/server/am/BroadcastFilter;",
            "Lcom/android/server/am/BroadcastFilter;",
            ">;"
        }
    .end annotation
.end field

.field mRecentTasks:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/TaskRecord;",
            ">;"
        }
    .end annotation
.end field

.field final mRegisteredReceivers:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Landroid/os/IBinder;",
            "Lcom/android/server/am/ReceiverList;",
            ">;"
        }
    .end annotation
.end field

.field final mRemovedProcesses:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation
.end field

.field private mRunningVoice:Z

.field mSafeMode:Z

.field mSamplingInterval:I

.field final mServices:Lcom/android/server/am/ActiveServices;

.field private mShowDialogs:Z

.field mShuttingDown:Z

.field private mSleeping:Z

.field mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

.field mStartedUserArray:[I

.field final mStartedUsers:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Lcom/android/server/am/UserStartedState;",
            ">;"
        }
    .end annotation
.end field

.field final mStickyBroadcasts:Landroid/util/SparseArray;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/util/SparseArray",
            "<",
            "Landroid/util/ArrayMap",
            "<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/Intent;",
            ">;>;>;"
        }
    .end annotation
.end field

.field private final mStrictModeBuffer:Ljava/lang/StringBuilder;

.field final mStringBuilder:Ljava/lang/StringBuilder;

.field mSystemReady:Z

.field mSystemServiceManager:Lcom/android/server/SystemServiceManager;

.field final mSystemThread:Landroid/app/ActivityThread;

.field mTargetUserId:I

.field final mTaskPersister:Lcom/android/server/am/TaskPersister;

.field private mTaskRecordComparator:Ljava/util/Comparator;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/Comparator",
            "<",
            "Lcom/android/server/am/TaskRecord;",
            ">;"
        }
    .end annotation
.end field

.field private mTaskStackListeners:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/ITaskStackListener;",
            ">;"
        }
    .end annotation
.end field

.field mTestPssMode:Z

.field mThumbnailHeight:I

.field mThumbnailWidth:I

.field final mTmpLong:[J

.field mTmpRecents:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/TaskRecord;",
            ">;"
        }
    .end annotation
.end field

.field mTopAction:Ljava/lang/String;

.field mTopComponent:Landroid/content/ComponentName;

.field mTopData:Ljava/lang/String;

.field mTrackingAssociations:Z

.field final mUpdateLock:Landroid/os/UpdateLock;

.field mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

.field private mUserIsMonkey:Z

.field final mUserLru:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;"
        }
    .end annotation
.end field

.field private mUserManager:Lcom/android/server/pm/UserManagerService;

.field mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

.field final mUserSwitchObservers:Landroid/os/RemoteCallbackList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Landroid/os/RemoteCallbackList",
            "<",
            "Landroid/app/IUserSwitchObserver;",
            ">;"
        }
    .end annotation
.end field

.field mWaitForDebugger:Z

.field mWaitingUpdate:Z

.field private mWakefulness:I

.field mWindowManager:Lcom/android/server/wm/WindowManagerService;


# direct methods
.method static constructor <clinit>()V
    .locals 8

    .prologue
    const/4 v7, 0x3

    const/4 v6, 0x2

    const/4 v5, 0x1

    const/16 v4, 0xe

    const/4 v3, 0x0

    .line 295
    const-string v0, "user"

    sget-object v1, Landroid/os/Build;->TYPE:Ljava/lang/String;

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    sput-boolean v0, Lcom/android/server/am/ActivityManagerService;->IS_USER_BUILD:Z

    .line 362
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v0

    sput v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    .line 364
    new-array v0, v3, [Ljava/lang/String;

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 895
    new-instance v0, Ljava/lang/ThreadLocal;

    invoke-direct {v0}, Ljava/lang/ThreadLocal;-><init>()V

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    .line 13984
    const/16 v0, 0x17

    new-array v0, v0, [J

    fill-array-data v0, :array_0

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    .line 14011
    new-array v0, v4, [I

    fill-array-data v0, :array_1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    .line 14020
    new-array v0, v4, [Ljava/lang/String;

    const-string v1, "Native"

    aput-object v1, v0, v3

    const-string v1, "System"

    aput-object v1, v0, v5

    const-string v1, "Persistent"

    aput-object v1, v0, v6

    const-string v1, "Persistent Service"

    aput-object v1, v0, v7

    const/4 v1, 0x4

    const-string v2, "Foreground"

    aput-object v2, v0, v1

    const/4 v1, 0x5

    const-string v2, "Visible"

    aput-object v2, v0, v1

    const/4 v1, 0x6

    const-string v2, "Perceptible"

    aput-object v2, v0, v1

    const/4 v1, 0x7

    const-string v2, "Heavy Weight"

    aput-object v2, v0, v1

    const/16 v1, 0x8

    const-string v2, "Backup"

    aput-object v2, v0, v1

    const/16 v1, 0x9

    const-string v2, "A Services"

    aput-object v2, v0, v1

    const/16 v1, 0xa

    const-string v2, "Home"

    aput-object v2, v0, v1

    const/16 v1, 0xb

    const-string v2, "Previous"

    aput-object v2, v0, v1

    const/16 v1, 0xc

    const-string v2, "B Services"

    aput-object v2, v0, v1

    const/16 v1, 0xd

    const-string v2, "Cached"

    aput-object v2, v0, v1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    .line 14028
    new-array v0, v4, [Ljava/lang/String;

    const-string v1, "native"

    aput-object v1, v0, v3

    const-string v1, "sys"

    aput-object v1, v0, v5

    const-string v1, "pers"

    aput-object v1, v0, v6

    const-string v1, "persvc"

    aput-object v1, v0, v7

    const/4 v1, 0x4

    const-string v2, "fore"

    aput-object v2, v0, v1

    const/4 v1, 0x5

    const-string v2, "vis"

    aput-object v2, v0, v1

    const/4 v1, 0x6

    const-string v2, "percept"

    aput-object v2, v0, v1

    const/4 v1, 0x7

    const-string v2, "heavy"

    aput-object v2, v0, v1

    const/16 v1, 0x8

    const-string v2, "backup"

    aput-object v2, v0, v1

    const/16 v1, 0x9

    const-string v2, "servicea"

    aput-object v2, v0, v1

    const/16 v1, 0xa

    const-string v2, "home"

    aput-object v2, v0, v1

    const/16 v1, 0xb

    const-string v2, "prev"

    aput-object v2, v0, v1

    const/16 v1, 0xc

    const-string v2, "serviceb"

    aput-object v2, v0, v1

    const/16 v1, 0xd

    const-string v2, "cached"

    aput-object v2, v0, v1

    sput-object v0, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    return-void

    .line 13984
    :array_0
    .array-data 8
        0x1400
        0x1c00
        0x2800
        0x3c00
        0x5000
        0x7800
        0xa000
        0x14000
        0x1e000
        0x28000
        0x32000
        0x3e800
        0x4b000
        0x57800
        0x64000
        0x7d000
        0x96000
        0xc8000
        0x100000
        0x200000
        0x500000
        0xa00000
        0x1400000
    .end array-data

    .line 14011
    :array_1
    .array-data 4
        -0x11
        -0x10
        -0xc
        -0xb
        0x0
        0x1
        0x2
        0x3
        0x4
        0x5
        0x6
        0x7
        0x8
        0xf
    .end array-data
.end method

.method public constructor <init>(Landroid/content/Context;)V
    .locals 9
    .param p1, "systemContext"    # Landroid/content/Context;

    .prologue
    .line 2060
    invoke-direct {p0}, Landroid/app/ActivityManagerNative;-><init>()V

    .line 388
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    .line 396
    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    .line 402
    const/4 v0, 0x2

    new-array v0, v0, [Lcom/android/server/am/BroadcastQueue;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .line 427
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 433
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    .line 476
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    .line 482
    new-instance v0, Lcom/android/server/am/ProcessList;

    invoke-direct {v0}, Lcom/android/server/am/ProcessList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    .line 490
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    .line 501
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    .line 507
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 512
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 517
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    .line 544
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    .line 553
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    .line 564
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    .line 571
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    .line 577
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    .line 582
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    .line 588
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    .line 593
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 599
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 604
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    .line 609
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    .line 614
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    .line 620
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    .line 642
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    .line 647
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    .line 652
    const/4 v0, 0x1

    new-array v0, v0, [I

    const/4 v1, 0x0

    const/4 v2, 0x0

    aput v2, v0, v1

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    .line 657
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    .line 674
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    .line 683
    new-instance v0, Ljava/util/HashSet;

    invoke-direct {v0}, Ljava/util/HashSet;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    .line 693
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    .line 700
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    .line 707
    new-instance v0, Lcom/android/server/am/ActivityManagerService$1;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$1;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    .line 748
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    .line 781
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    .line 788
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 789
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 798
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    .line 824
    new-instance v0, Landroid/util/SparseArray;

    invoke-direct {v0}, Landroid/util/SparseArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    .line 923
    new-instance v0, Landroid/content/res/Configuration;

    invoke-direct {v0}, Landroid/content/res/Configuration;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    .line 929
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 945
    new-instance v0, Ljava/lang/StringBuilder;

    const/16 v1, 0x100

    invoke-direct {v0, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    .line 951
    const-string v0, "android.intent.action.MAIN"

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    .line 953
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    .line 954
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    .line 955
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 956
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 957
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 958
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    .line 959
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    .line 960
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 961
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    .line 995
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    .line 1001
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Z

    .line 1006
    const/4 v0, 0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 1014
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 1019
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    .line 1024
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    .line 1029
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    .line 1035
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    .line 1041
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    .line 1047
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    .line 1048
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    .line 1049
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 1057
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 1063
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    .line 1074
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 1079
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 1084
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 1089
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 1090
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 1097
    new-instance v0, Lcom/android/internal/app/ProcessMap;

    invoke-direct {v0}, Lcom/android/internal/app/ProcessMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    .line 1116
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    .line 1118
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 1119
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 1120
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    .line 1121
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    .line 1122
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    .line 1123
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 1124
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 1125
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 1126
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 1129
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    .line 1130
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 1131
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 1132
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    .line 1134
    const/4 v0, 0x1

    new-array v0, v0, [J

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTmpLong:[J

    .line 1146
    new-instance v0, Landroid/os/RemoteCallbackList;

    invoke-direct {v0}, Landroid/os/RemoteCallbackList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    .line 1148
    const/4 v0, 0x5

    new-array v0, v0, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 1150
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    .line 1152
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    .line 1168
    new-instance v0, Lcom/android/internal/os/ProcessCpuTracker;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    .line 1170
    new-instance v0, Ljava/util/concurrent/atomic/AtomicLong;

    const-wide/16 v2, 0x0

    invoke-direct {v0, v2, v3}, Ljava/util/concurrent/atomic/AtomicLong;-><init>(J)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    .line 1171
    new-instance v0, Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v1, 0x1

    invoke-direct {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;-><init>(Z)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    .line 1173
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    .line 1179
    new-instance v0, Landroid/os/UpdateLock;

    const-string v1, "immersive"

    invoke-direct {v0, v1}, Landroid/os/UpdateLock;-><init>(Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUpdateLock:Landroid/os/UpdateLock;

    .line 1184
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 1186
    const/16 v0, 0x20

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    .line 1187
    const/4 v0, -0x1

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    .line 1194
    const/4 v0, 0x0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 1196
    const/16 v0, -0x2710

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 1199
    const/4 v0, 0x1

    new-array v0, v0, [I

    const/4 v1, 0x0

    const/4 v2, 0x0

    aput v2, v0, v1

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .line 1204
    new-instance v0, Landroid/util/SparseIntArray;

    invoke-direct {v0}, Landroid/util/SparseIntArray;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    .line 1281
    const-wide/16 v0, 0x0

    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    .line 1817
    new-instance v0, Lcom/android/server/am/ActivityManagerService$2;

    invoke-static {}, Lcom/android/internal/os/BackgroundThread;->getHandler()Landroid/os/Handler;

    move-result-object v1

    invoke-virtual {v1}, Landroid/os/Handler;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$2;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    .line 3731
    new-instance v0, Lcom/android/server/am/ActivityManagerService$4;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$4;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskRecordComparator:Ljava/util/Comparator;

    .line 2061
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    .line 2062
    invoke-static {}, Landroid/os/FactoryTest;->getMode()I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    .line 2063
    invoke-static {}, Landroid/app/ActivityThread;->currentActivityThread()Landroid/app/ActivityThread;

    move-result-object v0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    .line 2065
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Memory class: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 2067
    new-instance v0, Lcom/android/server/ServiceThread;

    const-string v1, "ActivityManager"

    const/4 v2, -0x2

    const/4 v3, 0x0

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/ServiceThread;-><init>(Ljava/lang/String;IZ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    .line 2069
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v0}, Lcom/android/server/ServiceThread;->start()V

    .line 2070
    new-instance v0, Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandlerThread:Lcom/android/server/ServiceThread;

    invoke-virtual {v1}, Lcom/android/server/ServiceThread;->getLooper()Landroid/os/Looper;

    move-result-object v1

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Looper;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    .line 2072
    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-string v3, "foreground"

    const-wide/16 v4, 0x2710

    const/4 v6, 0x0

    move-object v1, p0

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 2074
    new-instance v0, Lcom/android/server/am/BroadcastQueue;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-string v3, "background"

    const-wide/32 v4, 0xea60

    const/4 v6, 0x1

    move-object v1, p0

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/Handler;Ljava/lang/String;JZ)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    .line 2076
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    aput-object v2, v0, v1

    .line 2077
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x1

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    aput-object v2, v0, v1

    .line 2079
    new-instance v0, Lcom/android/server/am/ActiveServices;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActiveServices;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    .line 2080
    new-instance v0, Lcom/android/server/am/ProviderMap;

    invoke-direct {v0, p0}, Lcom/android/server/am/ProviderMap;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    .line 2083
    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;

    move-result-object v7

    .line 2084
    .local v7, "dataDir":Ljava/io/File;
    new-instance v8, Ljava/io/File;

    const-string v0, "system"

    invoke-direct {v8, v7, v0}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 2085
    .local v8, "systemDir":Ljava/io/File;
    invoke-virtual {v8}, Ljava/io/File;->mkdirs()Z

    .line 2086
    new-instance v0, Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v8, v1}, Lcom/android/server/am/BatteryStatsService;-><init>(Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    .line 2087
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->readLocked()V

    .line 2088
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->writeAsyncLocked()V

    .line 2089
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0}, Lcom/android/internal/os/BatteryStatsImpl;->getIsOnBattery()Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 2091
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/internal/os/BatteryStatsImpl;->setCallback(Lcom/android/internal/os/BatteryStatsImpl$BatteryCallback;)V

    .line 2093
    new-instance v0, Lcom/android/server/am/ProcessStatsService;

    new-instance v1, Ljava/io/File;

    const-string v2, "procstats"

    invoke-direct {v1, v8, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ProcessStatsService;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    .line 2095
    new-instance v0, Lcom/android/server/AppOpsService;

    new-instance v1, Ljava/io/File;

    const-string v2, "appops.xml"

    invoke-direct {v1, v8, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v1, v2}, Lcom/android/server/AppOpsService;-><init>(Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    .line 2097
    new-instance v0, Landroid/util/AtomicFile;

    new-instance v1, Ljava/io/File;

    const-string v2, "urigrants.xml"

    invoke-direct {v1, v8, v2}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    invoke-direct {v0, v1}, Landroid/util/AtomicFile;-><init>(Ljava/io/File;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    .line 2100
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    const/4 v1, 0x0

    new-instance v2, Lcom/android/server/am/UserStartedState;

    new-instance v3, Landroid/os/UserHandle;

    const/4 v4, 0x0

    invoke-direct {v3, v4}, Landroid/os/UserHandle;-><init>(I)V

    const/4 v4, 0x1

    invoke-direct {v2, v3, v4}, Lcom/android/server/am/UserStartedState;-><init>(Landroid/os/UserHandle;Z)V

    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 2101
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    const/4 v1, 0x0

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2102
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 2104
    const-string v0, "ro.opengles.version"

    const/4 v1, 0x0

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->getInt(Ljava/lang/String;I)I

    move-result v0

    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    .line 2107
    const-string v0, "1"

    const-string v1, "debug.track-associations"

    invoke-static {v1}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 2109
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v0}, Landroid/content/res/Configuration;->setToDefaults()V

    .line 2110
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-static {}, Ljava/util/Locale;->getDefault()Ljava/util/Locale;

    move-result-object v1

    iput-object v1, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    .line 2112
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    const/4 v1, 0x1

    iput v1, v0, Landroid/content/res/Configuration;->seq:I

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    .line 2113
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v0}, Lcom/android/internal/os/ProcessCpuTracker;->init()V

    .line 2115
    new-instance v0, Lcom/android/server/am/CompatModePackages;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, p0, v8, v1}, Lcom/android/server/am/CompatModePackages;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/io/File;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    .line 2116
    new-instance v0, Lcom/android/server/firewall/IntentFirewall;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$IntentFirewallInterface;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-direct {v0, v1, v2}, Lcom/android/server/firewall/IntentFirewall;-><init>(Lcom/android/server/firewall/IntentFirewall$AMSInterface;Landroid/os/Handler;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentFirewall:Lcom/android/server/firewall/IntentFirewall;

    .line 2117
    new-instance v0, Lcom/android/server/am/ActivityStackSupervisor;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityStackSupervisor;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    .line 2118
    new-instance v0, Lcom/android/server/am/TaskPersister;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-direct {v0, v8, v1}, Lcom/android/server/am/TaskPersister;-><init>(Ljava/io/File;Lcom/android/server/am/ActivityStackSupervisor;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    .line 2120
    new-instance v0, Lcom/android/server/am/ActivityManagerService$3;

    const-string v1, "CpuTracker"

    invoke-direct {v0, p0, v1}, Lcom/android/server/am/ActivityManagerService$3;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;)V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    .line 2150
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p0}, Lcom/android/server/Watchdog;->addMonitor(Lcom/android/server/Watchdog$Monitor;)V

    .line 2151
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v1}, Lcom/android/server/Watchdog;->addThread(Landroid/os/Handler;)V

    invoke-static/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->flymeSetup(Lcom/android/server/am/ActivityManagerService;)V

    .line 2152
    return-void
.end method

.method static synthetic access$000(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 238
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    return v0
.end method

.method static synthetic access$100(Lcom/android/server/am/ActivityManagerService;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 238
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    return v0
.end method

.method static synthetic access$1000(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 238
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->start()V

    return-void
.end method

.method static synthetic access$1200(Ljava/util/ArrayList;)V
    .locals 0
    .param p0, "x0"    # Ljava/util/ArrayList;

    .prologue
    .line 238
    invoke-static {p0}, Lcom/android/server/am/ActivityManagerService;->writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V

    return-void
.end method

.method static synthetic access$1300(Lcom/android/server/am/ActivityManagerService;)Ljava/lang/StringBuilder;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 238
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    return-object v0
.end method

.method static synthetic access$1400(Lcom/android/server/am/ActivityManagerService;IZ)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Z

    .prologue
    .line 238
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    move-result v0

    return v0
.end method

.method static synthetic access$1500(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Lcom/android/server/am/TaskRecord;

    .prologue
    .line 238
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v0

    return-object v0
.end method

.method static synthetic access$200(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "x2"    # Ljava/lang/String;
    .param p3, "x3"    # Landroid/content/Intent;
    .param p4, "x4"    # Ljava/lang/String;
    .param p5, "x5"    # Landroid/content/IIntentReceiver;
    .param p6, "x6"    # I
    .param p7, "x7"    # Ljava/lang/String;
    .param p8, "x8"    # Landroid/os/Bundle;
    .param p9, "x9"    # Ljava/lang/String;
    .param p10, "x10"    # I
    .param p11, "x11"    # Z
    .param p12, "x12"    # Z
    .param p13, "x13"    # I
    .param p14, "x14"    # I
    .param p15, "x15"    # I

    .prologue
    .line 238
    invoke-direct/range {p0 .. p15}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    move-result v0

    return v0
.end method

.method static synthetic access$300(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 238
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method static synthetic access$400(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # Ljava/lang/String;
    .param p2, "x2"    # I
    .param p3, "x3"    # Z
    .param p4, "x4"    # Z
    .param p5, "x5"    # Z
    .param p6, "x6"    # Z
    .param p7, "x7"    # Z
    .param p8, "x8"    # I
    .param p9, "x9"    # Ljava/lang/String;

    .prologue
    .line 238
    invoke-direct/range {p0 .. p9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    move-result v0

    return v0
.end method

.method static synthetic access$500(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 238
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessesChanged()V

    return-void
.end method

.method static synthetic access$600(Lcom/android/server/am/ActivityManagerService;II)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # I

    .prologue
    .line 238
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->dispatchProcessDied(II)V

    return-void
.end method

.method static synthetic access$700(Lcom/android/server/am/ActivityManagerService;ILjava/lang/String;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;
    .param p1, "x1"    # I
    .param p2, "x2"    # Ljava/lang/String;

    .prologue
    .line 238
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->showUserSwitchDialog(ILjava/lang/String;)V

    return-void
.end method

.method static synthetic access$800(Lcom/android/server/am/ActivityManagerService;)V
    .locals 0
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 238
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->writeGrantedUriPermissions()V

    return-void
.end method

.method static synthetic access$900(Lcom/android/server/am/ActivityManagerService;)Landroid/os/RemoteCallbackList;
    .locals 1
    .param p0, "x0"    # Lcom/android/server/am/ActivityManagerService;

    .prologue
    .line 238
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    return-object v0
.end method

.method private appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V
    .locals 2
    .param p1, "sb"    # Ljava/lang/StringBuilder;
    .param p2, "oomAdj"    # I
    .param p3, "procState"    # I
    .param p4, "pss"    # J
    .param p6, "memtrack"    # J
    .param p8, "name"    # Ljava/lang/String;

    .prologue
    const/16 v1, 0x20

    .line 14511
    const-string v0, "  "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14512
    invoke-static {p2}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14513
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 14514
    invoke-static {p3}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14515
    invoke-virtual {p1, v1}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 14516
    invoke-static {p1, p4, p5}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    .line 14517
    const-string v0, " kB: "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14518
    invoke-virtual {p1, p8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14519
    const-wide/16 v0, 0x0

    cmp-long v0, p6, v0

    if-lez v0, :cond_0

    .line 14520
    const-string v0, " ("

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14521
    invoke-virtual {p1, p6, p7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 14522
    const-string v0, " kB memtrack)"

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14524
    :cond_0
    return-void
.end method

.method private appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V
    .locals 9
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "processName"    # Ljava/lang/String;
    .param p3, "sb"    # Ljava/lang/StringBuilder;

    .prologue
    .line 11866
    if-nez p1, :cond_0

    .line 11867
    const-string v6, "Process: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11895
    :goto_0
    return-void

    .line 11873
    :cond_0
    monitor-enter p0

    .line 11874
    :try_start_0
    const-string v6, "Process: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11875
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v6, Landroid/content/pm/ApplicationInfo;->flags:I

    .line 11876
    .local v1, "flags":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 11877
    .local v5, "pm":Landroid/content/pm/IPackageManager;
    const-string v6, "Flags: 0x"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const/16 v7, 0x10

    invoke-static {v1, v7}, Ljava/lang/Integer;->toString(II)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "\n"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11878
    const/4 v2, 0x0

    .local v2, "ip":I
    :goto_1
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v6

    if-ge v2, v6, :cond_2

    .line 11879
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v2}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/String;

    .line 11880
    .local v4, "pkg":Ljava/lang/String;
    const-string v6, "Package: "

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11882
    const/4 v6, 0x0

    :try_start_1
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    invoke-interface {v5, v4, v6, v7}, Landroid/content/pm/IPackageManager;->getPackageInfo(Ljava/lang/String;II)Landroid/content/pm/PackageInfo;

    move-result-object v3

    .line 11883
    .local v3, "pi":Landroid/content/pm/PackageInfo;
    if-eqz v3, :cond_1

    .line 11884
    const-string v6, " v"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget v7, v3, Landroid/content/pm/PackageInfo;->versionCode:I

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 11885
    iget-object v6, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    if-eqz v6, :cond_1

    .line 11886
    const-string v6, " ("

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v3, Landroid/content/pm/PackageInfo;->versionName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ")"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11892
    .end local v3    # "pi":Landroid/content/pm/PackageInfo;
    :cond_1
    :goto_2
    :try_start_2
    const-string v6, "\n"

    invoke-virtual {p3, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11878
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 11889
    :catch_0
    move-exception v0

    .line 11890
    .local v0, "e":Landroid/os/RemoteException;
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Error getting package info: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_2

    .line 11894
    .end local v0    # "e":Landroid/os/RemoteException;
    .end local v1    # "flags":I
    .end local v2    # "ip":I
    .end local v4    # "pkg":Ljava/lang/String;
    .end local v5    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_0
    move-exception v6

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v6

    .restart local v1    # "flags":I
    .restart local v2    # "ip":I
    .restart local v5    # "pm":Landroid/content/pm/IPackageManager;
    :cond_2
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto/16 :goto_0
.end method

.method static final appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V
    .locals 11
    .param p0, "out"    # Ljava/lang/StringBuilder;
    .param p1, "memKB"    # J
    .param p3, "label"    # Ljava/lang/String;
    .param p4, "stackLike"    # Z

    .prologue
    const-wide/16 v8, 0x400

    .line 13993
    const/16 v5, 0x2e

    invoke-virtual {p3, v5}, Ljava/lang/String;->lastIndexOf(I)I

    move-result v4

    .line 13994
    .local v4, "start":I
    if-ltz v4, :cond_0

    add-int/lit8 v4, v4, 0x1

    .line 13996
    :goto_0
    invoke-virtual {p3}, Ljava/lang/String;->length()I

    move-result v2

    .line 13997
    .local v2, "end":I
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_1
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    array-length v5, v5

    if-ge v3, v5, :cond_3

    .line 13998
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    aget-wide v6, v5, v3

    cmp-long v5, v6, p1

    if-ltz v5, :cond_2

    .line 13999
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_BUCKETS:[J

    aget-wide v6, v5, v3

    div-long v0, v6, v8

    .line 14000
    .local v0, "bucket":J
    invoke-virtual {p0, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 14001
    if-eqz p4, :cond_1

    const-string v5, "MB."

    :goto_2
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14002
    invoke-virtual {p0, p3, v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    .line 14009
    .end local v0    # "bucket":J
    :goto_3
    return-void

    .line 13995
    .end local v2    # "end":I
    .end local v3    # "i":I
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 14001
    .restart local v0    # "bucket":J
    .restart local v2    # "end":I
    .restart local v3    # "i":I
    :cond_1
    const-string v5, "MB "

    goto :goto_2

    .line 13997
    .end local v0    # "bucket":J
    :cond_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 14006
    :cond_3
    div-long v6, p1, v8

    invoke-virtual {p0, v6, v7}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 14007
    if-eqz p4, :cond_4

    const-string v5, "MB."

    :goto_4
    invoke-virtual {p0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14008
    invoke-virtual {p0, p3, v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;

    goto :goto_3

    .line 14007
    :cond_4
    const-string v5, "MB "

    goto :goto_4
.end method

.method private appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V
    .locals 10
    .param p1, "sb"    # Ljava/lang/StringBuilder;
    .param p2, "mi"    # Lcom/android/server/am/ProcessMemInfo;

    .prologue
    const/16 v9, 0xa

    .line 14527
    iget v2, p2, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    iget v3, p2, Lcom/android/server/am/ProcessMemInfo;->procState:I

    iget-wide v4, p2, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-wide v6, p2, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    iget-object v8, p2, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    move-object v0, p0

    move-object v1, p1

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    .line 14528
    const-string v0, " (pid "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14529
    iget v0, p2, Lcom/android/server/am/ProcessMemInfo;->pid:I

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 14530
    const-string v0, ") "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14531
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjType:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14532
    invoke-virtual {p1, v9}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 14533
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    if-eqz v0, :cond_0

    .line 14534
    const-string v0, "                      "

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14535
    iget-object v0, p2, Lcom/android/server/am/ProcessMemInfo;->adjReason:Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 14536
    invoke-virtual {p1, v9}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 14538
    :cond_0
    return-void
.end method

.method private final applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;ZJ)Z
    .locals 22
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "TOP_APP"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "doingAll"    # Z
    .param p4, "now"    # J

    .prologue
    .line 17881
    const/16 v20, 0x1

    .line 17883
    .local v20, "success":Z
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    if-eq v4, v5, :cond_0

    .line 17884
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    .line 17887
    :cond_0
    const/4 v11, 0x0

    .line 17889
    .local v11, "changes":I
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-eq v4, v5, :cond_1

    .line 17890
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    invoke-static {v4, v5, v6}, Lcom/android/server/am/ProcessList;->setOomAdj(III)V

    .line 17894
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 17897
    :cond_1
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-eq v4, v5, :cond_2

    .line 17898
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    .line 17902
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    if-eqz v4, :cond_e

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    if-nez v4, :cond_e

    .line 17904
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    const/4 v5, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 17905
    const/16 v20, 0x0

    .line 17930
    :cond_2
    :goto_0
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    move-object/from16 v0, p1

    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    if-eq v4, v5, :cond_3

    .line 17931
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    .line 17932
    or-int/lit8 v11, v11, 0x1

    .line 17934
    :cond_3
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-eq v4, v5, :cond_4

    .line 17935
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    .line 17936
    or-int/lit8 v11, v11, 0x2

    .line 17937
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v4, :cond_4

    .line 17944
    :try_start_0
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    invoke-interface {v4, v5}, Landroid/app/IApplicationThread;->setProcessState(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 17949
    :cond_4
    :goto_1
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    if-ltz v4, :cond_5

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    invoke-static {v4, v5}, Lcom/android/server/am/ProcessList;->procStatesDifferForMem(II)Z

    move-result v4

    if-eqz v4, :cond_10

    .line 17964
    :cond_5
    move-wide/from16 v0, p4

    move-object/from16 v2, p1

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    .line 17965
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x1

    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v7

    move-wide/from16 v8, p4

    invoke-static/range {v4 .. v9}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    .line 17982
    :cond_6
    :goto_2
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    if-eq v4, v5, :cond_9

    .line 17986
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v5, 0x7

    if-ge v4, v5, :cond_12

    const/16 v18, 0x1

    .line 17987
    .local v18, "setImportant":Z
    :goto_3
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x7

    if-ge v4, v5, :cond_13

    const/4 v12, 0x1

    .line 17988
    .local v12, "curImportant":Z
    :goto_4
    if-eqz v18, :cond_7

    if-nez v12, :cond_7

    .line 17993
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v19

    .line 17994
    .local v19, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v19

    .line 17995
    :try_start_1
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    move-object/from16 v0, v19

    invoke-virtual {v0, v4, v5, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    .line 17997
    monitor-exit v19
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 17998
    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    .line 18001
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_7
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move-object/from16 v0, p1

    iput v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    .line 18002
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v5, 0x9

    if-lt v4, v5, :cond_8

    .line 18003
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    .line 18005
    :cond_8
    if-nez p3, :cond_14

    .line 18006
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v4

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-wide/from16 v2, p4

    invoke-direct {v0, v1, v4, v2, v3}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    .line 18012
    .end local v12    # "curImportant":Z
    .end local v18    # "setImportant":Z
    :cond_9
    :goto_5
    if-eqz v11, :cond_d

    .line 18014
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v14, v4, -0x1

    .line 18015
    .local v14, "i":I
    const/4 v15, 0x0

    .line 18016
    .local v15, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :goto_6
    if-ltz v14, :cond_a

    .line 18017
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    check-cast v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 18018
    .restart local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, v5, :cond_15

    .line 18024
    :cond_a
    if-gez v14, :cond_c

    .line 18026
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 18027
    .local v10, "NA":I
    if-lez v10, :cond_16

    .line 18028
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    add-int/lit8 v5, v10, -0x1

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v15

    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    check-cast v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 18034
    .restart local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :goto_7
    const/4 v4, 0x0

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 18035
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    .line 18036
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    .line 18037
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-nez v4, :cond_b

    .line 18040
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x1f

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V

    .line 18042
    :cond_b
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v4, v15}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18044
    .end local v10    # "NA":I
    :cond_c
    iget v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    or-int/2addr v4, v11

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    .line 18045
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->repProcState:I

    iput v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->processState:I

    .line 18046
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->repForegroundActivities:Z

    iput-boolean v4, v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    .line 18056
    .end local v14    # "i":I
    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_d
    return v20

    .line 17908
    :cond_e
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v16

    .line 17910
    .local v16, "oldId":J
    :try_start_2
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    invoke-static {v4, v5}, Landroid/os/Process;->setProcessGroup(II)V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 17916
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 17926
    :goto_8
    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    if-gtz v4, :cond_f

    const/4 v4, 0x1

    :goto_9
    invoke-static {v5, v4}, Landroid/os/Process;->setSwappiness(IZ)Z

    goto/16 :goto_0

    .line 17911
    :catch_0
    move-exception v13

    .line 17912
    .local v13, "e":Ljava/lang/Exception;
    :try_start_3
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Failed setting process group of "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " to "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17914
    invoke-virtual {v13}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 17916
    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_8

    .end local v13    # "e":Ljava/lang/Exception;
    :catchall_0
    move-exception v4

    invoke-static/range {v16 .. v17}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 17926
    :cond_f
    const/4 v4, 0x0

    goto :goto_9

    .line 17972
    .end local v16    # "oldId":J
    :cond_10
    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    cmp-long v4, p4, v4

    if-gtz v4, :cond_11

    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastPssTime:J

    const-wide/32 v6, 0x1b7740

    add-long/2addr v4, v6

    cmp-long v4, p4, v4

    if-lez v4, :cond_6

    move-object/from16 v0, p1

    iget-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-static {v6}, Lcom/android/server/am/ProcessList;->minTimeFromStateChange(Z)J

    move-result-wide v6

    add-long/2addr v4, v6

    cmp-long v4, p4, v4

    if-lez v4, :cond_6

    .line 17975
    :cond_11
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->requestPssLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 17976
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x0

    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v7

    move-wide/from16 v8, p4

    invoke-static/range {v4 .. v9}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v4

    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    goto/16 :goto_2

    .line 17986
    :cond_12
    const/16 v18, 0x0

    goto/16 :goto_3

    .line 17987
    .restart local v18    # "setImportant":Z
    :cond_13
    const/4 v12, 0x0

    goto/16 :goto_4

    .line 17997
    .restart local v12    # "curImportant":Z
    .restart local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_1
    move-exception v4

    :try_start_4
    monitor-exit v19
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v4

    .line 18008
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_14
    const/4 v4, 0x1

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    goto/16 :goto_5

    .line 18022
    .end local v12    # "curImportant":Z
    .end local v18    # "setImportant":Z
    .restart local v14    # "i":I
    .restart local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_15
    add-int/lit8 v14, v14, -0x1

    goto/16 :goto_6

    .line 18031
    .restart local v10    # "NA":I
    :cond_16
    new-instance v15, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    invoke-direct {v15}, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;-><init>()V

    .restart local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    goto/16 :goto_7

    .line 17945
    .end local v10    # "NA":I
    .end local v14    # "i":I
    .end local v15    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :catch_1
    move-exception v4

    goto/16 :goto_1
.end method

.method private applyUserId(II)I
    .locals 1
    .param p1, "uid"    # I
    .param p2, "userId"    # I

    .prologue
    .line 19585
    invoke-static {p2, p1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v0

    return v0
.end method

.method private final attachApplicationLocked(Landroid/app/IApplicationThread;I)Z
    .locals 34
    .param p1, "thread"    # Landroid/app/IApplicationThread;
    .param p2, "pid"    # I

    .prologue
    .line 5868
    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, p2

    if-eq v0, v6, :cond_0

    if-ltz p2, :cond_0

    .line 5869
    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v10

    .line 5870
    :try_start_0
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, p2

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Lcom/android/server/am/ProcessRecord;

    .line 5871
    .local v24, "app":Lcom/android/server/am/ProcessRecord;
    monitor-exit v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5876
    :goto_0
    if-nez v24, :cond_2

    .line 5877
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "No pending application record for pid "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v12, " (IApplicationThread "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p1

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v12, "); dropping process"

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v6, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5879
    const/16 v6, 0x7551

    move/from16 v0, p2

    invoke-static {v6, v0}, Landroid/util/EventLog;->writeEvent(II)I

    .line 5880
    if-lez p2, :cond_1

    sget v6, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, p2

    if-eq v0, v6, :cond_1

    .line 5881
    invoke-static/range {p2 .. p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 5890
    :goto_1
    const/4 v6, 0x0

    .line 6080
    :goto_2
    return v6

    .line 5871
    .end local v24    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v6

    :try_start_1
    monitor-exit v10
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v6

    .line 5873
    :cond_0
    const/16 v24, 0x0

    .restart local v24    # "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 5885
    :cond_1
    :try_start_2
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_1

    .line 5886
    :catch_0
    move-exception v6

    goto :goto_1

    .line 5895
    :cond_2
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_3

    .line 5896
    const/4 v6, 0x1

    const/4 v10, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 5904
    :cond_3
    move-object/from16 v0, v24

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 5906
    .local v7, "processName":Ljava/lang/String;
    :try_start_3
    new-instance v23, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;

    move-object/from16 v0, v23

    move-object/from16 v1, p0

    move-object/from16 v2, v24

    move/from16 v3, p2

    move-object/from16 v4, p1

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V

    .line 5908
    .local v23, "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    invoke-interface/range {p1 .. p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    const/4 v10, 0x0

    move-object/from16 v0, v23

    invoke-interface {v6, v0, v10}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    .line 5909
    move-object/from16 v0, v23

    move-object/from16 v1, v24

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->deathRecipient:Landroid/os/IBinder$DeathRecipient;
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 5916
    const/16 v6, 0x753a

    const/4 v10, 0x3

    new-array v10, v10, [Ljava/lang/Object;

    const/4 v12, 0x0

    move-object/from16 v0, v24

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v10, v12

    const/4 v12, 0x1

    move-object/from16 v0, v24

    iget v13, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v13

    aput-object v13, v10, v12

    const/4 v12, 0x2

    move-object/from16 v0, v24

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v13, v10, v12

    invoke-static {v6, v10}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 5918
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v24

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v6}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    .line 5919
    const/16 v6, -0x64

    move-object/from16 v0, v24

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move-object/from16 v0, v24

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 5920
    const/4 v6, -0x1

    move-object/from16 v0, v24

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move-object/from16 v0, v24

    iput v6, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 5921
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-object v6, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 5922
    const/4 v6, 0x0

    const/4 v10, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-virtual {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 5923
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    .line 5924
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z

    .line 5925
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 5926
    const/4 v6, 0x0

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 5928
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v10, 0x14

    move-object/from16 v0, v24

    invoke-virtual {v6, v10, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 5930
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v6, :cond_4

    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v6

    if-eqz v6, :cond_12

    :cond_4
    const/16 v29, 0x1

    .line 5931
    .local v29, "normalMode":Z
    :goto_3
    if-eqz v29, :cond_13

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v9

    .line 5933
    .local v9, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :goto_4
    if-nez v29, :cond_5

    .line 5934
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Launching preboot mode app: "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v6, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5941
    :cond_5
    const/4 v15, 0x0

    .line 5942
    .local v15, "testMode":I
    :try_start_4
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-eqz v6, :cond_6

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 5943
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    if-eqz v6, :cond_14

    const/4 v15, 0x2

    .line 5946
    :goto_5
    const/4 v6, 0x1

    move-object/from16 v0, v24

    iput-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->debugging:Z

    .line 5947
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-eqz v6, :cond_6

    .line 5948
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 5949
    move-object/from16 v0, p0

    iget-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    move-object/from16 v0, p0

    iput-boolean v6, v0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 5952
    :cond_6
    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    move-object/from16 v32, v0

    .line 5953
    .local v32, "profileFile":Ljava/lang/String;
    const/16 v31, 0x0

    .line 5954
    .local v31, "profileFd":Landroid/os/ParcelFileDescriptor;
    const/16 v33, 0x0

    .line 5955
    .local v33, "samplingInterval":I
    const/16 v30, 0x0

    .line 5956
    .local v30, "profileAutoStop":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-eqz v6, :cond_7

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_7

    .line 5957
    move-object/from16 v0, v24

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 5958
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    move-object/from16 v32, v0

    .line 5959
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    move-object/from16 v31, v0

    .line 5960
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    move/from16 v33, v0

    .line 5961
    move-object/from16 v0, p0

    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    move/from16 v30, v0

    .line 5963
    :cond_7
    const/16 v16, 0x0

    .line 5964
    .local v16, "enableOpenGlTrace":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    if-eqz v6, :cond_8

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 5965
    const/16 v16, 0x1

    .line 5966
    const/4 v6, 0x0

    move-object/from16 v0, p0

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    .line 5970
    :cond_8
    const/16 v28, 0x0

    .line 5971
    .local v28, "isRestrictedBackupMode":Z
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v6, :cond_a

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_a

    .line 5972
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x2

    if-eq v6, v10, :cond_9

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x3

    if-eq v6, v10, :cond_9

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v6, v6, Lcom/android/server/am/BackupRecord;->backupMode:I

    const/4 v10, 0x1

    if-ne v6, v10, :cond_15

    :cond_9
    const/16 v28, 0x1

    .line 5977
    :cond_a
    :goto_6
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    if-eqz v6, :cond_16

    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    :goto_7
    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 5980
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v6, :cond_b

    .line 5981
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 5985
    :cond_b
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    if-eqz v6, :cond_17

    move-object/from16 v0, v24

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    .line 5987
    .local v8, "appInfo":Landroid/content/pm/ApplicationInfo;
    :goto_8
    move-object/from16 v0, p0

    invoke-virtual {v0, v8}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v6

    move-object/from16 v0, v24

    iput-object v6, v0, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    .line 5988
    if-eqz v31, :cond_c

    .line 5989
    invoke-virtual/range {v31 .. v31}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;

    move-result-object v31

    .line 5991
    :cond_c
    if-nez v32, :cond_18

    const/4 v11, 0x0

    .line 5993
    .local v11, "profilerInfo":Landroid/app/ProfilerInfo;
    :goto_9
    move-object/from16 v0, v24

    iget-object v10, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    move-object/from16 v0, v24

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    move-object/from16 v0, v24

    iget-object v13, v0, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    move-object/from16 v0, v24

    iget-object v14, v0, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-nez v28, :cond_d

    if-nez v29, :cond_19

    :cond_d
    const/16 v17, 0x1

    :goto_a
    move-object/from16 v0, v24

    iget-boolean v0, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v18, v0

    new-instance v19, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v19

    invoke-direct {v0, v6}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v24

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->compat:Landroid/content/res/CompatibilityInfo;

    move-object/from16 v20, v0

    move-object/from16 v0, v24

    iget-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    move-object/from16 v0, p0

    invoke-direct {v0, v6}, Lcom/android/server/am/ActivityManagerService;->getCommonServicesLocked(Z)Ljava/util/HashMap;

    move-result-object v21

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    invoke-virtual {v6}, Lcom/android/server/am/CoreSettingsObserver;->getCoreSettingsLocked()Landroid/os/Bundle;

    move-result-object v22

    move-object/from16 v6, p1

    invoke-interface/range {v6 .. v22}, Landroid/app/IApplicationThread;->bindApplication(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/util/List;Landroid/content/ComponentName;Landroid/app/ProfilerInfo;Landroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;IZZZLandroid/content/res/Configuration;Landroid/content/res/CompatibilityInfo;Ljava/util/Map;Landroid/os/Bundle;)V

    .line 6000
    const/4 v6, 0x0

    const/4 v10, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-virtual {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 6001
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    move-object/from16 v0, v24

    iput-wide v12, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    move-object/from16 v0, v24

    iput-wide v12, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J
    :try_end_4
    .catch Ljava/lang/Exception; {:try_start_4 .. :try_end_4} :catch_2

    .line 6015
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, v24

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 6018
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, v24

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 6020
    const/16 v25, 0x0

    .line 6021
    .local v25, "badApp":Z
    const/16 v26, 0x0

    .line 6024
    .local v26, "didSomething":Z
    if-eqz v29, :cond_e

    .line 6026
    :try_start_5
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v24

    invoke-virtual {v6, v0}, Lcom/android/server/am/ActivityStackSupervisor;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;)Z
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_3

    move-result v6

    if-eqz v6, :cond_e

    .line 6027
    const/16 v26, 0x1

    .line 6036
    :cond_e
    :goto_b
    if-nez v25, :cond_f

    .line 6038
    :try_start_6
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v0, v24

    invoke-virtual {v6, v0, v7}, Lcom/android/server/am/ActiveServices;->attachApplicationLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)Z
    :try_end_6
    .catch Ljava/lang/Exception; {:try_start_6 .. :try_end_6} :catch_4

    move-result v6

    or-int v26, v26, v6

    .line 6046
    :cond_f
    :goto_c
    if-nez v25, :cond_10

    move-object/from16 v0, p0

    move/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v6

    if-eqz v6, :cond_10

    .line 6048
    :try_start_7
    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
    :try_end_7
    .catch Ljava/lang/Exception; {:try_start_7 .. :try_end_7} :catch_5

    move-result v6

    or-int v26, v26, v6

    .line 6057
    :cond_10
    :goto_d
    if-nez v25, :cond_11

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v6, :cond_11

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, v24

    iget v10, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    if-ne v6, v10, :cond_11

    .line 6059
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    .line 6061
    :try_start_8
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v6, v6, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v10, v10, Lcom/android/server/am/BackupRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v10}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v10

    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget v12, v12, Lcom/android/server/am/BackupRecord;->backupMode:I

    move-object/from16 v0, p1

    invoke-interface {v0, v6, v10, v12}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_8
    .catch Ljava/lang/Exception; {:try_start_8 .. :try_end_8} :catch_6

    .line 6070
    :cond_11
    :goto_e
    if-eqz v25, :cond_1a

    .line 6071
    const-string v6, "error during init"

    const/4 v10, 0x1

    move-object/from16 v0, v24

    invoke-virtual {v0, v6, v10}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 6072
    const/4 v6, 0x0

    const/4 v10, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1, v6, v10}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 6073
    const/4 v6, 0x0

    goto/16 :goto_2

    .line 5910
    .end local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .end local v11    # "profilerInfo":Landroid/app/ProfilerInfo;
    .end local v15    # "testMode":I
    .end local v16    # "enableOpenGlTrace":Z
    .end local v23    # "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    .end local v25    # "badApp":Z
    .end local v26    # "didSomething":Z
    .end local v28    # "isRestrictedBackupMode":Z
    .end local v29    # "normalMode":Z
    .end local v30    # "profileAutoStop":Z
    .end local v31    # "profileFd":Landroid/os/ParcelFileDescriptor;
    .end local v32    # "profileFile":Ljava/lang/String;
    .end local v33    # "samplingInterval":I
    :catch_1
    move-exception v27

    .line 5911
    .local v27, "e":Landroid/os/RemoteException;
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v24

    invoke-virtual {v0, v6}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 5912
    const-string v6, "link fail"

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 5913
    const/4 v6, 0x0

    goto/16 :goto_2

    .line 5930
    .end local v27    # "e":Landroid/os/RemoteException;
    .restart local v23    # "adr":Lcom/android/server/am/ActivityManagerService$AppDeathRecipient;
    :cond_12
    const/16 v29, 0x0

    goto/16 :goto_3

    .line 5931
    .restart local v29    # "normalMode":Z
    :cond_13
    const/4 v9, 0x0

    goto/16 :goto_4

    .line 5943
    .restart local v9    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    .restart local v15    # "testMode":I
    :cond_14
    const/4 v15, 0x1

    goto/16 :goto_5

    .line 5972
    .restart local v16    # "enableOpenGlTrace":Z
    .restart local v28    # "isRestrictedBackupMode":Z
    .restart local v30    # "profileAutoStop":Z
    .restart local v31    # "profileFd":Landroid/os/ParcelFileDescriptor;
    .restart local v32    # "profileFile":Ljava/lang/String;
    .restart local v33    # "samplingInterval":I
    :cond_15
    const/16 v28, 0x0

    goto/16 :goto_6

    .line 5977
    :cond_16
    :try_start_9
    move-object/from16 v0, v24

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    goto/16 :goto_7

    .line 5985
    :cond_17
    move-object/from16 v0, v24

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    goto/16 :goto_8

    .line 5991
    .restart local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    :cond_18
    new-instance v11, Landroid/app/ProfilerInfo;

    move-object/from16 v0, v32

    move-object/from16 v1, v31

    move/from16 v2, v33

    move/from16 v3, v30

    invoke-direct {v11, v0, v1, v2, v3}, Landroid/app/ProfilerInfo;-><init>(Ljava/lang/String;Landroid/os/ParcelFileDescriptor;IZ)V
    :try_end_9
    .catch Ljava/lang/Exception; {:try_start_9 .. :try_end_9} :catch_2

    goto/16 :goto_9

    .line 6002
    .end local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "enableOpenGlTrace":Z
    .end local v28    # "isRestrictedBackupMode":Z
    .end local v30    # "profileAutoStop":Z
    .end local v31    # "profileFd":Landroid/os/ParcelFileDescriptor;
    .end local v32    # "profileFile":Ljava/lang/String;
    .end local v33    # "samplingInterval":I
    :catch_2
    move-exception v27

    .line 6006
    .local v27, "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown during bind of "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v27

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6008
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v0, v24

    invoke-virtual {v0, v6}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 6009
    invoke-virtual/range {v24 .. v24}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 6010
    const-string v6, "bind fail"

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v1, v6, v7}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 6011
    const/4 v6, 0x0

    goto/16 :goto_2

    .line 5993
    .end local v27    # "e":Ljava/lang/Exception;
    .restart local v8    # "appInfo":Landroid/content/pm/ApplicationInfo;
    .restart local v11    # "profilerInfo":Landroid/app/ProfilerInfo;
    .restart local v16    # "enableOpenGlTrace":Z
    .restart local v28    # "isRestrictedBackupMode":Z
    .restart local v30    # "profileAutoStop":Z
    .restart local v31    # "profileFd":Landroid/os/ParcelFileDescriptor;
    .restart local v32    # "profileFile":Ljava/lang/String;
    .restart local v33    # "samplingInterval":I
    :cond_19
    const/16 v17, 0x0

    goto/16 :goto_a

    .line 6029
    .restart local v25    # "badApp":Z
    .restart local v26    # "didSomething":Z
    :catch_3
    move-exception v27

    .line 6030
    .restart local v27    # "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown launching activities in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v27

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6031
    const/16 v25, 0x1

    goto/16 :goto_b

    .line 6039
    .end local v27    # "e":Ljava/lang/Exception;
    :catch_4
    move-exception v27

    .line 6040
    .restart local v27    # "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown starting services in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v27

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6041
    const/16 v25, 0x1

    goto/16 :goto_c

    .line 6049
    .end local v27    # "e":Ljava/lang/Exception;
    :catch_5
    move-exception v27

    .line 6051
    .restart local v27    # "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown dispatching broadcasts in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v27

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6052
    const/16 v25, 0x1

    goto/16 :goto_d

    .line 6064
    .end local v27    # "e":Ljava/lang/Exception;
    :catch_6
    move-exception v27

    .line 6065
    .restart local v27    # "e":Ljava/lang/Exception;
    const-string v6, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Exception thrown creating backup agent in "

    invoke-virtual {v10, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    move-object/from16 v0, v27

    invoke-static {v6, v10, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 6066
    const/16 v25, 0x1

    goto/16 :goto_e

    .line 6076
    .end local v27    # "e":Ljava/lang/Exception;
    :cond_1a
    if-nez v26, :cond_1b

    .line 6077
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 6080
    :cond_1b
    const/4 v6, 0x1

    goto/16 :goto_2
.end method

.method private final broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I
    .locals 77
    .param p1, "callerApp"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "map"    # Landroid/os/Bundle;
    .param p9, "requiredPermission"    # Ljava/lang/String;
    .param p10, "appOp"    # I
    .param p11, "ordered"    # Z
    .param p12, "sticky"    # Z
    .param p13, "callingPid"    # I
    .param p14, "callingUid"    # I
    .param p15, "userId"    # I

    .prologue
    .line 15844
    new-instance v14, Landroid/content/Intent;

    move-object/from16 v0, p3

    invoke-direct {v14, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .line 15847
    .end local p3    # "intent":Landroid/content/Intent;
    .local v14, "intent":Landroid/content/Intent;
    const/16 v4, 0x10

    invoke-virtual {v14, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 15852
    if-eqz p5, :cond_0

    if-nez p11, :cond_0

    .line 15853
    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Broadcast "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " not ordered but result callback requested!"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15856
    :cond_0
    const/4 v8, 0x1

    const/4 v9, 0x0

    const-string v10, "broadcast"

    move-object/from16 v4, p0

    move/from16 v5, p13

    move/from16 v6, p14

    move/from16 v7, p15

    move-object/from16 v11, p2

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p15

    .line 15863
    const/4 v4, -0x1

    move/from16 v0, p15

    if-eq v0, v4, :cond_2

    const/4 v4, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p15

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v4

    if-nez v4, :cond_2

    .line 15864
    const/16 v4, 0x3e8

    move/from16 v0, p14

    if-ne v0, v4, :cond_1

    invoke-virtual {v14}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v6, 0x2000000

    and-int/2addr v4, v6

    if-nez v4, :cond_2

    :cond_1
    const-string v4, "android.intent.action.ACTION_SHUTDOWN"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_2

    .line 15867
    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Skipping broadcast of "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": user "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p15

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " is stopped"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15869
    const/4 v4, -0x2

    .line 16290
    :goto_0
    return v4

    .line 15877
    :cond_2
    invoke-static/range {p14 .. p14}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v48

    .line 15878
    .local v48, "callingAppId":I
    const/16 v4, 0x3e8

    move/from16 v0, v48

    if-eq v0, v4, :cond_3

    const/16 v4, 0x3e9

    move/from16 v0, v48

    if-eq v0, v4, :cond_3

    const/16 v4, 0x7d0

    move/from16 v0, v48

    if-eq v0, v4, :cond_3

    const/16 v4, 0x3ea

    move/from16 v0, v48

    if-eq v0, v4, :cond_3

    const/16 v4, 0x403

    move/from16 v0, v48

    if-eq v0, v4, :cond_3

    if-nez p14, :cond_6

    .line 15924
    :cond_3
    :goto_1
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v45

    .line 15925
    .local v45, "action":Ljava/lang/String;
    if-eqz v45, :cond_5

    .line 15926
    const/4 v4, -0x1

    invoke-virtual/range {v45 .. v45}, Ljava/lang/String;->hashCode()I

    move-result v6

    sparse-switch v6, :sswitch_data_0

    :cond_4
    :goto_2
    packed-switch v4, :pswitch_data_0

    .line 16063
    :cond_5
    :goto_3
    if-eqz p12, :cond_1d

    .line 16064
    const-string v4, "android.permission.BROADCAST_STICKY"

    move-object/from16 v0, p0

    move/from16 v1, p13

    move/from16 v2, p14

    invoke-virtual {v0, v4, v1, v2}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v4

    if-eqz v4, :cond_15

    .line 16067
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: broadcastIntent() requesting a sticky broadcast from pid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p13

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ", uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p14

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " requires "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 16070
    .local v62, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16071
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15882
    .end local v45    # "action":Ljava/lang/String;
    .end local v62    # "msg":Ljava/lang/String;
    :cond_6
    if-eqz p1, :cond_7

    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v4, :cond_3

    .line 15884
    :cond_7
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-interface {v4, v6}, Landroid/content/pm/IPackageManager;->isProtectedBroadcast(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_8

    .line 15886
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " from pid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p13

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ", uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p14

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 15889
    .restart local v62    # "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15890
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 15918
    .end local v62    # "msg":Ljava/lang/String;
    :catch_0
    move-exception v52

    .line 15919
    .local v52, "e":Landroid/os/RemoteException;
    const-string v4, "ActivityManager"

    const-string v6, "Remote exception"

    move-object/from16 v0, v52

    invoke-static {v4, v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 15920
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 15891
    .end local v52    # "e":Landroid/os/RemoteException;
    :cond_8
    :try_start_1
    const-string v4, "android.appwidget.action.APPWIDGET_CONFIGURE"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 15896
    if-nez p1, :cond_9

    .line 15897
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " from unknown caller."

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 15899
    .restart local v62    # "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15900
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15901
    .end local v62    # "msg":Ljava/lang/String;
    :cond_9
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-eqz v4, :cond_a

    .line 15904
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_3

    .line 15906
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: not allowed to send broadcast "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " to "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " from "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 15910
    .restart local v62    # "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15911
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15915
    .end local v62    # "msg":Ljava/lang/String;
    :cond_a
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v14, v4}, Landroid/content/Intent;->setPackage(Ljava/lang/String;)Landroid/content/Intent;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    goto/16 :goto_1

    .line 15926
    .restart local v45    # "action":Ljava/lang/String;
    :sswitch_0
    const-string v6, "android.intent.action.UID_REMOVED"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/4 v4, 0x0

    goto/16 :goto_2

    :sswitch_1
    const-string v6, "android.intent.action.PACKAGE_REMOVED"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/4 v4, 0x1

    goto/16 :goto_2

    :sswitch_2
    const-string v6, "android.intent.action.PACKAGE_CHANGED"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/4 v4, 0x2

    goto/16 :goto_2

    :sswitch_3
    const-string v6, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/4 v4, 0x3

    goto/16 :goto_2

    :sswitch_4
    const-string v6, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/4 v4, 0x4

    goto/16 :goto_2

    :sswitch_5
    const-string v6, "android.intent.action.PACKAGE_ADDED"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/4 v4, 0x5

    goto/16 :goto_2

    :sswitch_6
    const-string v6, "android.intent.action.TIMEZONE_CHANGED"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/4 v4, 0x6

    goto/16 :goto_2

    :sswitch_7
    const-string v6, "android.intent.action.TIME_SET"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/4 v4, 0x7

    goto/16 :goto_2

    :sswitch_8
    const-string v6, "android.intent.action.CLEAR_DNS_CACHE"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/16 v4, 0x8

    goto/16 :goto_2

    :sswitch_9
    const-string v6, "android.intent.action.PROXY_CHANGE"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    const/16 v4, 0x9

    goto/16 :goto_2

    .line 15935
    :pswitch_0
    const-string v5, "android.permission.BROADCAST_PACKAGE_REMOVED"

    const/4 v8, -0x1

    const/4 v9, 0x1

    move-object/from16 v4, p0

    move/from16 v6, p13

    move/from16 v7, p14

    invoke-virtual/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-eqz v4, :cond_b

    .line 15939
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " broadcast from "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " (pid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p13

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ", uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p14

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ")"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " requires "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "android.permission.BROADCAST_PACKAGE_REMOVED"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v62

    .line 15944
    .restart local v62    # "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    move-object/from16 v0, v62

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15945
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v62

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15947
    .end local v62    # "msg":Ljava/lang/String;
    :cond_b
    const/4 v4, -0x1

    invoke-virtual/range {v45 .. v45}, Ljava/lang/String;->hashCode()I

    move-result v6

    sparse-switch v6, :sswitch_data_1

    :cond_c
    :goto_4
    packed-switch v4, :pswitch_data_1

    goto/16 :goto_3

    .line 15949
    :pswitch_1
    invoke-virtual {v14}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v55

    .line 15950
    .local v55, "intentExtras":Landroid/os/Bundle;
    if-eqz v55, :cond_d

    const-string v4, "android.intent.extra.UID"

    move-object/from16 v0, v55

    invoke-virtual {v0, v4}, Landroid/os/Bundle;->getInt(Ljava/lang/String;)I

    move-result v74

    .line 15952
    .local v74, "uid":I
    :goto_5
    if-ltz v74, :cond_5

    .line 15953
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v47

    .line 15954
    .local v47, "bs":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v47

    .line 15955
    :try_start_2
    move-object/from16 v0, v47

    move/from16 v1, v74

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->removeUidStatsLocked(I)V

    .line 15956
    monitor-exit v47
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 15957
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    move/from16 v0, v74

    invoke-virtual {v4, v0}, Lcom/android/server/AppOpsService;->uidRemoved(I)V

    goto/16 :goto_3

    .line 15947
    .end local v47    # "bs":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v55    # "intentExtras":Landroid/os/Bundle;
    .end local v74    # "uid":I
    :sswitch_a
    const-string v6, "android.intent.action.UID_REMOVED"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_c

    const/4 v4, 0x0

    goto :goto_4

    :sswitch_b
    const-string v6, "android.intent.action.EXTERNAL_APPLICATIONS_UNAVAILABLE"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_c

    const/4 v4, 0x1

    goto :goto_4

    :sswitch_c
    const-string v6, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_c

    const/4 v4, 0x2

    goto :goto_4

    :sswitch_d
    const-string v6, "android.intent.action.PACKAGE_REMOVED"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_c

    const/4 v4, 0x3

    goto :goto_4

    :sswitch_e
    const-string v6, "android.intent.action.PACKAGE_CHANGED"

    move-object/from16 v0, v45

    invoke-virtual {v0, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_c

    const/4 v4, 0x4

    goto :goto_4

    .line 15950
    .restart local v55    # "intentExtras":Landroid/os/Bundle;
    :cond_d
    const/16 v74, -0x1

    goto :goto_5

    .line 15956
    .restart local v47    # "bs":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local v74    # "uid":I
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit v47
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v4

    .line 15963
    .end local v47    # "bs":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v55    # "intentExtras":Landroid/os/Bundle;
    .end local v74    # "uid":I
    :pswitch_2
    const-string v4, "android.intent.extra.changed_package_list"

    invoke-virtual {v14, v4}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v60

    .line 15965
    .local v60, "list":[Ljava/lang/String;
    if-eqz v60, :cond_5

    move-object/from16 v0, v60

    array-length v4, v0

    if-lez v4, :cond_5

    .line 15966
    const/16 v53, 0x0

    .local v53, "i":I
    :goto_6
    move-object/from16 v0, v60

    array-length v4, v0

    move/from16 v0, v53

    if-ge v0, v4, :cond_e

    .line 15967
    aget-object v5, v60, v53

    const/4 v6, -0x1

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    const/4 v11, 0x0

    const-string v13, "storage unmount"

    move-object/from16 v4, p0

    move/from16 v12, p15

    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 15966
    add-int/lit8 v53, v53, 0x1

    goto :goto_6

    .line 15970
    :cond_e
    const/4 v4, -0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->cleanupRecentTasksLocked(I)V

    .line 15971
    const/4 v4, 0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v60

    move/from16 v2, p15

    invoke-direct {v0, v4, v1, v2}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    goto/16 :goto_3

    .line 15977
    .end local v53    # "i":I
    .end local v60    # "list":[Ljava/lang/String;
    :pswitch_3
    const/4 v4, -0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->cleanupRecentTasksLocked(I)V

    goto/16 :goto_3

    .line 15981
    :pswitch_4
    invoke-virtual {v14}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v51

    .line 15983
    .local v51, "data":Landroid/net/Uri;
    if-eqz v51, :cond_5

    invoke-virtual/range {v51 .. v51}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v5

    .local v5, "ssp":Ljava/lang/String;
    if-eqz v5, :cond_5

    .line 15984
    const-string v4, "android.intent.action.PACKAGE_REMOVED"

    move-object/from16 v0, v45

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v66

    .line 15985
    .local v66, "removed":Z
    if-eqz v66, :cond_10

    const-string v4, "android.intent.extra.REPLACING"

    const/4 v6, 0x0

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    if-nez v4, :cond_10

    const/4 v11, 0x1

    .line 15987
    .local v11, "fullUninstall":Z
    :goto_7
    const-string v4, "android.intent.extra.DONT_KILL_APP"

    const/4 v6, 0x0

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    if-nez v4, :cond_f

    .line 15988
    const-string v4, "android.intent.extra.UID"

    const/4 v6, -0x1

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v4

    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v6

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v10, 0x0

    if-eqz v66, :cond_11

    const-string v13, "pkg removed"

    :goto_8
    move-object/from16 v4, p0

    move/from16 v12, p15

    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 15993
    :cond_f
    if-eqz v66, :cond_12

    .line 15994
    const/4 v4, 0x0

    const/4 v6, 0x1

    new-array v6, v6, [Ljava/lang/String;

    const/4 v7, 0x0

    aput-object v5, v6, v7

    move-object/from16 v0, p0

    move/from16 v1, p15

    invoke-direct {v0, v4, v6, v1}, Lcom/android/server/am/ActivityManagerService;->sendPackageBroadcastLocked(I[Ljava/lang/String;I)V

    .line 15996
    if-eqz v11, :cond_5

    .line 15997
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    const-string v6, "android.intent.extra.UID"

    const/4 v7, -0x1

    invoke-virtual {v14, v6, v7}, Landroid/content/Intent;->getIntExtra(Ljava/lang/String;I)I

    move-result v6

    invoke-virtual {v4, v6, v5}, Lcom/android/server/AppOpsService;->packageRemoved(ILjava/lang/String;)V

    .line 16001
    const/4 v4, 0x1

    move-object/from16 v0, p0

    move/from16 v1, p15

    invoke-direct {v0, v5, v1, v4}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V

    .line 16003
    move-object/from16 v0, p0

    move/from16 v1, p15

    invoke-direct {v0, v5, v1}, Lcom/android/server/am/ActivityManagerService;->removeTasksByPackageNameLocked(Ljava/lang/String;I)V

    .line 16004
    if-nez p15, :cond_5

    .line 16005
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4, v5}, Lcom/android/server/am/TaskPersister;->removeFromPackageCache(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 15985
    .end local v11    # "fullUninstall":Z
    :cond_10
    const/4 v11, 0x0

    goto :goto_7

    .line 15988
    .restart local v11    # "fullUninstall":Z
    :cond_11
    const-string v13, "pkg changed"

    goto :goto_8

    .line 16009
    :cond_12
    move-object/from16 v0, p0

    move/from16 v1, p15

    invoke-direct {v0, v5, v1}, Lcom/android/server/am/ActivityManagerService;->removeTasksByRemovedPackageComponentsLocked(Ljava/lang/String;I)V

    .line 16010
    if-nez p15, :cond_5

    .line 16011
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4, v5}, Lcom/android/server/am/TaskPersister;->addOtherDeviceTasksToRecentsLocked(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 16020
    .end local v5    # "ssp":Ljava/lang/String;
    .end local v11    # "fullUninstall":Z
    .end local v51    # "data":Landroid/net/Uri;
    .end local v66    # "removed":Z
    :pswitch_5
    invoke-virtual {v14}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v51

    .line 16022
    .restart local v51    # "data":Landroid/net/Uri;
    if-eqz v51, :cond_5

    invoke-virtual/range {v51 .. v51}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v5

    .restart local v5    # "ssp":Ljava/lang/String;
    if-eqz v5, :cond_5

    .line 16023
    const-string v4, "android.intent.extra.REPLACING"

    const/4 v6, 0x0

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v69

    .line 16025
    .local v69, "replacing":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    move/from16 v0, v69

    invoke-virtual {v4, v5, v0}, Lcom/android/server/am/CompatModePackages;->handlePackageAddedLocked(Ljava/lang/String;Z)V

    .line 16027
    if-eqz v69, :cond_13

    .line 16028
    move-object/from16 v0, p0

    move/from16 v1, p15

    invoke-direct {v0, v5, v1}, Lcom/android/server/am/ActivityManagerService;->removeTasksByRemovedPackageComponentsLocked(Ljava/lang/String;I)V

    .line 16030
    :cond_13
    if-nez p15, :cond_5

    .line 16031
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4, v5}, Lcom/android/server/am/TaskPersister;->addOtherDeviceTasksToRecentsLocked(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 16039
    .end local v5    # "ssp":Ljava/lang/String;
    .end local v51    # "data":Landroid/net/Uri;
    .end local v69    # "replacing":Z
    :pswitch_6
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0xd

    invoke-virtual {v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    goto/16 :goto_3

    .line 16043
    :pswitch_7
    const-string v4, "android.intent.extra.TIME_PREF_24_HOUR_FORMAT"

    const/4 v6, 0x0

    invoke-virtual {v14, v4, v6}, Landroid/content/Intent;->getBooleanExtra(Ljava/lang/String;Z)Z

    move-result v4

    if-eqz v4, :cond_14

    const/16 v57, 0x1

    .line 16046
    .local v57, "is24Hour":I
    :goto_9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x29

    const/4 v8, 0x0

    move/from16 v0, v57

    invoke-virtual {v6, v7, v0, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v6

    invoke-virtual {v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 16047
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v4}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v72

    .line 16048
    .local v72, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v72

    .line 16049
    :try_start_4
    invoke-virtual/range {v72 .. v72}, Lcom/android/internal/os/BatteryStatsImpl;->noteCurrentTimeChangedLocked()V

    .line 16050
    monitor-exit v72

    goto/16 :goto_3

    :catchall_1
    move-exception v4

    monitor-exit v72
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v4

    .line 16043
    .end local v57    # "is24Hour":I
    .end local v72    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_14
    const/16 v57, 0x0

    goto :goto_9

    .line 16053
    :pswitch_8
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x1c

    invoke-virtual {v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessage(I)Z

    goto/16 :goto_3

    .line 16056
    :pswitch_9
    const-string v4, "android.intent.extra.PROXY_INFO"

    invoke-virtual {v14, v4}, Landroid/content/Intent;->getParcelableExtra(Ljava/lang/String;)Landroid/os/Parcelable;

    move-result-object v64

    check-cast v64, Landroid/net/ProxyInfo;

    .line 16057
    .local v64, "proxy":Landroid/net/ProxyInfo;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x1d

    move-object/from16 v0, v64

    invoke-virtual {v6, v7, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v6

    invoke-virtual {v4, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    goto/16 :goto_3

    .line 16073
    .end local v64    # "proxy":Landroid/net/ProxyInfo;
    :cond_15
    if-eqz p9, :cond_16

    .line 16074
    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Can\'t broadcast sticky intent "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " and enforce permission "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p9

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16076
    const/4 v4, -0x1

    goto/16 :goto_0

    .line 16078
    :cond_16
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-eqz v4, :cond_17

    .line 16079
    new-instance v4, Ljava/lang/SecurityException;

    const-string v6, "Sticky broadcasts can\'t target a specific component"

    invoke-direct {v4, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16084
    :cond_17
    const/4 v4, -0x1

    move/from16 v0, p15

    if-eq v0, v4, :cond_19

    .line 16088
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    const/4 v6, -0x1

    invoke-virtual {v4, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v73

    check-cast v73, Landroid/util/ArrayMap;

    .line 16090
    .local v73, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v73, :cond_19

    .line 16091
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v73

    invoke-virtual {v0, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v61

    check-cast v61, Ljava/util/ArrayList;

    .line 16092
    .local v61, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v61, :cond_19

    .line 16093
    invoke-virtual/range {v61 .. v61}, Ljava/util/ArrayList;->size()I

    move-result v42

    .line 16095
    .local v42, "N":I
    const/16 v53, 0x0

    .restart local v53    # "i":I
    :goto_a
    move/from16 v0, v53

    move/from16 v1, v42

    if-ge v0, v1, :cond_19

    .line 16096
    move-object/from16 v0, v61

    move/from16 v1, v53

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/Intent;

    invoke-virtual {v14, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v4

    if-eqz v4, :cond_18

    .line 16097
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Sticky broadcast "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " for user "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, p15

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " conflicts with existing global broadcast"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-direct {v4, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16095
    :cond_18
    add-int/lit8 v53, v53, 0x1

    goto :goto_a

    .line 16105
    .end local v42    # "N":I
    .end local v53    # "i":I
    .end local v61    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_19
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p15

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v73

    check-cast v73, Landroid/util/ArrayMap;

    .line 16106
    .restart local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-nez v73, :cond_1a

    .line 16107
    new-instance v73, Landroid/util/ArrayMap;

    .end local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    invoke-direct/range {v73 .. v73}, Landroid/util/ArrayMap;-><init>()V

    .line 16108
    .restart local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p15

    move-object/from16 v1, v73

    invoke-virtual {v4, v0, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 16110
    :cond_1a
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v73

    invoke-virtual {v0, v4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v61

    check-cast v61, Ljava/util/ArrayList;

    .line 16111
    .restart local v61    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-nez v61, :cond_1b

    .line 16112
    new-instance v61, Ljava/util/ArrayList;

    .end local v61    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-direct/range {v61 .. v61}, Ljava/util/ArrayList;-><init>()V

    .line 16113
    .restart local v61    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, v73

    move-object/from16 v1, v61

    invoke-virtual {v0, v4, v1}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 16115
    :cond_1b
    invoke-virtual/range {v61 .. v61}, Ljava/util/ArrayList;->size()I

    move-result v42

    .line 16117
    .restart local v42    # "N":I
    const/16 v53, 0x0

    .restart local v53    # "i":I
    :goto_b
    move/from16 v0, v53

    move/from16 v1, v42

    if-ge v0, v1, :cond_1c

    .line 16118
    move-object/from16 v0, v61

    move/from16 v1, v53

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/Intent;

    invoke-virtual {v14, v4}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v4

    if-eqz v4, :cond_20

    .line 16120
    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v14}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    move-object/from16 v0, v61

    move/from16 v1, v53

    invoke-virtual {v0, v1, v4}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 16124
    :cond_1c
    move/from16 v0, v53

    move/from16 v1, v42

    if-lt v0, v1, :cond_1d

    .line 16125
    new-instance v4, Landroid/content/Intent;

    invoke-direct {v4, v14}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    move-object/from16 v0, v61

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 16130
    .end local v42    # "N":I
    .end local v53    # "i":I
    .end local v61    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_1d
    const/4 v4, -0x1

    move/from16 v0, p15

    if-ne v0, v4, :cond_21

    .line 16132
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    move-object/from16 v76, v0

    .line 16139
    .local v76, "users":[I
    :goto_c
    const/16 v33, 0x0

    .line 16140
    .local v33, "receivers":Ljava/util/List;
    const/16 v22, 0x0

    .line 16142
    .local v22, "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    invoke-virtual {v14}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v6, 0x40000000    # 2.0f

    and-int/2addr v4, v6

    if-nez v4, :cond_1e

    .line 16144
    move-object/from16 v0, p0

    move-object/from16 v1, p4

    move/from16 v2, p14

    move-object/from16 v3, v76

    invoke-direct {v0, v14, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I)Ljava/util/List;

    move-result-object v33

    .line 16146
    :cond_1e
    invoke-virtual {v14}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    if-nez v4, :cond_25

    .line 16147
    const/4 v4, -0x1

    move/from16 v0, p15

    if-ne v0, v4, :cond_24

    const/16 v4, 0x7d0

    move/from16 v0, p14

    if-ne v0, v4, :cond_24

    .line 16149
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v75

    .line 16150
    .local v75, "ums":Lcom/android/server/pm/UserManagerService;
    const/16 v53, 0x0

    .restart local v53    # "i":I
    :goto_d
    move-object/from16 v0, v76

    array-length v4, v0

    move/from16 v0, v53

    if-ge v0, v4, :cond_25

    .line 16151
    const-string v4, "no_debugging_features"

    aget v6, v76, v53

    move-object/from16 v0, v75

    invoke-virtual {v0, v4, v6}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v4

    if-eqz v4, :cond_22

    .line 16150
    :cond_1f
    :goto_e
    add-int/lit8 v53, v53, 0x1

    goto :goto_d

    .line 16117
    .end local v22    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v33    # "receivers":Ljava/util/List;
    .end local v75    # "ums":Lcom/android/server/pm/UserManagerService;
    .end local v76    # "users":[I
    .restart local v42    # "N":I
    .restart local v61    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .restart local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_20
    add-int/lit8 v53, v53, 0x1

    goto/16 :goto_b

    .line 16135
    .end local v42    # "N":I
    .end local v53    # "i":I
    .end local v61    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    .end local v73    # "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_21
    const/4 v4, 0x1

    new-array v0, v4, [I

    move-object/from16 v76, v0

    const/4 v4, 0x0

    aput p15, v76, v4

    .restart local v76    # "users":[I
    goto :goto_c

    .line 16155
    .restart local v22    # "registeredReceivers":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .restart local v33    # "receivers":Ljava/util/List;
    .restart local v53    # "i":I
    .restart local v75    # "ums":Lcom/android/server/pm/UserManagerService;
    :cond_22
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const/4 v6, 0x0

    aget v7, v76, v53

    move-object/from16 v0, p4

    invoke-virtual {v4, v14, v0, v6, v7}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v65

    .line 16158
    .local v65, "registeredReceiversForUser":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    if-nez v22, :cond_23

    .line 16159
    move-object/from16 v22, v65

    goto :goto_e

    .line 16160
    :cond_23
    if-eqz v65, :cond_1f

    .line 16161
    move-object/from16 v0, v22

    move-object/from16 v1, v65

    invoke-interface {v0, v1}, Ljava/util/List;->addAll(Ljava/util/Collection;)Z

    goto :goto_e

    .line 16165
    .end local v53    # "i":I
    .end local v65    # "registeredReceiversForUser":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/BroadcastFilter;>;"
    .end local v75    # "ums":Lcom/android/server/pm/UserManagerService;
    :cond_24
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    const/4 v6, 0x0

    move-object/from16 v0, p4

    move/from16 v1, p15

    invoke-virtual {v4, v14, v0, v6, v1}, Lcom/android/server/IntentResolver;->queryIntent(Landroid/content/Intent;Ljava/lang/String;ZI)Ljava/util/List;

    move-result-object v22

    .line 16170
    :cond_25
    invoke-virtual {v14}, Landroid/content/Intent;->getFlags()I

    move-result v4

    const/high16 v6, 0x20000000

    and-int/2addr v4, v6

    if-eqz v4, :cond_2b

    const/16 v67, 0x1

    .line 16176
    .local v67, "replacePending":Z
    :goto_f
    if-eqz v22, :cond_2c

    invoke-interface/range {v22 .. v22}, Ljava/util/List;->size()I

    move-result v43

    .line 16177
    .local v43, "NR":I
    :goto_10
    if-nez p11, :cond_27

    if-lez v43, :cond_27

    .line 16181
    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v13

    .line 16182
    .local v13, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v12, Lcom/android/server/am/BroadcastRecord;

    const/16 v29, 0x0

    move-object/from16 v15, p1

    move-object/from16 v16, p2

    move/from16 v17, p13

    move/from16 v18, p14

    move-object/from16 v19, p4

    move-object/from16 v20, p9

    move/from16 v21, p10

    move-object/from16 v23, p5

    move/from16 v24, p6

    move-object/from16 v25, p7

    move-object/from16 v26, p8

    move/from16 v27, p11

    move/from16 v28, p12

    move/from16 v30, p15

    invoke-direct/range {v12 .. v30}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;ILjava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 16188
    .local v12, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v67, :cond_2d

    invoke-virtual {v13, v12}, Lcom/android/server/am/BroadcastQueue;->replaceParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v4

    if-eqz v4, :cond_2d

    const/16 v68, 0x1

    .line 16189
    .local v68, "replaced":Z
    :goto_11
    if-nez v68, :cond_26

    .line 16190
    invoke-virtual {v13, v12}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 16191
    invoke-virtual {v13}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 16193
    :cond_26
    const/16 v22, 0x0

    .line 16194
    const/16 v43, 0x0

    .line 16198
    .end local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v68    # "replaced":Z
    :cond_27
    const/16 v56, 0x0

    .line 16199
    .local v56, "ir":I
    if-eqz v33, :cond_35

    .line 16206
    const/16 v71, 0x0

    .line 16207
    .local v71, "skipPackages":[Ljava/lang/String;
    const-string v4, "android.intent.action.PACKAGE_ADDED"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_28

    const-string v4, "android.intent.action.PACKAGE_RESTARTED"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_28

    const-string v4, "android.intent.action.PACKAGE_DATA_CLEARED"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2e

    .line 16210
    :cond_28
    invoke-virtual {v14}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v51

    .line 16211
    .restart local v51    # "data":Landroid/net/Uri;
    if-eqz v51, :cond_29

    .line 16212
    invoke-virtual/range {v51 .. v51}, Landroid/net/Uri;->getSchemeSpecificPart()Ljava/lang/String;

    move-result-object v63

    .line 16213
    .local v63, "pkgName":Ljava/lang/String;
    if-eqz v63, :cond_29

    .line 16214
    const/4 v4, 0x1

    new-array v0, v4, [Ljava/lang/String;

    move-object/from16 v71, v0

    .end local v71    # "skipPackages":[Ljava/lang/String;
    const/4 v4, 0x0

    aput-object v63, v71, v4

    .line 16220
    .end local v51    # "data":Landroid/net/Uri;
    .end local v63    # "pkgName":Ljava/lang/String;
    .restart local v71    # "skipPackages":[Ljava/lang/String;
    :cond_29
    :goto_12
    if-eqz v71, :cond_30

    move-object/from16 v0, v71

    array-length v4, v0

    if-lez v4, :cond_30

    .line 16221
    move-object/from16 v46, v71

    .local v46, "arr$":[Ljava/lang/String;
    move-object/from16 v0, v46

    array-length v0, v0

    move/from16 v59, v0

    .local v59, "len$":I
    const/16 v54, 0x0

    .local v54, "i$":I
    :goto_13
    move/from16 v0, v54

    move/from16 v1, v59

    if-ge v0, v1, :cond_30

    aget-object v70, v46, v54

    .line 16222
    .local v70, "skipPackage":Ljava/lang/String;
    if-eqz v70, :cond_2f

    .line 16223
    invoke-interface/range {v33 .. v33}, Ljava/util/List;->size()I

    move-result v44

    .line 16224
    .local v44, "NT":I
    const/16 v58, 0x0

    .local v58, "it":I
    :goto_14
    move/from16 v0, v58

    move/from16 v1, v44

    if-ge v0, v1, :cond_2f

    .line 16225
    move-object/from16 v0, v33

    move/from16 v1, v58

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v50

    check-cast v50, Landroid/content/pm/ResolveInfo;

    .line 16226
    .local v50, "curt":Landroid/content/pm/ResolveInfo;
    move-object/from16 v0, v50

    iget-object v4, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v4, v4, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v70

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2a

    .line 16227
    move-object/from16 v0, v33

    move/from16 v1, v58

    invoke-interface {v0, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 16228
    add-int/lit8 v58, v58, -0x1

    .line 16229
    add-int/lit8 v44, v44, -0x1

    .line 16224
    :cond_2a
    add-int/lit8 v58, v58, 0x1

    goto :goto_14

    .line 16170
    .end local v43    # "NR":I
    .end local v44    # "NT":I
    .end local v46    # "arr$":[Ljava/lang/String;
    .end local v50    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v54    # "i$":I
    .end local v56    # "ir":I
    .end local v58    # "it":I
    .end local v59    # "len$":I
    .end local v67    # "replacePending":Z
    .end local v70    # "skipPackage":Ljava/lang/String;
    .end local v71    # "skipPackages":[Ljava/lang/String;
    :cond_2b
    const/16 v67, 0x0

    goto/16 :goto_f

    .line 16176
    .restart local v67    # "replacePending":Z
    :cond_2c
    const/16 v43, 0x0

    goto/16 :goto_10

    .line 16188
    .restart local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .restart local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v43    # "NR":I
    :cond_2d
    const/16 v68, 0x0

    goto/16 :goto_11

    .line 16217
    .end local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v56    # "ir":I
    .restart local v71    # "skipPackages":[Ljava/lang/String;
    :cond_2e
    const-string v4, "android.intent.action.EXTERNAL_APPLICATIONS_AVAILABLE"

    invoke-virtual {v14}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_29

    .line 16218
    const-string v4, "android.intent.extra.changed_package_list"

    invoke-virtual {v14, v4}, Landroid/content/Intent;->getStringArrayExtra(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v71

    goto :goto_12

    .line 16221
    .restart local v46    # "arr$":[Ljava/lang/String;
    .restart local v54    # "i$":I
    .restart local v59    # "len$":I
    .restart local v70    # "skipPackage":Ljava/lang/String;
    :cond_2f
    add-int/lit8 v54, v54, 0x1

    goto :goto_13

    .line 16236
    .end local v46    # "arr$":[Ljava/lang/String;
    .end local v54    # "i$":I
    .end local v59    # "len$":I
    .end local v70    # "skipPackage":Ljava/lang/String;
    :cond_30
    if-eqz v33, :cond_33

    invoke-interface/range {v33 .. v33}, Ljava/util/List;->size()I

    move-result v44

    .line 16237
    .restart local v44    # "NT":I
    :goto_15
    const/16 v58, 0x0

    .line 16238
    .restart local v58    # "it":I
    const/16 v50, 0x0

    .line 16239
    .restart local v50    # "curt":Landroid/content/pm/ResolveInfo;
    const/16 v49, 0x0

    .line 16240
    .local v49, "curr":Lcom/android/server/am/BroadcastFilter;
    :goto_16
    move/from16 v0, v58

    move/from16 v1, v44

    if-ge v0, v1, :cond_35

    move/from16 v0, v56

    move/from16 v1, v43

    if-ge v0, v1, :cond_35

    .line 16241
    if-nez v50, :cond_31

    .line 16242
    move-object/from16 v0, v33

    move/from16 v1, v58

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v50

    .end local v50    # "curt":Landroid/content/pm/ResolveInfo;
    check-cast v50, Landroid/content/pm/ResolveInfo;

    .line 16244
    .restart local v50    # "curt":Landroid/content/pm/ResolveInfo;
    :cond_31
    if-nez v49, :cond_32

    .line 16245
    move-object/from16 v0, v22

    move/from16 v1, v56

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v49

    .end local v49    # "curr":Lcom/android/server/am/BroadcastFilter;
    check-cast v49, Lcom/android/server/am/BroadcastFilter;

    .line 16247
    .restart local v49    # "curr":Lcom/android/server/am/BroadcastFilter;
    :cond_32
    invoke-virtual/range {v49 .. v49}, Lcom/android/server/am/BroadcastFilter;->getPriority()I

    move-result v4

    move-object/from16 v0, v50

    iget v6, v0, Landroid/content/pm/ResolveInfo;->priority:I

    if-lt v4, v6, :cond_34

    .line 16249
    move-object/from16 v0, v33

    move/from16 v1, v58

    move-object/from16 v2, v49

    invoke-interface {v0, v1, v2}, Ljava/util/List;->add(ILjava/lang/Object;)V

    .line 16250
    add-int/lit8 v56, v56, 0x1

    .line 16251
    const/16 v49, 0x0

    .line 16252
    add-int/lit8 v58, v58, 0x1

    .line 16253
    add-int/lit8 v44, v44, 0x1

    goto :goto_16

    .line 16236
    .end local v44    # "NT":I
    .end local v49    # "curr":Lcom/android/server/am/BroadcastFilter;
    .end local v50    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v58    # "it":I
    :cond_33
    const/16 v44, 0x0

    goto :goto_15

    .line 16256
    .restart local v44    # "NT":I
    .restart local v49    # "curr":Lcom/android/server/am/BroadcastFilter;
    .restart local v50    # "curt":Landroid/content/pm/ResolveInfo;
    .restart local v58    # "it":I
    :cond_34
    add-int/lit8 v58, v58, 0x1

    .line 16257
    const/16 v50, 0x0

    goto :goto_16

    .line 16261
    .end local v44    # "NT":I
    .end local v49    # "curr":Lcom/android/server/am/BroadcastFilter;
    .end local v50    # "curt":Landroid/content/pm/ResolveInfo;
    .end local v58    # "it":I
    .end local v71    # "skipPackages":[Ljava/lang/String;
    :cond_35
    :goto_17
    move/from16 v0, v56

    move/from16 v1, v43

    if-ge v0, v1, :cond_37

    .line 16262
    if-nez v33, :cond_36

    .line 16263
    new-instance v33, Ljava/util/ArrayList;

    .end local v33    # "receivers":Ljava/util/List;
    invoke-direct/range {v33 .. v33}, Ljava/util/ArrayList;-><init>()V

    .line 16265
    .restart local v33    # "receivers":Ljava/util/List;
    :cond_36
    move-object/from16 v0, v22

    move/from16 v1, v56

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, v33

    invoke-interface {v0, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 16266
    add-int/lit8 v56, v56, 0x1

    goto :goto_17

    .line 16269
    :cond_37
    if-eqz v33, :cond_38

    invoke-interface/range {v33 .. v33}, Ljava/util/List;->size()I

    move-result v4

    if-gtz v4, :cond_39

    :cond_38
    if-eqz p5, :cond_3a

    .line 16271
    :cond_39
    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v13

    .line 16272
    .restart local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v12, Lcom/android/server/am/BroadcastRecord;

    const/16 v40, 0x0

    move-object/from16 v23, v12

    move-object/from16 v24, v13

    move-object/from16 v25, v14

    move-object/from16 v26, p1

    move-object/from16 v27, p2

    move/from16 v28, p13

    move/from16 v29, p14

    move-object/from16 v30, p4

    move-object/from16 v31, p9

    move/from16 v32, p10

    move-object/from16 v34, p5

    move/from16 v35, p6

    move-object/from16 v36, p7

    move-object/from16 v37, p8

    move/from16 v38, p11

    move/from16 v39, p12

    move/from16 v41, p15

    invoke-direct/range {v23 .. v41}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;ILjava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 16283
    .restart local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v67, :cond_3b

    invoke-virtual {v13, v12}, Lcom/android/server/am/BroadcastQueue;->replaceOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)Z

    move-result v4

    if-eqz v4, :cond_3b

    const/16 v68, 0x1

    .line 16284
    .restart local v68    # "replaced":Z
    :goto_18
    if-nez v68, :cond_3a

    .line 16285
    invoke-virtual {v13, v12}, Lcom/android/server/am/BroadcastQueue;->enqueueOrderedBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 16286
    invoke-virtual {v13}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V

    .line 16290
    .end local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v68    # "replaced":Z
    :cond_3a
    const/4 v4, 0x0

    goto/16 :goto_0

    .line 16283
    .restart local v12    # "r":Lcom/android/server/am/BroadcastRecord;
    .restart local v13    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_3b
    const/16 v68, 0x0

    goto :goto_18

    .line 15926
    :sswitch_data_0
    .sparse-switch
        -0x7babae4b -> :sswitch_8
        -0x6849e2b4 -> :sswitch_0
        -0x53ae571d -> :sswitch_3
        -0x4fc097e4 -> :sswitch_4
        0xa480416 -> :sswitch_2
        0xaf62806 -> :sswitch_9
        0x1df32313 -> :sswitch_6
        0x1e1f7f95 -> :sswitch_7
        0x1f50b9c2 -> :sswitch_1
        0x5c1076e2 -> :sswitch_5
    .end sparse-switch

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_0
        :pswitch_5
        :pswitch_6
        :pswitch_7
        :pswitch_8
        :pswitch_9
    .end packed-switch

    .line 15947
    :sswitch_data_1
    .sparse-switch
        -0x6849e2b4 -> :sswitch_a
        -0x53ae571d -> :sswitch_b
        -0x4fc097e4 -> :sswitch_c
        0xa480416 -> :sswitch_e
        0x1f50b9c2 -> :sswitch_d
    .end sparse-switch

    :pswitch_data_1
    .packed-switch 0x0
        :pswitch_1
        :pswitch_2
        :pswitch_3
        :pswitch_4
        :pswitch_4
    .end packed-switch
.end method

.method private canClearIdentity(III)Z
    .locals 6
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I

    .prologue
    const/4 v4, -0x1

    const/4 v5, 0x1

    .line 9858
    invoke-static {p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    if-ne v0, p3, :cond_1

    .line 9867
    :cond_0
    :goto_0
    return v5

    .line 9861
    :cond_1
    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    move-object v0, p0

    move v2, p1

    move v3, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-eqz v0, :cond_0

    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    move-object v0, p0

    move v2, p1

    move v3, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v0

    if-eqz v0, :cond_0

    .line 9867
    const/4 v5, 0x0

    goto :goto_0
.end method

.method private final canGcNowLocked()Z
    .locals 6

    .prologue
    .line 17678
    const/4 v3, 0x0

    .line 17679
    .local v3, "processingBroadcasts":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_2

    aget-object v4, v0, v1

    .line 17680
    .local v4, "q":Lcom/android/server/am/BroadcastQueue;
    iget-object v5, v4, Lcom/android/server/am/BroadcastQueue;->mParallelBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-nez v5, :cond_0

    iget-object v5, v4, Lcom/android/server/am/BroadcastQueue;->mOrderedBroadcasts:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-eqz v5, :cond_1

    .line 17681
    :cond_0
    const/4 v3, 0x1

    .line 17679
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 17684
    .end local v4    # "q":Lcom/android/server/am/BroadcastQueue;
    :cond_2
    if-nez v3, :cond_4

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v5

    if-nez v5, :cond_3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStackSupervisor;->allResumedActivitiesIdle()Z

    move-result v5

    if-eqz v5, :cond_4

    :cond_3
    const/4 v5, 0x1

    :goto_1
    return v5

    :cond_4
    const/4 v5, 0x0

    goto :goto_1
.end method

.method private final checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;
    .locals 21
    .param p1, "cpi"    # Landroid/content/pm/ProviderInfo;
    .param p2, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "userId"    # I
    .param p4, "checkUser"    # Z

    .prologue
    .line 8977
    if-eqz p2, :cond_0

    move-object/from16 v0, p2

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 8978
    .local v5, "callingPid":I
    :goto_0
    if-eqz p2, :cond_1

    move-object/from16 v0, p2

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 8979
    .local v6, "callingUid":I
    :goto_1
    const/4 v15, 0x0

    .line 8980
    .local v15, "checkedGrants":Z
    if-eqz p4, :cond_4

    .line 8982
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result v20

    .line 8983
    .local v20, "tmpTargetUserId":I
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move/from16 v0, v20

    if-eq v0, v4, :cond_3

    .line 8984
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v20

    move/from16 v3, p4

    invoke-virtual {v0, v6, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 8985
    const/16 v17, 0x0

    .line 9048
    .end local v20    # "tmpTargetUserId":I
    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_2
    return-object v17

    .line 8977
    .end local v5    # "callingPid":I
    .end local v6    # "callingUid":I
    .end local v15    # "checkedGrants":Z
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    goto :goto_0

    .line 8978
    .restart local v5    # "callingPid":I
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    goto :goto_1

    .line 8987
    .restart local v6    # "callingUid":I
    .restart local v15    # "checkedGrants":Z
    .restart local v20    # "tmpTargetUserId":I
    :cond_2
    const/4 v15, 0x1

    .line 8989
    :cond_3
    const/4 v8, 0x0

    const/4 v9, 0x0

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "checkContentProviderPermissionLocked "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p3

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 8992
    move/from16 v0, p3

    move/from16 v1, v20

    if-eq v0, v1, :cond_4

    .line 8997
    const/4 v15, 0x0

    .line 9000
    .end local v20    # "tmpTargetUserId":I
    :cond_4
    move-object/from16 v0, p1

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_5

    .line 9003
    const/16 v17, 0x0

    goto :goto_2

    .line 9005
    :cond_5
    move-object/from16 v0, p1

    iget-object v8, v0, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_6

    .line 9008
    const/16 v17, 0x0

    goto :goto_2

    .line 9011
    :cond_6
    move-object/from16 v0, p1

    iget-object v0, v0, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    move-object/from16 v19, v0

    .line 9012
    .local v19, "pps":[Landroid/content/pm/PathPermission;
    if-eqz v19, :cond_9

    .line 9013
    move-object/from16 v0, v19

    array-length v0, v0

    move/from16 v16, v0

    .line 9014
    .local v16, "i":I
    :cond_7
    if-lez v16, :cond_9

    .line 9015
    add-int/lit8 v16, v16, -0x1

    .line 9016
    aget-object v18, v19, v16

    .line 9017
    .local v18, "pp":Landroid/content/pm/PathPermission;
    invoke-virtual/range {v18 .. v18}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v8

    .line 9018
    .local v8, "pprperm":Ljava/lang/String;
    if-eqz v8, :cond_8

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v12, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_8

    .line 9021
    const/16 v17, 0x0

    goto/16 :goto_2

    .line 9023
    :cond_8
    invoke-virtual/range {v18 .. v18}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v10

    .line 9024
    .local v10, "ppwperm":Ljava/lang/String;
    if-eqz v10, :cond_7

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v13, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-boolean v14, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    move-object/from16 v9, p0

    move v11, v5

    move v12, v6

    invoke-virtual/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_7

    .line 9027
    const/16 v17, 0x0

    goto/16 :goto_2

    .line 9031
    .end local v8    # "pprperm":Ljava/lang/String;
    .end local v10    # "ppwperm":Ljava/lang/String;
    .end local v16    # "i":I
    .end local v18    # "pp":Landroid/content/pm/PathPermission;
    :cond_9
    if-nez v15, :cond_a

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v6, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z

    move-result v4

    if-eqz v4, :cond_a

    .line 9032
    const/16 v17, 0x0

    goto/16 :goto_2

    .line 9036
    :cond_a
    move-object/from16 v0, p1

    iget-boolean v4, v0, Landroid/content/pm/ProviderInfo;->exported:Z

    if-nez v4, :cond_c

    .line 9037
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Permission Denial: opening provider "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " from "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    if-eqz p2, :cond_b

    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_3
    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " (pid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ", uid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ") that is not exported from uid "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    .line 9047
    .local v17, "msg":Ljava/lang/String;
    :goto_4
    const-string v4, "ActivityManager"

    move-object/from16 v0, v17

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_2

    .line 9037
    .end local v17    # "msg":Ljava/lang/String;
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_b
    const-string p2, "(null)"

    goto :goto_3

    .line 9042
    :cond_c
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Permission Denial: opening provider "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " from "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    if-eqz p2, :cond_d

    .end local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :goto_5
    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " (pid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ", uid="

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, ") requires "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v7, " or "

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v7, v0, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    invoke-virtual {v4, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v17

    .restart local v17    # "msg":Ljava/lang/String;
    goto :goto_4

    .end local v17    # "msg":Ljava/lang/String;
    .restart local p2    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_d
    const-string p2, "(null)"

    goto :goto_5
.end method

.method private final checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z
    .locals 13
    .param p1, "pm"    # Landroid/content/pm/IPackageManager;
    .param p2, "pi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "uid"    # I
    .param p5, "modeFlags"    # I
    .param p6, "considerUidPermissions"    # Z

    .prologue
    .line 6921
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, p4

    if-ne v12, v0, :cond_0

    .line 6922
    const/4 v12, 0x1

    .line 6997
    :goto_0
    return v12

    .line 6923
    :cond_0
    iget-boolean v12, p2, Landroid/content/pm/ProviderInfo;->exported:Z

    if-nez v12, :cond_1

    .line 6924
    const/4 v12, 0x0

    goto :goto_0

    .line 6927
    :cond_1
    and-int/lit8 v12, p5, 0x1

    if-nez v12, :cond_7

    const/4 v10, 0x1

    .line 6928
    .local v10, "readMet":Z
    :goto_1
    and-int/lit8 v12, p5, 0x2

    if-nez v12, :cond_8

    const/4 v11, 0x1

    .line 6931
    .local v11, "writeMet":Z
    :goto_2
    if-nez v10, :cond_2

    :try_start_0
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-eqz v12, :cond_2

    if-eqz p6, :cond_2

    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    move/from16 v0, p4

    invoke-interface {p1, v12, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_2

    .line 6933
    const/4 v10, 0x1

    .line 6935
    :cond_2
    if-nez v11, :cond_3

    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-eqz v12, :cond_3

    if-eqz p6, :cond_3

    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    move/from16 v0, p4

    invoke-interface {p1, v12, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_3

    .line 6937
    const/4 v11, 0x1

    .line 6942
    :cond_3
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-nez v12, :cond_9

    const/4 v1, 0x1

    .line 6943
    .local v1, "allowDefaultRead":Z
    :goto_3
    iget-object v12, p2, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-nez v12, :cond_a

    const/4 v2, 0x1

    .line 6946
    .local v2, "allowDefaultWrite":Z
    :goto_4
    iget-object v8, p2, Landroid/content/pm/ProviderInfo;->pathPermissions:[Landroid/content/pm/PathPermission;

    .line 6947
    .local v8, "pps":[Landroid/content/pm/PathPermission;
    if-eqz v8, :cond_d

    .line 6948
    move-object/from16 v0, p3

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v12}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v5

    .line 6949
    .local v5, "path":Ljava/lang/String;
    array-length v4, v8

    .line 6950
    .local v4, "i":I
    :cond_4
    :goto_5
    if-lez v4, :cond_d

    if-eqz v10, :cond_5

    if-nez v11, :cond_d

    .line 6951
    :cond_5
    add-int/lit8 v4, v4, -0x1

    .line 6952
    aget-object v6, v8, v4

    .line 6953
    .local v6, "pp":Landroid/content/pm/PathPermission;
    invoke-virtual {v6, v5}, Landroid/content/pm/PathPermission;->match(Ljava/lang/String;)Z

    move-result v12

    if-eqz v12, :cond_4

    .line 6954
    if-nez v10, :cond_6

    .line 6955
    invoke-virtual {v6}, Landroid/content/pm/PathPermission;->getReadPermission()Ljava/lang/String;

    move-result-object v7

    .line 6960
    .local v7, "pprperm":Ljava/lang/String;
    if-eqz v7, :cond_6

    .line 6961
    if-eqz p6, :cond_b

    move/from16 v0, p4

    invoke-interface {p1, v7, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v12

    if-nez v12, :cond_b

    .line 6963
    const/4 v10, 0x1

    .line 6969
    .end local v7    # "pprperm":Ljava/lang/String;
    :cond_6
    :goto_6
    if-nez v11, :cond_4

    .line 6970
    invoke-virtual {v6}, Landroid/content/pm/PathPermission;->getWritePermission()Ljava/lang/String;

    move-result-object v9

    .line 6975
    .local v9, "ppwperm":Ljava/lang/String;
    if-eqz v9, :cond_4

    .line 6976
    if-eqz p6, :cond_c

    move/from16 v0, p4

    invoke-interface {p1, v9, v0}, Landroid/content/pm/IPackageManager;->checkUidPermission(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v12

    if-nez v12, :cond_c

    .line 6978
    const/4 v11, 0x1

    goto :goto_5

    .line 6927
    .end local v1    # "allowDefaultRead":Z
    .end local v2    # "allowDefaultWrite":Z
    .end local v4    # "i":I
    .end local v5    # "path":Ljava/lang/String;
    .end local v6    # "pp":Landroid/content/pm/PathPermission;
    .end local v8    # "pps":[Landroid/content/pm/PathPermission;
    .end local v9    # "ppwperm":Ljava/lang/String;
    .end local v10    # "readMet":Z
    .end local v11    # "writeMet":Z
    :cond_7
    const/4 v10, 0x0

    goto :goto_1

    .line 6928
    .restart local v10    # "readMet":Z
    :cond_8
    const/4 v11, 0x0

    goto :goto_2

    .line 6942
    .restart local v11    # "writeMet":Z
    :cond_9
    const/4 v1, 0x0

    goto :goto_3

    .line 6943
    .restart local v1    # "allowDefaultRead":Z
    :cond_a
    const/4 v2, 0x0

    goto :goto_4

    .line 6965
    .restart local v2    # "allowDefaultWrite":Z
    .restart local v4    # "i":I
    .restart local v5    # "path":Ljava/lang/String;
    .restart local v6    # "pp":Landroid/content/pm/PathPermission;
    .restart local v7    # "pprperm":Ljava/lang/String;
    .restart local v8    # "pps":[Landroid/content/pm/PathPermission;
    :cond_b
    const/4 v1, 0x0

    goto :goto_6

    .line 6980
    .end local v7    # "pprperm":Ljava/lang/String;
    .restart local v9    # "ppwperm":Ljava/lang/String;
    :cond_c
    const/4 v2, 0x0

    goto :goto_5

    .line 6990
    .end local v4    # "i":I
    .end local v5    # "path":Ljava/lang/String;
    .end local v6    # "pp":Landroid/content/pm/PathPermission;
    .end local v9    # "ppwperm":Ljava/lang/String;
    :cond_d
    if-eqz v1, :cond_e

    const/4 v10, 0x1

    .line 6991
    :cond_e
    if-eqz v2, :cond_f

    const/4 v11, 0x1

    .line 6997
    :cond_f
    if-eqz v10, :cond_10

    if-eqz v11, :cond_10

    const/4 v12, 0x1

    goto/16 :goto_0

    .line 6993
    .end local v1    # "allowDefaultRead":Z
    .end local v2    # "allowDefaultWrite":Z
    .end local v8    # "pps":[Landroid/content/pm/PathPermission;
    :catch_0
    move-exception v3

    .line 6994
    .local v3, "e":Landroid/os/RemoteException;
    const/4 v12, 0x0

    goto/16 :goto_0

    .line 6997
    .end local v3    # "e":Landroid/os/RemoteException;
    .restart local v1    # "allowDefaultRead":Z
    .restart local v2    # "allowDefaultWrite":Z
    .restart local v8    # "pps":[Landroid/content/pm/PathPermission;
    :cond_10
    const/4 v12, 0x0

    goto/16 :goto_0
.end method

.method private final checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    .locals 7
    .param p1, "pm"    # Landroid/content/pm/IPackageManager;
    .param p2, "pi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "uid"    # I
    .param p5, "modeFlags"    # I

    .prologue
    const/4 v6, 0x1

    .line 6910
    invoke-static {p4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v0

    iget v1, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v0, v1, :cond_0

    .line 6911
    const-string v0, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v1, -0x1

    invoke-static {v0, p4, v1, v6}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v0

    if-eqz v0, :cond_0

    .line 6913
    const/4 v0, 0x0

    .line 6916
    :goto_0
    return v0

    :cond_0
    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v5, p5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z

    move-result v0

    goto :goto_0
.end method

.method private checkTime(JLjava/lang/String;)V
    .locals 7
    .param p1, "startTime"    # J
    .param p3, "where"    # Ljava/lang/String;

    .prologue
    .line 9151
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v0

    .line 9152
    .local v0, "now":J
    sub-long v2, v0, p1

    const-wide/16 v4, 0x3e8

    cmp-long v2, v2, v4

    if-lez v2, :cond_0

    .line 9154
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Slow operation: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    sub-long v4, v0, p1

    invoke-virtual {v3, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "ms so far, now at "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9156
    :cond_0
    return-void
.end method

.method private final checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z
    .locals 11
    .param p1, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p2, "uid"    # I
    .param p3, "modeFlags"    # I

    .prologue
    const/4 v8, 0x0

    const/4 v7, 0x1

    .line 7042
    and-int/lit8 v9, p3, 0x40

    if-eqz v9, :cond_1

    move v6, v7

    .line 7043
    .local v6, "persistable":Z
    :goto_0
    if-eqz v6, :cond_2

    const/4 v3, 0x3

    .line 7047
    .local v3, "minStrength":I
    :goto_1
    if-nez p2, :cond_3

    .line 7070
    :cond_0
    :goto_2
    return v7

    .end local v3    # "minStrength":I
    .end local v6    # "persistable":Z
    :cond_1
    move v6, v8

    .line 7042
    goto :goto_0

    .restart local v6    # "persistable":Z
    :cond_2
    move v3, v7

    .line 7043
    goto :goto_1

    .line 7051
    .restart local v3    # "minStrength":I
    :cond_3
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v9, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/ArrayMap;

    .line 7052
    .local v5, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v5, :cond_4

    move v7, v8

    goto :goto_2

    .line 7055
    :cond_4
    invoke-virtual {v5, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    .line 7056
    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    if-eqz v1, :cond_5

    invoke-virtual {v1, p3}, Lcom/android/server/am/UriPermission;->getStrength(I)I

    move-result v9

    if-ge v9, v3, :cond_0

    .line 7061
    :cond_5
    invoke-virtual {v5}, Landroid/util/ArrayMap;->size()I

    move-result v0

    .line 7062
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_3
    if-ge v2, v0, :cond_7

    .line 7063
    invoke-virtual {v5, v2}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/UriPermission;

    .line 7064
    .local v4, "perm":Lcom/android/server/am/UriPermission;
    iget-object v9, v4, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-boolean v9, v9, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    if-eqz v9, :cond_6

    iget-object v9, p1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    iget-object v10, v4, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v10, v10, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v9, v10}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v9

    if-eqz v9, :cond_6

    invoke-virtual {v4, p3}, Lcom/android/server/am/UriPermission;->getStrength(I)I

    move-result v9

    if-ge v9, v3, :cond_0

    .line 7062
    :cond_6
    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .end local v4    # "perm":Lcom/android/server/am/UriPermission;
    :cond_7
    move v7, v8

    .line 7070
    goto :goto_2
.end method

.method private final cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z
    .locals 12
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "restarting"    # Z
    .param p3, "allowRestart"    # Z
    .param p4, "index"    # I

    .prologue
    .line 14870
    if-ltz p4, :cond_0

    .line 14871
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 14872
    iget v7, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v7}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 14875
    :cond_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14876
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14879
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    if-eqz v7, :cond_1

    iget-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-nez v7, :cond_1

    .line 14880
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    invoke-virtual {v7}, Landroid/app/Dialog;->dismiss()V

    .line 14881
    const/4 v7, 0x0

    iput-object v7, p1, Lcom/android/server/am/ProcessRecord;->crashDialog:Landroid/app/Dialog;

    .line 14883
    :cond_1
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    if-eqz v7, :cond_2

    .line 14884
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    invoke-virtual {v7}, Landroid/app/Dialog;->dismiss()V

    .line 14885
    const/4 v7, 0x0

    iput-object v7, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    .line 14887
    :cond_2
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    if-eqz v7, :cond_3

    .line 14888
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    invoke-virtual {v7}, Landroid/app/Dialog;->dismiss()V

    .line 14889
    const/4 v7, 0x0

    iput-object v7, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    .line 14892
    :cond_3
    const/4 v7, 0x0

    iput-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 14893
    const/4 v7, 0x0

    iput-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 14895
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {p1, v7}, Lcom/android/server/am/ProcessRecord;->resetPackageList(Lcom/android/server/am/ProcessStatsService;)V

    .line 14896
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->unlinkDeathRecipient()V

    .line 14897
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {p1, v7}, Lcom/android/server/am/ProcessRecord;->makeInactive(Lcom/android/server/am/ProcessStatsService;)V

    .line 14898
    const/4 v7, 0x0

    iput-object v7, p1, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    .line 14899
    const/4 v7, 0x0

    iput-object v7, p1, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 14900
    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual {p0, p1, v7, v8}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 14901
    const/4 v7, 0x0

    iput-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 14902
    const/4 v7, 0x0

    iput-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    .line 14903
    const/4 v7, 0x0

    iput-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    .line 14904
    const/4 v7, 0x0

    iput-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    .line 14905
    const/4 v7, 0x0

    iput-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    .line 14907
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v7, p1, p3}, Lcom/android/server/am/ActiveServices;->killServicesLocked(Lcom/android/server/am/ProcessRecord;Z)V

    .line 14909
    const/4 v6, 0x0

    .line 14912
    .local v6, "restart":Z
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v7}, Landroid/util/ArrayMap;->size()I

    move-result v7

    add-int/lit8 v4, v7, -0x1

    .local v4, "i":I
    :goto_0
    if-ltz v4, :cond_8

    .line 14913
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v7, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ContentProviderRecord;

    .line 14914
    .local v3, "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->bad:Z

    if-nez v7, :cond_4

    if-nez p3, :cond_7

    :cond_4
    const/4 v0, 0x1

    .line 14915
    .local v0, "always":Z
    :goto_1
    invoke-direct {p0, p1, v3, v0}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    move-result v7

    if-nez v7, :cond_5

    if-eqz v0, :cond_6

    .line 14918
    :cond_5
    const/4 v6, 0x1

    .line 14921
    :cond_6
    const/4 v7, 0x0

    iput-object v7, v3, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 14922
    const/4 v7, 0x0

    iput-object v7, v3, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 14912
    add-int/lit8 v4, v4, -0x1

    goto :goto_0

    .line 14914
    .end local v0    # "always":Z
    :cond_7
    const/4 v0, 0x0

    goto :goto_1

    .line 14924
    .end local v3    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_8
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v7}, Landroid/util/ArrayMap;->clear()V

    .line 14927
    const/4 v7, 0x0

    invoke-virtual {p0, p1, v7}, Lcom/android/server/am/ActivityManagerService;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    move-result v7

    if-eqz v7, :cond_9

    .line 14928
    const/4 v6, 0x1

    .line 14932
    :cond_9
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v7

    if-nez v7, :cond_b

    .line 14933
    const/4 v4, 0x0

    :goto_2
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    if-ge v4, v7, :cond_a

    .line 14934
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ContentProviderConnection;

    .line 14935
    .local v2, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-object v7, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v7, v7, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v7, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14936
    iget v7, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget v9, v9, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v10, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v10, v10, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v7, v8, v9, v10}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 14933
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 14939
    .end local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_a
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->clear()V

    .line 14960
    :cond_b
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 14963
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v7}, Landroid/util/ArraySet;->size()I

    move-result v7

    add-int/lit8 v4, v7, -0x1

    :goto_3
    if-ltz v4, :cond_c

    .line 14964
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v7, v4}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ReceiverList;

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    .line 14963
    add-int/lit8 v4, v4, -0x1

    goto :goto_3

    .line 14966
    :cond_c
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v7}, Landroid/util/ArraySet;->clear()V

    .line 14969
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v7, :cond_d

    iget v7, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v8, v8, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v8, v8, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v7, v8, :cond_d

    .line 14973
    :try_start_0
    const-string v7, "backup"

    invoke-static {v7}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v7

    invoke-static {v7}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v1

    .line 14975
    .local v1, "bm":Landroid/app/backup/IBackupManager;
    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v1, v7}, Landroid/app/backup/IBackupManager;->agentDisconnected(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 14981
    .end local v1    # "bm":Landroid/app/backup/IBackupManager;
    :cond_d
    :goto_4
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    add-int/lit8 v4, v7, -0x1

    :goto_5
    if-ltz v4, :cond_f

    .line 14982
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 14983
    .local v5, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v7, v5, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v7, v8, :cond_e

    .line 14984
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 14985
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v7, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14981
    :cond_e
    add-int/lit8 v4, v4, -0x1

    goto :goto_5

    .line 14988
    .end local v5    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    :cond_f
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v8, 0x20

    iget v9, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v10, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    const/4 v11, 0x0

    invoke-virtual {v7, v8, v9, v10, v11}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v7

    invoke-virtual {v7}, Landroid/os/Message;->sendToTarget()V

    .line 14992
    if-eqz p2, :cond_10

    .line 14993
    const/4 v7, 0x0

    .line 15048
    :goto_6
    return v7

    .line 14996
    :cond_10
    iget-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v7, :cond_11

    iget-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v7, :cond_16

    .line 14999
    :cond_11
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v9, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v7, v8, v9}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)V

    .line 15000
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v7, v8}, Landroid/util/SparseArray;->remove(I)V

    .line 15001
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v7, p1, :cond_12

    .line 15002
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v9, 0x19

    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->userId:I

    const/4 v11, 0x0

    invoke-virtual {v8, v9, v10, v11}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v8

    invoke-virtual {v7, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 15004
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 15017
    :cond_12
    :goto_7
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 15019
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-ne p1, v7, :cond_13

    .line 15020
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    .line 15022
    :cond_13
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-ne p1, v7, :cond_14

    .line 15023
    const/4 v7, 0x0

    iput-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    .line 15026
    :cond_14
    if-eqz v6, :cond_17

    iget-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v7, :cond_17

    .line 15029
    if-gez p4, :cond_15

    .line 15030
    iget v7, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v7}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 15032
    :cond_15
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v9, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v7, v8, v9, p1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 15033
    const-string v7, "restart"

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-direct {p0, p1, v7, v8}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 15034
    const/4 v7, 0x1

    goto :goto_6

    .line 15006
    :cond_16
    iget-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-nez v7, :cond_12

    .line 15010
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v7

    if-gez v7, :cond_12

    .line 15011
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15012
    const/4 v6, 0x1

    goto :goto_7

    .line 15035
    :cond_17
    iget v7, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v7, :cond_19

    iget v7, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v8, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v7, v8, :cond_19

    .line 15038
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v8

    .line 15039
    :try_start_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v9, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v7, v9}, Landroid/util/SparseArray;->remove(I)V

    .line 15040
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v9, 0x14

    invoke-virtual {v7, v9, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 15041
    monitor-exit v8
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15042
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v7, v8, v9}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 15043
    iget-boolean v7, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v7, :cond_18

    .line 15044
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v9, v9, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v7, v8, v9}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 15046
    :cond_18
    const/4 v7, 0x0

    invoke-virtual {p1, v7}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 15048
    :cond_19
    const/4 v7, 0x0

    goto/16 :goto_6

    .line 15041
    :catchall_0
    move-exception v7

    :try_start_2
    monitor-exit v8
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v7

    .line 14976
    :catch_0
    move-exception v7

    goto/16 :goto_4
.end method

.method private cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;Z)V
    .locals 14
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;
    .param p2, "killProcess"    # Z

    .prologue
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v11, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    invoke-static/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->flymeBroadcaseRecentTasksChanged(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v11

    invoke-virtual {v11}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 8374
    .local v0, "component":Landroid/content/ComponentName;
    if-nez v0, :cond_1

    .line 8375
    const-string v11, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "No component for base intent of task: "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v11, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8431
    :cond_0
    return-void

    .line 8379
    :cond_1
    if-eqz p2, :cond_0

    .line 8384
    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    .line 8385
    .local v5, "pkg":Ljava/lang/String;
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 8386
    .local v9, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v11}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v6

    .line 8387
    .local v6, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    invoke-virtual {v6}, Landroid/util/ArrayMap;->size()I

    move-result v11

    if-ge v1, v11, :cond_7

    .line 8389
    invoke-virtual {v6, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/SparseArray;

    .line 8390
    .local v10, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    const/4 v2, 0x0

    .local v2, "j":I
    :goto_1
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v11

    if-ge v2, v11, :cond_6

    .line 8391
    invoke-virtual {v10, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ProcessRecord;

    .line 8392
    .local v8, "proc":Lcom/android/server/am/ProcessRecord;
    iget v11, v8, Lcom/android/server/am/ProcessRecord;->userId:I

    iget v12, p1, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v11, v12, :cond_3

    .line 8390
    :cond_2
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 8396
    :cond_3
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eq v8, v11, :cond_2

    .line 8400
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v11, v5}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v11

    if-eqz v11, :cond_2

    .line 8405
    const/4 v3, 0x0

    .local v3, "k":I
    :goto_3
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v11

    if-ge v3, v11, :cond_5

    .line 8406
    iget-object v11, v8, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v11, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/ActivityRecord;

    iget-object v4, v11, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 8407
    .local v4, "otherTask":Lcom/android/server/am/TaskRecord;
    iget v11, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    iget v12, v4, Lcom/android/server/am/TaskRecord;->taskId:I

    if-eq v11, v12, :cond_4

    iget-boolean v11, v4, Lcom/android/server/am/TaskRecord;->inRecents:Z

    if-nez v11, :cond_0

    .line 8405
    :cond_4
    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .line 8415
    .end local v4    # "otherTask":Lcom/android/server/am/TaskRecord;
    :cond_5
    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 8387
    .end local v3    # "k":I
    .end local v8    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 8420
    .end local v2    # "j":I
    .end local v10    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_7
    iget-object v11, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    new-instance v12, Landroid/content/Intent;

    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v13

    invoke-direct {v12, v13}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    invoke-virtual {v11, p1, v0, v12}, Lcom/android/server/am/ActiveServices;->cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;Landroid/content/ComponentName;Landroid/content/Intent;)V

    .line 8423
    const/4 v1, 0x0

    :goto_4
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v11

    if-ge v1, v11, :cond_0

    .line 8424
    invoke-virtual {v9, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ProcessRecord;

    .line 8425
    .local v7, "pr":Lcom/android/server/am/ProcessRecord;
    iget v11, v7, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    if-nez v11, :cond_8

    .line 8426
    const-string v11, "remove task"

    const/4 v12, 0x1

    invoke-virtual {v7, v11, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 8423
    :goto_5
    add-int/lit8 v1, v1, 0x1

    goto :goto_4

    .line 8428
    :cond_8
    const-string v11, "remove task"

    iput-object v11, v7, Lcom/android/server/am/ProcessRecord;->waitingToKill:Ljava/lang/String;

    goto :goto_5
.end method

.method private clearProfilerLocked()V
    .locals 3

    .prologue
    const/4 v2, 0x0

    const/4 v1, 0x0

    .line 18621
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v0, :cond_0

    .line 18623
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v0}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 18627
    :cond_0
    :goto_0
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    .line 18628
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 18629
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    .line 18630
    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 18631
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    .line 18632
    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    .line 18633
    return-void

    .line 18624
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method private collectReceiverComponents(Landroid/content/Intent;Ljava/lang/String;I[I)Ljava/util/List;
    .locals 16
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;
    .param p3, "callingUid"    # I
    .param p4, "users"    # [I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/content/Intent;",
            "Ljava/lang/String;",
            "I[I)",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ResolveInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 15763
    const/4 v8, 0x0

    .line 15765
    .local v8, "receivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    const/4 v11, 0x0

    .line 15766
    .local v11, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    const/4 v10, 0x0

    .line 15767
    .local v10, "scannedFirstReceivers":Z
    move-object/from16 v2, p4

    .local v2, "arr$":[I
    :try_start_0
    array-length v6, v2

    .local v6, "len$":I
    const/4 v5, 0x0

    .local v5, "i$":I
    :goto_0
    if-ge v5, v6, :cond_a

    aget v13, v2, v5

    .line 15769
    .local v13, "user":I
    const/16 v14, 0x7d0

    move/from16 v0, p3

    if-ne v0, v14, :cond_1

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v14

    const-string v15, "no_debugging_features"

    invoke-virtual {v14, v15, v13}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v14

    if-eqz v14, :cond_1

    .line 15767
    :cond_0
    :goto_1
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 15774
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v14

    const/16 v15, 0x400

    move-object/from16 v0, p1

    move-object/from16 v1, p2

    invoke-interface {v14, v0, v1, v15, v13}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;

    move-result-object v7

    .line 15776
    .local v7, "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v13, :cond_3

    if-eqz v7, :cond_3

    .line 15779
    const/4 v4, 0x0

    .local v4, "i":I
    :goto_2
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_3

    .line 15780
    invoke-interface {v7, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/pm/ResolveInfo;

    .line 15781
    .local v9, "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x20000000

    and-int/2addr v14, v15

    if-eqz v14, :cond_2

    .line 15782
    invoke-interface {v7, v4}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 15783
    add-int/lit8 v4, v4, -0x1

    .line 15779
    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_2

    .line 15787
    .end local v4    # "i":I
    .end local v9    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_3
    if-eqz v7, :cond_4

    invoke-interface {v7}, Ljava/util/List;->size()I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v14

    if-nez v14, :cond_4

    .line 15788
    const/4 v7, 0x0

    .line 15790
    :cond_4
    if-nez v8, :cond_5

    .line 15791
    move-object v8, v7

    goto :goto_1

    .line 15792
    :cond_5
    if-eqz v7, :cond_0

    .line 15797
    if-nez v10, :cond_7

    .line 15799
    const/4 v10, 0x1

    .line 15800
    const/4 v4, 0x0

    .restart local v4    # "i":I
    move-object v12, v11

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .local v12, "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_3
    :try_start_1
    invoke-interface {v8}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_6

    .line 15801
    invoke-interface {v8, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/pm/ResolveInfo;

    .line 15802
    .restart local v9    # "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x40000000    # 2.0f

    and-int/2addr v14, v15

    if-eqz v14, :cond_e

    .line 15803
    new-instance v3, Landroid/content/ComponentName;

    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v14, v14, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v15, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v3, v14, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 15805
    .local v3, "cn":Landroid/content/ComponentName;
    if-nez v12, :cond_d

    .line 15806
    new-instance v11, Ljava/util/HashSet;

    invoke-direct {v11}, Ljava/util/HashSet;-><init>()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 15808
    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_4
    :try_start_2
    invoke-virtual {v11, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 15800
    .end local v3    # "cn":Landroid/content/ComponentName;
    :goto_5
    add-int/lit8 v4, v4, 0x1

    move-object v12, v11

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_3

    .end local v9    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_6
    move-object v11, v12

    .line 15814
    .end local v4    # "i":I
    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_7
    const/4 v4, 0x0

    .restart local v4    # "i":I
    move-object v12, v11

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_6
    :try_start_3
    invoke-interface {v7}, Ljava/util/List;->size()I

    move-result v14

    if-ge v4, v14, :cond_c

    .line 15815
    invoke-interface {v7, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Landroid/content/pm/ResolveInfo;

    .line 15816
    .restart local v9    # "ri":Landroid/content/pm/ResolveInfo;
    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget v14, v14, Landroid/content/pm/ActivityInfo;->flags:I

    const/high16 v15, 0x40000000    # 2.0f

    and-int/2addr v14, v15

    if-eqz v14, :cond_9

    .line 15817
    new-instance v3, Landroid/content/ComponentName;

    iget-object v14, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v14, v14, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    iget-object v15, v9, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v15, v15, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v3, v14, v15}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 15819
    .restart local v3    # "cn":Landroid/content/ComponentName;
    if-nez v12, :cond_b

    .line 15820
    new-instance v11, Ljava/util/HashSet;

    invoke-direct {v11}, Ljava/util/HashSet;-><init>()V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 15822
    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :goto_7
    :try_start_4
    invoke-virtual {v11, v3}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v14

    if-nez v14, :cond_8

    .line 15823
    invoke-virtual {v11, v3}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    .line 15824
    invoke-interface {v8, v9}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    .line 15814
    .end local v3    # "cn":Landroid/content/ComponentName;
    :cond_8
    :goto_8
    add-int/lit8 v4, v4, 0x1

    move-object v12, v11

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_6

    .line 15827
    :cond_9
    :try_start_5
    invoke-interface {v8, v9}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_8

    .line 15832
    .end local v4    # "i":I
    .end local v5    # "i$":I
    .end local v6    # "len$":I
    .end local v7    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .end local v9    # "ri":Landroid/content/pm/ResolveInfo;
    .end local v13    # "user":I
    :catch_0
    move-exception v14

    .line 15835
    :cond_a
    :goto_9
    return-object v8

    .line 15832
    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v4    # "i":I
    .restart local v5    # "i$":I
    .restart local v6    # "len$":I
    .restart local v7    # "newReceivers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v13    # "user":I
    :catch_1
    move-exception v14

    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_9

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v3    # "cn":Landroid/content/ComponentName;
    .restart local v9    # "ri":Landroid/content/pm/ResolveInfo;
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_b
    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_7

    .end local v3    # "cn":Landroid/content/ComponentName;
    .end local v9    # "ri":Landroid/content/pm/ResolveInfo;
    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_c
    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto/16 :goto_1

    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v3    # "cn":Landroid/content/ComponentName;
    .restart local v9    # "ri":Landroid/content/pm/ResolveInfo;
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_d
    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_4

    .end local v3    # "cn":Landroid/content/ComponentName;
    .end local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    :cond_e
    move-object v11, v12

    .end local v12    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    .restart local v11    # "singleUserReceivers":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    goto :goto_5
.end method

.method private final computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I
    .locals 31
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cachedAdj"    # I
    .param p3, "TOP_APP"    # Lcom/android/server/am/ProcessRecord;
    .param p4, "doingAll"    # Z
    .param p5, "now"    # J

    .prologue
    .line 16950
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    if-ne v3, v5, :cond_0

    .line 16952
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 17581
    :goto_0
    return v3

    .line 16955
    :cond_0
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_1

    .line 16956
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 16957
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 16958
    const/16 v3, 0xd

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 16959
    const/16 v3, 0xf

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    goto :goto_0

    .line 16962
    :cond_1
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 16963
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 16964
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 16965
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 16966
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 16968
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 16970
    .local v10, "activitiesSize":I
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    if-gtz v3, :cond_6

    .line 16973
    const-string v3, "fixed"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 16974
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 16975
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 16976
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 16977
    const/4 v3, -0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 16978
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 16983
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 16984
    move-object/from16 v0, p1

    move-object/from16 v1, p3

    if-ne v0, v1, :cond_4

    .line 16985
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 16994
    :cond_2
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-nez v3, :cond_3

    .line 16995
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 16997
    :cond_3
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    goto/16 :goto_0

    .line 16986
    :cond_4
    if-lez v10, :cond_2

    .line 16987
    const/16 v23, 0x0

    .local v23, "j":I
    :goto_1
    move/from16 v0, v23

    if-ge v0, v10, :cond_2

    .line 16988
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    move/from16 v0, v23

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Lcom/android/server/am/ActivityRecord;

    .line 16989
    .local v28, "r":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v28

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-eqz v3, :cond_5

    .line 16990
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 16987
    :cond_5
    add-int/lit8 v23, v23, 0x1

    goto :goto_1

    .line 17000
    .end local v23    # "j":I
    .end local v28    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_6
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    .line 17007
    const/16 v20, 0x0

    .line 17009
    .local v20, "foregroundActivities":Z
    move-object/from16 v0, p1

    move-object/from16 v1, p3

    if-ne v0, v1, :cond_8

    .line 17011
    const/4 v11, 0x0

    .line 17012
    .local v11, "adj":I
    const/16 v30, -0x1

    .line 17013
    .local v30, "schedGroup":I
    const-string v3, "top-activity"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17014
    const/16 v20, 0x1

    .line 17015
    const/16 v25, 0x2

    .line 17054
    .local v25, "procState":I
    :goto_2
    if-nez v20, :cond_11

    if-lez v10, :cond_11

    .line 17055
    const/16 v23, 0x0

    .restart local v23    # "j":I
    :goto_3
    move/from16 v0, v23

    if-ge v0, v10, :cond_11

    .line 17056
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    move/from16 v0, v23

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v28

    check-cast v28, Lcom/android/server/am/ActivityRecord;

    .line 17057
    .restart local v28    # "r":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v3, v0, :cond_e

    .line 17058
    const-string v3, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Wtf, activity "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v28

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " in proc activity list not using proc "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, "?!?"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v3, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 17055
    :cond_7
    :goto_4
    add-int/lit8 v23, v23, 0x1

    goto :goto_3

    .line 17016
    .end local v11    # "adj":I
    .end local v23    # "j":I
    .end local v25    # "procState":I
    .end local v28    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v30    # "schedGroup":I
    :cond_8
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v3, :cond_9

    .line 17018
    const/4 v11, 0x0

    .line 17019
    .restart local v11    # "adj":I
    const/16 v30, -0x1

    .line 17020
    .restart local v30    # "schedGroup":I
    const-string v3, "instrumentation"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17021
    const/16 v25, 0x3

    .restart local v25    # "procState":I
    goto :goto_2

    .line 17022
    .end local v11    # "adj":I
    .end local v25    # "procState":I
    .end local v30    # "schedGroup":I
    :cond_9
    invoke-direct/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->isReceivingBroadcast(Lcom/android/server/am/ProcessRecord;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v27

    .local v27, "queue":Lcom/android/server/am/BroadcastQueue;
    if-eqz v27, :cond_b

    .line 17027
    const/4 v11, 0x0

    .line 17028
    .restart local v11    # "adj":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    move-object/from16 v0, v27

    if-ne v0, v3, :cond_a

    const/16 v30, -0x1

    .line 17030
    .restart local v30    # "schedGroup":I
    :goto_5
    const-string v3, "broadcast"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17031
    const/16 v25, 0x8

    .restart local v25    # "procState":I
    goto :goto_2

    .line 17028
    .end local v25    # "procState":I
    .end local v30    # "schedGroup":I
    :cond_a
    const/16 v30, 0x0

    goto :goto_5

    .line 17032
    .end local v11    # "adj":I
    :cond_b
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->executingServices:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-lez v3, :cond_d

    .line 17035
    const/4 v11, 0x0

    .line 17036
    .restart local v11    # "adj":I
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->execServicesFg:Z

    if-eqz v3, :cond_c

    const/16 v30, -0x1

    .line 17038
    .restart local v30    # "schedGroup":I
    :goto_6
    const-string v3, "exec-service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17039
    const/16 v25, 0x7

    .restart local v25    # "procState":I
    goto/16 :goto_2

    .line 17036
    .end local v25    # "procState":I
    .end local v30    # "schedGroup":I
    :cond_c
    const/16 v30, 0x0

    goto :goto_6

    .line 17043
    .end local v11    # "adj":I
    :cond_d
    const/16 v30, 0x0

    .line 17046
    .restart local v30    # "schedGroup":I
    move/from16 v11, p2

    .line 17047
    .restart local v11    # "adj":I
    const/16 v25, 0xd

    .line 17048
    .restart local v25    # "procState":I
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17049
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 17050
    const-string v3, "cch-empty"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_2

    .line 17062
    .end local v27    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v23    # "j":I
    .restart local v28    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_e
    move-object/from16 v0, v28

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-eqz v3, :cond_22

    .line 17064
    const/4 v3, 0x1

    if-le v11, v3, :cond_f

    .line 17065
    const/4 v11, 0x1

    .line 17066
    const-string v3, "visible"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17068
    :cond_f
    const/4 v3, 0x2

    move/from16 v0, v25

    if-le v0, v3, :cond_10

    .line 17069
    const/16 v25, 0x2

    .line 17071
    :cond_10
    const/16 v30, -0x1

    .line 17072
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17073
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 17074
    const/16 v20, 0x1

    .line 17117
    .end local v23    # "j":I
    .end local v28    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_11
    const/4 v3, 0x2

    if-le v11, v3, :cond_12

    .line 17118
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eqz v3, :cond_2a

    .line 17120
    const/4 v11, 0x2

    .line 17121
    const/16 v25, 0x3

    .line 17122
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17123
    const-string v3, "fg-service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17124
    const/16 v30, -0x1

    .line 17136
    :cond_12
    :goto_7
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_14

    .line 17137
    const/4 v3, 0x4

    if-le v11, v3, :cond_13

    .line 17139
    const/4 v11, 0x4

    .line 17140
    const/16 v30, 0x0

    .line 17141
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17142
    const-string v3, "heavy"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17144
    :cond_13
    const/4 v3, 0x6

    move/from16 v0, v25

    if-le v0, v3, :cond_14

    .line 17145
    const/16 v25, 0x6

    .line 17149
    :cond_14
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_16

    .line 17150
    const/4 v3, 0x6

    if-le v11, v3, :cond_15

    .line 17153
    const/4 v11, 0x6

    .line 17154
    const/16 v30, 0x0

    .line 17155
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17156
    const-string v3, "home"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17158
    :cond_15
    const/16 v3, 0x9

    move/from16 v0, v25

    if-le v0, v3, :cond_16

    .line 17159
    const/16 v25, 0x9

    .line 17163
    :cond_16
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_18

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_18

    .line 17164
    const/4 v3, 0x7

    if-le v11, v3, :cond_17

    .line 17168
    const/4 v11, 0x7

    .line 17169
    const/16 v30, 0x0

    .line 17170
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17171
    const-string v3, "previous"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17173
    :cond_17
    const/16 v3, 0xa

    move/from16 v0, v25

    if-le v0, v3, :cond_18

    .line 17174
    const/16 v25, 0xa

    .line 17185
    :cond_18
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjSeq:I

    .line 17186
    move-object/from16 v0, p1

    iput v11, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 17187
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasStartedServices:Z

    .line 17189
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v3, :cond_1b

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v3, v3, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_1b

    .line 17191
    const/4 v3, 0x3

    if-le v11, v3, :cond_1a

    .line 17193
    const/4 v11, 0x3

    .line 17194
    const/4 v3, 0x4

    move/from16 v0, v25

    if-le v0, v3, :cond_19

    .line 17195
    const/16 v25, 0x4

    .line 17197
    :cond_19
    const-string v3, "backup"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17198
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17200
    :cond_1a
    const/4 v3, 0x5

    move/from16 v0, v25

    if-le v0, v3, :cond_1b

    .line 17201
    const/16 v25, 0x5

    .line 17205
    :cond_1b
    const/16 v24, 0x0

    .line 17207
    .local v24, "mayBeTop":Z
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v22, v3, -0x1

    .line 17208
    .local v22, "is":I
    :goto_8
    if-ltz v22, :cond_47

    if-gtz v11, :cond_1c

    if-eqz v30, :cond_1c

    const/4 v3, 0x2

    move/from16 v0, v25

    if-le v0, v3, :cond_47

    .line 17212
    :cond_1c
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    move/from16 v0, v22

    invoke-virtual {v3, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Lcom/android/server/am/ServiceRecord;

    .line 17213
    .local v29, "s":Lcom/android/server/am/ServiceRecord;
    move-object/from16 v0, v29

    iget-boolean v3, v0, Lcom/android/server/am/ServiceRecord;->startRequested:Z

    if-eqz v3, :cond_1e

    .line 17214
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasStartedServices:Z

    .line 17215
    const/4 v3, 0x7

    move/from16 v0, v25

    if-le v0, v3, :cond_1d

    .line 17216
    const/16 v25, 0x7

    .line 17218
    :cond_1d
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_2b

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_2b

    .line 17223
    const/4 v3, 0x5

    if-le v11, v3, :cond_1e

    .line 17224
    const-string v3, "cch-started-ui-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17245
    :cond_1e
    :goto_9
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v17, v3, -0x1

    .line 17246
    .local v17, "conni":I
    :goto_a
    if-ltz v17, :cond_46

    if-gtz v11, :cond_1f

    if-eqz v30, :cond_1f

    const/4 v3, 0x2

    move/from16 v0, v25

    if-le v0, v3, :cond_46

    .line 17250
    :cond_1f
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->connections:Landroid/util/ArrayMap;

    move/from16 v0, v17

    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/util/ArrayList;

    .line 17251
    .local v15, "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    const/16 v21, 0x0

    .line 17252
    .local v21, "i":I
    :goto_b
    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v3

    move/from16 v0, v21

    if-ge v0, v3, :cond_45

    if-gtz v11, :cond_20

    if-eqz v30, :cond_20

    const/4 v3, 0x2

    move/from16 v0, v25

    if-le v0, v3, :cond_45

    .line 17258
    :cond_20
    move/from16 v0, v21

    invoke-virtual {v15, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ConnectionRecord;

    .line 17259
    .local v19, "cr":Lcom/android/server/am/ConnectionRecord;
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v3, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v3, v0, :cond_2d

    .line 17255
    :cond_21
    :goto_c
    add-int/lit8 v21, v21, 0x1

    goto :goto_b

    .line 17076
    .end local v15    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .end local v17    # "conni":I
    .end local v19    # "cr":Lcom/android/server/am/ConnectionRecord;
    .end local v21    # "i":I
    .end local v22    # "is":I
    .end local v24    # "mayBeTop":Z
    .end local v29    # "s":Lcom/android/server/am/ServiceRecord;
    .restart local v23    # "j":I
    .restart local v28    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_22
    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-eq v3, v5, :cond_23

    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_26

    .line 17077
    :cond_23
    const/4 v3, 0x2

    if-le v11, v3, :cond_24

    .line 17078
    const/4 v11, 0x2

    .line 17079
    const-string v3, "pausing"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17081
    :cond_24
    const/4 v3, 0x2

    move/from16 v0, v25

    if-le v0, v3, :cond_25

    .line 17082
    const/16 v25, 0x2

    .line 17084
    :cond_25
    const/16 v30, -0x1

    .line 17085
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17086
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 17087
    const/16 v20, 0x1

    goto/16 :goto_4

    .line 17088
    :cond_26
    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->STOPPING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_29

    .line 17089
    const/4 v3, 0x2

    if-le v11, v3, :cond_27

    .line 17090
    const/4 v11, 0x2

    .line 17091
    const-string v3, "stopping"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17100
    :cond_27
    move-object/from16 v0, v28

    iget-boolean v3, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v3, :cond_28

    .line 17101
    const/16 v3, 0xa

    move/from16 v0, v25

    if-le v0, v3, :cond_28

    .line 17102
    const/16 v25, 0xa

    .line 17105
    :cond_28
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17106
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->empty:Z

    .line 17107
    const/16 v20, 0x1

    goto/16 :goto_4

    .line 17109
    :cond_29
    const/16 v3, 0xb

    move/from16 v0, v25

    if-le v0, v3, :cond_7

    .line 17110
    const/16 v25, 0xb

    .line 17111
    const-string v3, "cch-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_4

    .line 17125
    .end local v23    # "j":I
    .end local v28    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_2a
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    if-eqz v3, :cond_12

    .line 17127
    const/4 v11, 0x2

    .line 17128
    const/16 v25, 0x3

    .line 17129
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17130
    const-string v3, "force-fg"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17131
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 17132
    const/16 v30, -0x1

    goto/16 :goto_7

    .line 17227
    .restart local v22    # "is":I
    .restart local v24    # "mayBeTop":Z
    .restart local v29    # "s":Lcom/android/server/am/ServiceRecord;
    :cond_2b
    move-object/from16 v0, v29

    iget-wide v6, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    const-wide/32 v8, 0x1b7740

    add-long/2addr v6, v8

    cmp-long v3, p5, v6

    if-gez v3, :cond_2c

    .line 17231
    const/4 v3, 0x5

    if-le v11, v3, :cond_2c

    .line 17232
    const/4 v11, 0x5

    .line 17233
    const-string v3, "started-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17234
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17240
    :cond_2c
    const/4 v3, 0x5

    if-le v11, v3, :cond_1e

    .line 17241
    const-string v3, "cch-started-services"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_9

    .line 17263
    .restart local v15    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .restart local v17    # "conni":I
    .restart local v19    # "cr":Lcom/android/server/am/ConnectionRecord;
    .restart local v21    # "i":I
    :cond_2d
    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x20

    if-nez v3, :cond_36

    .line 17264
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v4, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    .local v4, "client":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v3, p0

    move/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v7, p4

    move-wide/from16 v8, p5

    .line 17265
    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    move-result v13

    .line 17267
    .local v13, "clientAdj":I
    iget v14, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 17268
    .local v14, "clientProcState":I
    const/16 v3, 0xb

    if-lt v14, v3, :cond_2e

    .line 17272
    const/16 v14, 0xd

    .line 17274
    :cond_2e
    const/4 v12, 0x0

    .line 17275
    .local v12, "adjType":Ljava/lang/String;
    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x10

    if-eqz v3, :cond_30

    .line 17278
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_3a

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_3a

    .line 17283
    if-le v11, v13, :cond_2f

    .line 17284
    const-string v12, "cch-bound-ui-services"

    .line 17286
    :cond_2f
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17287
    move v13, v11

    .line 17288
    move/from16 v14, v25

    .line 17304
    :cond_30
    :goto_d
    if-le v11, v13, :cond_31

    .line 17312
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_3c

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_3c

    const/4 v3, 0x2

    if-le v13, v3, :cond_3c

    .line 17314
    const-string v12, "cch-bound-ui-services"

    .line 17337
    :cond_31
    :goto_e
    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x4

    if-nez v3, :cond_44

    .line 17338
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v5, -0x1

    if-ne v3, v5, :cond_32

    .line 17339
    const/16 v30, -0x1

    .line 17341
    :cond_32
    const/4 v3, 0x2

    if-gt v14, v3, :cond_33

    .line 17342
    const/4 v3, 0x2

    if-ne v14, v3, :cond_43

    .line 17352
    const/16 v24, 0x1

    .line 17353
    const/16 v14, 0xd

    .line 17370
    :cond_33
    :goto_f
    move/from16 v0, v25

    if-le v0, v14, :cond_34

    .line 17371
    move/from16 v25, v14

    .line 17373
    :cond_34
    const/4 v3, 0x4

    move/from16 v0, v25

    if-ge v0, v3, :cond_35

    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x20000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_35

    .line 17375
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .line 17377
    :cond_35
    if-eqz v12, :cond_36

    .line 17378
    move-object/from16 v0, p1

    iput-object v12, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17379
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 17381
    move-object/from16 v0, v19

    iget-object v3, v0, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v3, v3, Lcom/android/server/am/AppBindRecord;->client:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 17382
    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 17383
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 17386
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v12    # "adjType":Ljava/lang/String;
    .end local v13    # "clientAdj":I
    .end local v14    # "clientProcState":I
    :cond_36
    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x8000000

    and-int/2addr v3, v5

    if-eqz v3, :cond_37

    .line 17387
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    .line 17389
    :cond_37
    move-object/from16 v0, v19

    iget-object v2, v0, Lcom/android/server/am/ConnectionRecord;->activity:Lcom/android/server/am/ActivityRecord;

    .line 17390
    .local v2, "a":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit16 v3, v3, 0x80

    if-eqz v3, :cond_21

    .line 17391
    if-eqz v2, :cond_21

    if-lez v11, :cond_21

    iget-boolean v3, v2, Lcom/android/server/am/ActivityRecord;->visible:Z

    if-nez v3, :cond_38

    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-eq v3, v5, :cond_38

    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v5, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v5, :cond_21

    .line 17394
    :cond_38
    const/4 v11, 0x0

    .line 17395
    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x4

    if-nez v3, :cond_39

    .line 17396
    const/16 v30, -0x1

    .line 17398
    :cond_39
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17399
    const-string v3, "service"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17400
    const/4 v3, 0x2

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 17402
    move-object/from16 v0, p1

    iput-object v2, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 17403
    move/from16 v0, v25

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 17404
    move-object/from16 v0, v29

    iget-object v3, v0, Lcom/android/server/am/ServiceRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    goto/16 :goto_c

    .line 17290
    .end local v2    # "a":Lcom/android/server/am/ActivityRecord;
    .restart local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .restart local v12    # "adjType":Ljava/lang/String;
    .restart local v13    # "clientAdj":I
    .restart local v14    # "clientProcState":I
    :cond_3a
    move-object/from16 v0, v29

    iget-wide v6, v0, Lcom/android/server/am/ServiceRecord;->lastActivity:J

    const-wide/32 v8, 0x1b7740

    add-long/2addr v6, v8

    cmp-long v3, p5, v6

    if-ltz v3, :cond_30

    .line 17297
    if-le v11, v13, :cond_3b

    .line 17298
    const-string v12, "cch-bound-services"

    .line 17300
    :cond_3b
    move v13, v11

    goto/16 :goto_d

    .line 17316
    :cond_3c
    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    and-int/lit8 v3, v3, 0x48

    if-eqz v3, :cond_40

    .line 17318
    const/16 v3, -0xb

    if-lt v13, v3, :cond_3f

    move v11, v13

    .line 17331
    :cond_3d
    :goto_10
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-nez v3, :cond_3e

    .line 17332
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17334
    :cond_3e
    const-string v12, "service"

    goto/16 :goto_e

    .line 17318
    :cond_3f
    const/16 v11, -0xb

    goto :goto_10

    .line 17320
    :cond_40
    move-object/from16 v0, v19

    iget v3, v0, Lcom/android/server/am/ConnectionRecord;->flags:I

    const/high16 v5, 0x40000000    # 2.0f

    and-int/2addr v3, v5

    if-eqz v3, :cond_41

    const/4 v3, 0x2

    if-ge v13, v3, :cond_41

    const/4 v3, 0x2

    if-le v11, v3, :cond_41

    .line 17323
    const/4 v11, 0x2

    goto :goto_10

    .line 17324
    :cond_41
    const/4 v3, 0x1

    if-le v13, v3, :cond_42

    .line 17325
    move v11, v13

    goto :goto_10

    .line 17327
    :cond_42
    const/4 v3, 0x1

    if-le v11, v3, :cond_3d

    .line 17328
    const/4 v11, 0x1

    goto :goto_10

    .line 17359
    :cond_43
    const/4 v14, 0x3

    goto/16 :goto_f

    .line 17364
    :cond_44
    const/4 v3, 0x4

    if-ge v14, v3, :cond_33

    .line 17366
    const/4 v14, 0x4

    goto/16 :goto_f

    .line 17249
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v12    # "adjType":Ljava/lang/String;
    .end local v13    # "clientAdj":I
    .end local v14    # "clientProcState":I
    .end local v19    # "cr":Lcom/android/server/am/ConnectionRecord;
    :cond_45
    add-int/lit8 v17, v17, -0x1

    goto/16 :goto_a

    .line 17211
    .end local v15    # "clist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ConnectionRecord;>;"
    .end local v21    # "i":I
    :cond_46
    add-int/lit8 v22, v22, -0x1

    goto/16 :goto_8

    .line 17411
    .end local v17    # "conni":I
    .end local v29    # "s":Lcom/android/server/am/ServiceRecord;
    :cond_47
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v26, v3, -0x1

    .line 17412
    .local v26, "provi":I
    :goto_11
    if-ltz v26, :cond_56

    if-gtz v11, :cond_48

    if-eqz v30, :cond_48

    const/4 v3, 0x2

    move/from16 v0, v25

    if-le v0, v3, :cond_56

    .line 17416
    :cond_48
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    move/from16 v0, v26

    invoke-virtual {v3, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/am/ContentProviderRecord;

    .line 17417
    .local v18, "cpr":Lcom/android/server/am/ContentProviderRecord;
    move-object/from16 v0, v18

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v21, v3, -0x1

    .line 17418
    .restart local v21    # "i":I
    :goto_12
    if-ltz v21, :cond_53

    if-gtz v11, :cond_49

    if-eqz v30, :cond_49

    const/4 v3, 0x2

    move/from16 v0, v25

    if-le v0, v3, :cond_53

    .line 17422
    :cond_49
    move-object/from16 v0, v18

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    move/from16 v0, v21

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ContentProviderConnection;

    .line 17423
    .local v16, "conn":Lcom/android/server/am/ContentProviderConnection;
    move-object/from16 v0, v16

    iget-object v4, v0, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    .line 17424
    .restart local v4    # "client":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p1

    if-ne v4, v0, :cond_4b

    .line 17421
    :cond_4a
    :goto_13
    add-int/lit8 v21, v21, -0x1

    goto :goto_12

    :cond_4b
    move-object/from16 v3, p0

    move/from16 v5, p2

    move-object/from16 v6, p3

    move/from16 v7, p4

    move-wide/from16 v8, p5

    .line 17428
    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    move-result v13

    .line 17429
    .restart local v13    # "clientAdj":I
    iget v14, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 17430
    .restart local v14    # "clientProcState":I
    const/16 v3, 0xb

    if-lt v14, v3, :cond_4c

    .line 17433
    const/16 v14, 0xd

    .line 17435
    :cond_4c
    if-le v11, v13, :cond_4d

    .line 17436
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasShownUi:Z

    if-eqz v3, :cond_50

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-eq v0, v3, :cond_50

    const/4 v3, 0x2

    if-le v13, v3, :cond_50

    .line 17438
    const-string v3, "cch-ui-provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17444
    :goto_14
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->cached:Z

    and-int/2addr v3, v5

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17445
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    .line 17447
    move-object/from16 v0, p1

    iput-object v4, v0, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    .line 17448
    move-object/from16 v0, p1

    iput v14, v0, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    .line 17449
    move-object/from16 v0, v18

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 17451
    :cond_4d
    const/4 v3, 0x2

    if-gt v14, v3, :cond_4e

    .line 17452
    const/4 v3, 0x2

    if-ne v14, v3, :cond_52

    .line 17462
    const/16 v24, 0x1

    .line 17463
    const/16 v14, 0xd

    .line 17473
    :cond_4e
    :goto_15
    move/from16 v0, v25

    if-le v0, v14, :cond_4f

    .line 17474
    move/from16 v25, v14

    .line 17476
    :cond_4f
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    const/4 v5, -0x1

    if-ne v3, v5, :cond_4a

    .line 17477
    const/16 v30, -0x1

    goto :goto_13

    .line 17440
    :cond_50
    if-lez v13, :cond_51

    move v11, v13

    .line 17442
    :goto_16
    const-string v3, "provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto :goto_14

    .line 17440
    :cond_51
    const/4 v11, 0x0

    goto :goto_16

    .line 17469
    :cond_52
    const/4 v14, 0x3

    goto :goto_15

    .line 17483
    .end local v4    # "client":Lcom/android/server/am/ProcessRecord;
    .end local v13    # "clientAdj":I
    .end local v14    # "clientProcState":I
    .end local v16    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_53
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result v3

    if-eqz v3, :cond_55

    .line 17484
    if-lez v11, :cond_54

    .line 17485
    const/4 v11, 0x0

    .line 17486
    const/16 v30, -0x1

    .line 17487
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->cached:Z

    .line 17488
    const-string v3, "provider"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17489
    move-object/from16 v0, v18

    iget-object v3, v0, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    .line 17491
    :cond_54
    const/4 v3, 0x3

    move/from16 v0, v25

    if-le v0, v3, :cond_55

    .line 17492
    const/16 v25, 0x3

    .line 17415
    :cond_55
    add-int/lit8 v26, v26, -0x1

    goto/16 :goto_11

    .line 17497
    .end local v18    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v21    # "i":I
    :cond_56
    if-eqz v24, :cond_57

    const/4 v3, 0x2

    move/from16 v0, v25

    if-le v0, v3, :cond_57

    .line 17504
    packed-switch v25, :pswitch_data_0

    .line 17514
    :pswitch_0
    const/16 v25, 0x2

    .line 17519
    :cond_57
    :goto_17
    const/16 v3, 0xd

    move/from16 v0, v25

    if-lt v0, v3, :cond_58

    .line 17520
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    if-eqz v3, :cond_5c

    .line 17522
    const/16 v25, 0xc

    .line 17523
    const-string v3, "cch-client-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    .line 17532
    :cond_58
    :goto_18
    const/4 v3, 0x5

    if-ne v11, v3, :cond_5a

    .line 17533
    if-eqz p4, :cond_59

    .line 17534
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    div-int/lit8 v5, v5, 0x3

    if-le v3, v5, :cond_5d

    const/4 v3, 0x1

    :goto_19
    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    .line 17535
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    .line 17537
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-nez v3, :cond_5f

    .line 17542
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-lez v3, :cond_5e

    move-object/from16 v0, p1

    iget-wide v6, v0, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v8

    cmp-long v3, v6, v8

    if-ltz v3, :cond_5e

    .line 17544
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceHighRam:Z

    .line 17545
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    .line 17555
    :cond_59
    :goto_1a
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceb:Z

    if-eqz v3, :cond_5a

    .line 17556
    const/16 v11, 0x8

    .line 17560
    :cond_5a
    move-object/from16 v0, p1

    iput v11, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .line 17564
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    if-le v11, v3, :cond_5b

    .line 17565
    move-object/from16 v0, p1

    iget v11, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 17566
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    const/4 v5, 0x2

    if-gt v3, v5, :cond_5b

    .line 17567
    const/16 v30, -0x1

    .line 17576
    :cond_5b
    move-object/from16 v0, p1

    invoke-virtual {v0, v11}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    move-object/from16 v0, p1

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 17577
    move/from16 v0, v30

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curSchedGroup:I

    .line 17578
    move/from16 v0, v25

    move-object/from16 v1, p1

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 17579
    move/from16 v0, v20

    move-object/from16 v1, p1

    iput-boolean v0, v1, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    .line 17581
    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    goto/16 :goto_0

    .line 17510
    :pswitch_1
    const/16 v25, 0x3

    .line 17511
    goto/16 :goto_17

    .line 17524
    :cond_5c
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    if-eqz v3, :cond_58

    .line 17527
    const/16 v25, 0xb

    .line 17528
    const-string v3, "cch-as-act"

    move-object/from16 v0, p1

    iput-object v3, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    goto/16 :goto_18

    .line 17534
    :cond_5d
    const/4 v3, 0x0

    goto/16 :goto_19

    .line 17548
    :cond_5e
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    goto :goto_1a

    .line 17552
    :cond_5f
    const/4 v3, 0x0

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->serviceHighRam:Z

    goto :goto_1a

    .line 17504
    :pswitch_data_0
    .packed-switch 0x3
        :pswitch_1
        :pswitch_1
        :pswitch_0
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 26
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 12021
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v10

    .line 12022
    .local v10, "timeMillis":J
    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    .line 12023
    .local v8, "shortMsg":Ljava/lang/String;
    move-object/from16 v0, p2

    iget-object v9, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    .line 12024
    .local v9, "longMsg":Ljava/lang/String;
    move-object/from16 v0, p2

    iget-object v0, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    move-object/from16 v21, v0

    .line 12025
    .local v21, "stackTrace":Ljava/lang/String;
    if-eqz v8, :cond_2

    if-eqz v9, :cond_2

    .line 12026
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v5, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v12, ": "

    invoke-virtual {v5, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v9

    .line 12031
    :cond_0
    :goto_0
    new-instance v20, Lcom/android/server/am/AppErrorResult;

    invoke-direct/range {v20 .. v20}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 12032
    .local v20, "result":Lcom/android/server/am/AppErrorResult;
    monitor-enter p0

    .line 12033
    :try_start_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v5, :cond_7

    .line 12035
    if-eqz p1, :cond_3

    :try_start_1
    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 12036
    .local v6, "name":Ljava/lang/String;
    :goto_1
    if-eqz p1, :cond_4

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 12037
    .local v7, "pid":I
    :goto_2
    if-eqz p1, :cond_5

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v5, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v22, v0

    .line 12038
    .local v22, "uid":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    move-object/from16 v0, p2

    iget-object v12, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    invoke-interface/range {v5 .. v12}, Landroid/app/IActivityController;->appCrashed(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;JLjava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_7

    .line 12040
    const-string v5, "1"

    const-string v12, "ro.debuggable"

    const-string v23, "0"

    move-object/from16 v0, v23

    invoke-static {v12, v0}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v5, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_6

    const-string v5, "Native crash"

    move-object/from16 v0, p2

    iget-object v12, v0, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    invoke-virtual {v5, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_6

    .line 12042
    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v23, "Skip killing native crashed app "

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v23, "("

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v23, ") during testing"

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12055
    :goto_4
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 12124
    .end local v6    # "name":Ljava/lang/String;
    .end local v7    # "pid":I
    .end local v22    # "uid":I
    :cond_1
    :goto_5
    return-void

    .line 12027
    .end local v20    # "result":Lcom/android/server/am/AppErrorResult;
    :cond_2
    if-eqz v8, :cond_0

    .line 12028
    move-object v9, v8

    goto/16 :goto_0

    .line 12035
    .restart local v20    # "result":Lcom/android/server/am/AppErrorResult;
    :cond_3
    const/4 v6, 0x0

    goto :goto_1

    .line 12036
    .restart local v6    # "name":Ljava/lang/String;
    :cond_4
    :try_start_3
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    goto :goto_2

    .line 12037
    .restart local v7    # "pid":I
    :cond_5
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v22

    goto :goto_3

    .line 12045
    .restart local v22    # "uid":I
    :cond_6
    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v23, "Force-killing crashed app "

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v23, " at watcher\'s request"

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12047
    if-eqz p1, :cond_a

    .line 12048
    const-string v5, "crash"

    const/4 v12, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v5, v12}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_4

    .line 12057
    .end local v6    # "name":Ljava/lang/String;
    .end local v7    # "pid":I
    .end local v22    # "uid":I
    :catch_0
    move-exception v14

    .line 12058
    .local v14, "e":Landroid/os/RemoteException;
    const/4 v5, 0x0

    :try_start_4
    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 12059
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v5

    const/4 v12, 0x0

    invoke-virtual {v5, v12}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 12063
    .end local v14    # "e":Landroid/os/RemoteException;
    :cond_7
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v18

    .line 12066
    .local v18, "origId":J
    if-eqz p1, :cond_b

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v5, :cond_b

    .line 12067
    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v23, "Error in app "

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v23, " running instrumentation "

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v23, ":"

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12069
    if-eqz v8, :cond_8

    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v23, "  "

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12070
    :cond_8
    if-eqz v9, :cond_9

    const-string v5, "ActivityManager"

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v23, "  "

    move-object/from16 v0, v23

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-static {v5, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 12071
    :cond_9
    new-instance v15, Landroid/os/Bundle;

    invoke-direct {v15}, Landroid/os/Bundle;-><init>()V

    .line 12072
    .local v15, "info":Landroid/os/Bundle;
    const-string v5, "shortMsg"

    invoke-virtual {v15, v5, v8}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 12073
    const-string v5, "longMsg"

    invoke-virtual {v15, v5, v9}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 12074
    const/4 v5, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-virtual {v0, v1, v5, v15}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 12075
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12076
    monitor-exit p0

    goto/16 :goto_5

    .line 12100
    .end local v15    # "info":Landroid/os/Bundle;
    .end local v18    # "origId":J
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v5

    .line 12051
    .restart local v6    # "name":Ljava/lang/String;
    .restart local v7    # "pid":I
    .restart local v22    # "uid":I
    :cond_a
    :try_start_5
    invoke-static {v7}, Landroid/os/Process;->killProcess(I)V

    .line 12052
    move/from16 v0, v22

    invoke-static {v0, v7}, Landroid/os/Process;->killProcessGroup(II)I
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto/16 :goto_4

    .line 12080
    .end local v6    # "name":Ljava/lang/String;
    .end local v7    # "pid":I
    .end local v22    # "uid":I
    .restart local v18    # "origId":J
    :cond_b
    if-eqz p1, :cond_c

    .line 12081
    :try_start_6
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v23, v0

    move/from16 v0, v23

    invoke-virtual {v5, v12, v0}, Lcom/android/server/am/BatteryStatsService;->noteProcessCrash(Ljava/lang/String;I)V

    .line 12086
    :cond_c
    if-eqz p1, :cond_d

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, v21

    invoke-direct {v0, v1, v8, v9, v2}, Lcom/android/server/am/ActivityManagerService;->makeAppCrashingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v5

    if-nez v5, :cond_e

    .line 12087
    :cond_d
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12088
    monitor-exit p0

    goto/16 :goto_5

    .line 12091
    :cond_e
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v16

    .line 12092
    .local v16, "msg":Landroid/os/Message;
    const/4 v5, 0x1

    move-object/from16 v0, v16

    iput v5, v0, Landroid/os/Message;->what:I

    .line 12093
    new-instance v13, Ljava/util/HashMap;

    invoke-direct {v13}, Ljava/util/HashMap;-><init>()V

    .line 12094
    .local v13, "data":Ljava/util/HashMap;
    const-string v5, "result"

    move-object/from16 v0, v20

    invoke-virtual {v13, v5, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12095
    const-string v5, "app"

    move-object/from16 v0, p1

    invoke-virtual {v13, v5, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 12096
    move-object/from16 v0, v16

    iput-object v13, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 12097
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v16

    invoke-virtual {v5, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 12099
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 12100
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 12102
    invoke-virtual/range {v20 .. v20}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result v17

    .line 12104
    .local v17, "res":I
    const/4 v4, 0x0

    .line 12105
    .local v4, "appErrorIntent":Landroid/content/Intent;
    monitor-enter p0

    .line 12106
    if-eqz p1, :cond_f

    :try_start_7
    move-object/from16 v0, p1

    iget-boolean v5, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v5, :cond_f

    .line 12109
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v12, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v23, v0

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v24

    invoke-static/range {v24 .. v25}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v24

    move/from16 v0, v23

    move-object/from16 v1, v24

    invoke-virtual {v5, v12, v0, v1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 12112
    :cond_f
    const/4 v5, 0x1

    move/from16 v0, v17

    if-ne v0, v5, :cond_10

    .line 12113
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    invoke-virtual {v0, v1, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->createAppErrorIntentLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/content/Intent;

    move-result-object v4

    .line 12115
    :cond_10
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 12117
    if-eqz v4, :cond_1

    .line 12119
    :try_start_8
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v12, Landroid/os/UserHandle;

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v23, v0

    move/from16 v0, v23

    invoke-direct {v12, v0}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v5, v4, v12}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_8
    .catch Landroid/content/ActivityNotFoundException; {:try_start_8 .. :try_end_8} :catch_1

    goto/16 :goto_5

    .line 12120
    :catch_1
    move-exception v14

    .line 12121
    .local v14, "e":Landroid/content/ActivityNotFoundException;
    const-string v5, "ActivityManager"

    const-string v12, "bug report receiver dissappeared"

    invoke-static {v5, v12, v14}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto/16 :goto_5

    .line 12115
    .end local v14    # "e":Landroid/content/ActivityNotFoundException;
    :catchall_1
    move-exception v5

    :try_start_9
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    throw v5
.end method

.method private createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/app/ApplicationErrorReport;
    .locals 4
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "timeMillis"    # J
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v0, 0x0

    const/4 v2, 0x1

    .line 12141
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    if-nez v1, :cond_1

    .line 12168
    :cond_0
    :goto_0
    return-object v0

    .line 12145
    :cond_1
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v1, :cond_2

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-nez v1, :cond_2

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-eqz v1, :cond_0

    .line 12149
    :cond_2
    new-instance v0, Landroid/app/ApplicationErrorReport;

    invoke-direct {v0}, Landroid/app/ApplicationErrorReport;-><init>()V

    .line 12150
    .local v0, "report":Landroid/app/ApplicationErrorReport;
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->packageName:Ljava/lang/String;

    .line 12151
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    invoke-virtual {v1}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->installerPackageName:Ljava/lang/String;

    .line 12152
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->processName:Ljava/lang/String;

    .line 12153
    iput-wide p2, v0, Landroid/app/ApplicationErrorReport;->time:J

    .line 12154
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x1

    if-eqz v1, :cond_4

    move v1, v2

    :goto_1
    iput-boolean v1, v0, Landroid/app/ApplicationErrorReport;->systemApp:Z

    .line 12156
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v1, :cond_3

    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->forceCrashReport:Z

    if-eqz v1, :cond_5

    .line 12157
    :cond_3
    iput v2, v0, Landroid/app/ApplicationErrorReport;->type:I

    .line 12158
    iput-object p4, v0, Landroid/app/ApplicationErrorReport;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    goto :goto_0

    .line 12154
    :cond_4
    const/4 v1, 0x0

    goto :goto_1

    .line 12159
    :cond_5
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v1, :cond_0

    .line 12160
    const/4 v1, 0x2

    iput v1, v0, Landroid/app/ApplicationErrorReport;->type:I

    .line 12161
    new-instance v1, Landroid/app/ApplicationErrorReport$AnrInfo;

    invoke-direct {v1}, Landroid/app/ApplicationErrorReport$AnrInfo;-><init>()V

    iput-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    .line 12163
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->tag:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->activity:Ljava/lang/String;

    .line 12164
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->shortMsg:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->cause:Ljava/lang/String;

    .line 12165
    iget-object v1, v0, Landroid/app/ApplicationErrorReport;->anrInfo:Landroid/app/ApplicationErrorReport$AnrInfo;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    iget-object v2, v2, Landroid/app/ActivityManager$ProcessErrorStateInfo;->longMsg:Ljava/lang/String;

    iput-object v2, v1, Landroid/app/ApplicationErrorReport$AnrInfo;->info:Ljava/lang/String;

    goto :goto_0
.end method

.method private createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;
    .locals 4
    .param p1, "tr"    # Lcom/android/server/am/TaskRecord;

    .prologue
    const/4 v2, -0x1

    .line 8089
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->updateTaskDescription()V

    .line 8092
    new-instance v0, Landroid/app/ActivityManager$RecentTaskInfo;

    invoke-direct {v0}, Landroid/app/ActivityManager$RecentTaskInfo;-><init>()V

    .line 8093
    .local v0, "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    if-nez v1, :cond_1

    move v1, v2

    :goto_0
    iput v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->id:I

    .line 8094
    iget v1, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    iput v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->persistentId:I

    .line 8095
    new-instance v1, Landroid/content/Intent;

    invoke-virtual {p1}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v3

    invoke-direct {v1, v3}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    iput-object v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;

    .line 8096
    iget-object v1, p1, Lcom/android/server/am/TaskRecord;->origActivity:Landroid/content/ComponentName;

    iput-object v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->origActivity:Landroid/content/ComponentName;

    .line 8097
    iget-object v1, p1, Lcom/android/server/am/TaskRecord;->lastDescription:Ljava/lang/CharSequence;

    iput-object v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->description:Ljava/lang/CharSequence;

    .line 8098
    iget-object v1, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v1, :cond_0

    iget-object v1, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    iget v2, v1, Lcom/android/server/am/ActivityStack;->mStackId:I

    :cond_0
    iput v2, v0, Landroid/app/ActivityManager$RecentTaskInfo;->stackId:I

    .line 8099
    iget v1, p1, Lcom/android/server/am/TaskRecord;->userId:I

    iput v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->userId:I

    .line 8100
    new-instance v1, Landroid/app/ActivityManager$TaskDescription;

    iget-object v2, p1, Lcom/android/server/am/TaskRecord;->lastTaskDescription:Landroid/app/ActivityManager$TaskDescription;

    invoke-direct {v1, v2}, Landroid/app/ActivityManager$TaskDescription;-><init>(Landroid/app/ActivityManager$TaskDescription;)V

    iput-object v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->taskDescription:Landroid/app/ActivityManager$TaskDescription;

    .line 8101
    iget-wide v2, p1, Lcom/android/server/am/TaskRecord;->firstActiveTime:J

    iput-wide v2, v0, Landroid/app/ActivityManager$RecentTaskInfo;->firstActiveTime:J

    .line 8102
    iget-wide v2, p1, Lcom/android/server/am/TaskRecord;->lastActiveTime:J

    iput-wide v2, v0, Landroid/app/ActivityManager$RecentTaskInfo;->lastActiveTime:J

    .line 8103
    iget v1, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    iput v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->affiliatedTaskId:I

    .line 8104
    iget v1, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskColor:I

    iput v1, v0, Landroid/app/ActivityManager$RecentTaskInfo;->affiliatedTaskColor:I

    .line 8105
    return-object v0

    .line 8093
    :cond_1
    iget v1, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    goto :goto_0
.end method

.method private deliverPreBootCompleted(Ljava/lang/Runnable;Ljava/util/ArrayList;I)Z
    .locals 26
    .param p1, "onFinishCallback"    # Ljava/lang/Runnable;
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/Runnable;",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;I)Z"
        }
    .end annotation

    .prologue
    .line 11115
    .local p2, "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    const/16 v25, 0x0

    .line 11116
    .local v25, "waitingUpdate":Z
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.PRE_BOOT_COMPLETED"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 11117
    .local v5, "intent":Landroid/content/Intent;
    const/16 v23, 0x0

    .line 11119
    .local v23, "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    const/4 v3, 0x0

    const/4 v4, 0x0

    move/from16 v0, p3

    invoke-interface {v2, v5, v3, v4, v0}, Landroid/content/pm/IPackageManager;->queryIntentReceivers(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v23

    .line 11123
    :goto_0
    if-eqz v23, :cond_8

    .line 11124
    invoke-interface/range {v23 .. v23}, Ljava/util/List;->size()I

    move-result v2

    add-int/lit8 v20, v2, -0x1

    .local v20, "i":I
    :goto_1
    if-ltz v20, :cond_1

    .line 11125
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v2, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v2, v2, 0x1

    if-nez v2, :cond_0

    .line 11127
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-interface {v0, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 11124
    :cond_0
    add-int/lit8 v20, v20, -0x1

    goto :goto_1

    .line 11130
    :cond_1
    const/high16 v2, 0x2000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 11134
    if-nez p3, :cond_3

    .line 11135
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->readLastDonePreBootReceivers()Ljava/util/ArrayList;

    move-result-object v22

    .line 11136
    .local v22, "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    const/16 v20, 0x0

    :goto_2
    invoke-interface/range {v23 .. v23}, Ljava/util/List;->size()I

    move-result v2

    move/from16 v0, v20

    if-ge v0, v2, :cond_3

    .line 11137
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v0, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    move-object/from16 v18, v0

    .line 11138
    .local v18, "ai":Landroid/content/pm/ActivityInfo;
    new-instance v19, Landroid/content/ComponentName;

    move-object/from16 v0, v18

    iget-object v2, v0, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v18

    iget-object v3, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v19

    invoke-direct {v0, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 11139
    .local v19, "comp":Landroid/content/ComponentName;
    move-object/from16 v0, v22

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 11142
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-interface {v0, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 11143
    add-int/lit8 v20, v20, -0x1

    .line 11146
    move-object/from16 v0, p2

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11136
    :cond_2
    add-int/lit8 v20, v20, 0x1

    goto :goto_2

    .line 11152
    .end local v18    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v19    # "comp":Landroid/content/ComponentName;
    .end local v22    # "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    :cond_3
    if-nez p3, :cond_6

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUsersLocked()[I

    move-result-object v24

    .line 11154
    .local v24, "users":[I
    :goto_3
    const/16 v20, 0x0

    :goto_4
    invoke-interface/range {v23 .. v23}, Ljava/util/List;->size()I

    move-result v2

    move/from16 v0, v20

    if-ge v0, v2, :cond_8

    .line 11155
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v0, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    move-object/from16 v18, v0

    .line 11156
    .restart local v18    # "ai":Landroid/content/pm/ActivityInfo;
    new-instance v19, Landroid/content/ComponentName;

    move-object/from16 v0, v18

    iget-object v2, v0, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v18

    iget-object v3, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v19

    invoke-direct {v0, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 11157
    .restart local v19    # "comp":Landroid/content/ComponentName;
    move-object/from16 v0, p2

    move-object/from16 v1, v19

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 11158
    move-object/from16 v0, v19

    invoke-virtual {v5, v0}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 11159
    const/16 v21, 0x0

    .local v21, "j":I
    :goto_5
    move-object/from16 v0, v24

    array-length v2, v0

    move/from16 v0, v21

    if-ge v0, v2, :cond_7

    .line 11160
    const/4 v7, 0x0

    .line 11162
    .local v7, "finisher":Landroid/content/IIntentReceiver;
    invoke-interface/range {v23 .. v23}, Ljava/util/List;->size()I

    move-result v2

    add-int/lit8 v2, v2, -0x1

    move/from16 v0, v20

    if-ne v0, v2, :cond_4

    move-object/from16 v0, v24

    array-length v2, v0

    add-int/lit8 v2, v2, -0x1

    move/from16 v0, v21

    if-ne v0, v2, :cond_4

    if-eqz p1, :cond_4

    .line 11163
    new-instance v7, Lcom/android/server/am/ActivityManagerService$13;

    .end local v7    # "finisher":Landroid/content/IIntentReceiver;
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v7, v0, v1}, Lcom/android/server/am/ActivityManagerService$13;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/Runnable;)V

    .line 11174
    .restart local v7    # "finisher":Landroid/content/IIntentReceiver;
    :cond_4
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Sending system update to "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v5}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " for user "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    aget v4, v24, v21

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11176
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    const/4 v13, 0x1

    const/4 v14, 0x0

    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    aget v17, v24, v21

    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 11180
    if-eqz v7, :cond_5

    .line 11181
    const/16 v25, 0x1

    .line 11159
    :cond_5
    add-int/lit8 v21, v21, 0x1

    goto :goto_5

    .line 11152
    .end local v7    # "finisher":Landroid/content/IIntentReceiver;
    .end local v18    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v19    # "comp":Landroid/content/ComponentName;
    .end local v21    # "j":I
    .end local v24    # "users":[I
    :cond_6
    const/4 v2, 0x1

    new-array v0, v2, [I

    move-object/from16 v24, v0

    const/4 v2, 0x0

    aput p3, v24, v2

    goto/16 :goto_3

    .line 11154
    .restart local v18    # "ai":Landroid/content/pm/ActivityInfo;
    .restart local v19    # "comp":Landroid/content/ComponentName;
    .restart local v21    # "j":I
    .restart local v24    # "users":[I
    :cond_7
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_4

    .line 11187
    .end local v18    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v19    # "comp":Landroid/content/ComponentName;
    .end local v20    # "i":I
    .end local v21    # "j":I
    .end local v24    # "users":[I
    :cond_8
    return v25

    .line 11121
    :catch_0
    move-exception v2

    goto/16 :goto_0
.end method

.method private dispatchProcessDied(II)V
    .locals 3
    .param p1, "pid"    # I
    .param p2, "uid"    # I

    .prologue
    .line 3338
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v0

    .line 3339
    .local v0, "i":I
    :cond_0
    :goto_0
    if-lez v0, :cond_1

    .line 3340
    add-int/lit8 v0, v0, -0x1

    .line 3341
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2, v0}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v1

    check-cast v1, Landroid/app/IProcessObserver;

    .line 3342
    .local v1, "observer":Landroid/app/IProcessObserver;
    if-eqz v1, :cond_0

    .line 3344
    :try_start_0
    invoke-interface {v1, p1, p2}, Landroid/app/IProcessObserver;->onProcessDied(II)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 3345
    :catch_0
    move-exception v2

    goto :goto_0

    .line 3349
    .end local v1    # "observer":Landroid/app/IProcessObserver;
    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v2}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 3350
    return-void
.end method

.method private dispatchProcessesChanged()V
    .locals 8

    .prologue
    .line 3298
    monitor-enter p0

    .line 3299
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 3300
    .local v0, "N":I
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    array-length v5, v5

    if-ge v5, v0, :cond_0

    .line 3301
    new-array v5, v0, [Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    iput-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    .line 3303
    :cond_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    .line 3304
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mAvailProcessChanges:Ljava/util/ArrayList;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 3305
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPendingProcessChanges:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->clear()V

    .line 3307
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 3309
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v5}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v1

    .line 3310
    .local v1, "i":I
    :cond_1
    :goto_0
    if-lez v1, :cond_4

    .line 3311
    add-int/lit8 v1, v1, -0x1

    .line 3312
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v5, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v4

    check-cast v4, Landroid/app/IProcessObserver;

    .line 3313
    .local v4, "observer":Landroid/app/IProcessObserver;
    if-eqz v4, :cond_1

    .line 3315
    const/4 v3, 0x0

    .local v3, "j":I
    :goto_1
    if-ge v3, v0, :cond_1

    .line 3316
    :try_start_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mActiveProcessChanges:[Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;

    aget-object v2, v5, v3

    .line 3317
    .local v2, "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    and-int/lit8 v5, v5, 0x1

    if-eqz v5, :cond_2

    .line 3321
    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v6, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    iget-boolean v7, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->foregroundActivities:Z

    invoke-interface {v4, v5, v6, v7}, Landroid/app/IProcessObserver;->onForegroundActivitiesChanged(IIZ)V

    .line 3324
    :cond_2
    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->changes:I

    and-int/lit8 v5, v5, 0x2

    if-eqz v5, :cond_3

    .line 3327
    iget v5, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->pid:I

    iget v6, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->uid:I

    iget v7, v2, Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;->processState:I

    invoke-interface {v4, v5, v6, v7}, Landroid/app/IProcessObserver;->onProcessStateChanged(III)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 3315
    :cond_3
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 3307
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v2    # "item":Lcom/android/server/am/ActivityManagerService$ProcessChangeItem;
    .end local v3    # "j":I
    .end local v4    # "observer":Landroid/app/IProcessObserver;
    :catchall_0
    move-exception v5

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v5

    .line 3334
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    :cond_4
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v5}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 3335
    return-void

    .line 3330
    .restart local v3    # "j":I
    .restart local v4    # "observer":Landroid/app/IProcessObserver;
    :catch_0
    move-exception v5

    goto :goto_0
.end method

.method private dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V
    .locals 6
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "fd"    # Ljava/io/FileDescriptor;
    .param p3, "pw"    # Ljava/io/PrintWriter;
    .param p4, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p5, "args"    # [Ljava/lang/String;
    .param p6, "dumpAll"    # Z

    .prologue
    .line 13392
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "  "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 13393
    .local v1, "innerPrefix":Ljava/lang/String;
    monitor-enter p0

    .line 13394
    :try_start_0
    invoke-virtual {p3, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v3, "ACTIVITY "

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13395
    const-string v3, " "

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-static {p4}, Ljava/lang/System;->identityHashCode(Ljava/lang/Object;)I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13396
    const-string v3, " pid="

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13397
    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_2

    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v3, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(I)V

    .line 13399
    :goto_0
    if-eqz p6, :cond_0

    .line 13400
    invoke-virtual {p4, p3, v1}, Lcom/android/server/am/ActivityRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13402
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13403
    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_1

    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1

    .line 13406
    invoke-virtual {p3}, Ljava/io/PrintWriter;->flush()V

    .line 13408
    :try_start_1
    new-instance v2, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v2}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 13410
    .local v2, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_2
    iget-object v3, p4, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v4

    iget-object v5, p4, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-interface {v3, v4, v5, v1, p5}, Landroid/app/IApplicationThread;->dumpActivity(Ljava/io/FileDescriptor;Landroid/os/IBinder;Ljava/lang/String;[Ljava/lang/String;)V

    .line 13412
    invoke-virtual {v2, p2}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 13414
    :try_start_3
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    .line 13422
    .end local v2    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_1
    :goto_1
    return-void

    .line 13398
    :cond_2
    :try_start_4
    const-string v3, "(not running)"

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_0

    .line 13402
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v3

    .line 13414
    .restart local v2    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_1
    move-exception v3

    :try_start_5
    invoke-virtual {v2}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v3
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    .line 13416
    .end local v2    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v0

    .line 13417
    .local v0, "e":Ljava/io/IOException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "Failure while dumping the activity: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    .line 13418
    .end local v0    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 13419
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "Got a RemoteException while dumping the activity"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {p3, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1
.end method

.method private final dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V
    .locals 2
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "uptime"    # J
    .param p4, "realtime"    # J
    .param p6, "isCheckinRequest"    # Z
    .param p7, "isCompact"    # Z

    .prologue
    .line 14039
    if-nez p6, :cond_0

    if-eqz p7, :cond_1

    .line 14041
    :cond_0
    const-string v0, "time,"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p2, p3}, Ljava/io/PrintWriter;->print(J)V

    const-string v0, ","

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p1, p4, p5}, Ljava/io/PrintWriter;->println(J)V

    .line 14046
    :goto_0
    return-void

    .line 14043
    :cond_1
    const-string v0, "Applications Memory Usage (kB):"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14044
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Uptime: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2, p3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, " Realtime: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p4, p5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_0
.end method

.method static final dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V
    .locals 10
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "prefix"    # Ljava/lang/String;
    .param p2, "tag"    # Ljava/lang/String;
    .param p4, "sort"    # Z
    .param p5, "isCompact"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ActivityManagerService$MemItem;",
            ">;ZZ)V"
        }
    .end annotation

    .prologue
    .local p3, "items":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/4 v4, 0x1

    .line 13950
    if-eqz p4, :cond_0

    if-nez p5, :cond_0

    .line 13951
    new-instance v0, Lcom/android/server/am/ActivityManagerService$21;

    invoke-direct {v0}, Lcom/android/server/am/ActivityManagerService$21;-><init>()V

    invoke-static {p3, v0}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 13964
    :cond_0
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    invoke-virtual {p3}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v6, v0, :cond_5

    .line 13965
    invoke-virtual {p3, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ActivityManagerService$MemItem;

    .line 13966
    .local v7, "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    if-nez p5, :cond_2

    .line 13967
    invoke-virtual {p0, p1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, "%7d kB: "

    new-array v1, v4, [Ljava/lang/Object;

    const/4 v2, 0x0

    iget-wide v8, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-static {v8, v9}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v3

    aput-object v3, v1, v2

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->printf(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/PrintWriter;

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->label:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13976
    :goto_1
    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    if-eqz v0, :cond_1

    .line 13977
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v0, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "           "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iget-object v2, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    iget-object v3, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    move-object v0, p0

    move v5, p5

    invoke-static/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 13964
    :cond_1
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 13968
    :cond_2
    iget-boolean v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->isProc:Z

    if-eqz v0, :cond_4

    .line 13969
    const-string v0, "proc,"

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p0, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13970
    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->id:I

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(I)V

    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->print(J)V

    .line 13971
    iget-boolean v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->hasActivities:Z

    if-eqz v0, :cond_3

    const-string v0, ",a"

    :goto_2
    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    :cond_3
    const-string v0, ",e"

    goto :goto_2

    .line 13973
    :cond_4
    invoke-virtual {p0, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->shortLabel:Ljava/lang/String;

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v0, ","

    invoke-virtual {p0, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13974
    iget-wide v0, v7, Lcom/android/server/am/ActivityManagerService$MemItem;->pss:J

    invoke-virtual {p0, v0, v1}, Ljava/io/PrintWriter;->println(J)V

    goto :goto_1

    .line 13981
    .end local v7    # "mi":Lcom/android/server/am/ActivityManagerService$MemItem;
    :cond_5
    return-void
.end method

.method private static final dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I
    .locals 8
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "service"    # Lcom/android/server/am/ActivityManagerService;
    .param p2, "list"    # Ljava/util/List;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "normalLabel"    # Ljava/lang/String;
    .param p5, "persistentLabel"    # Ljava/lang/String;
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13634
    const/4 v2, 0x0

    .line 13635
    .local v2, "numPers":I
    invoke-interface {p2}, Ljava/util/List;->size()I

    move-result v4

    add-int/lit8 v0, v4, -0x1

    .line 13636
    .local v0, "N":I
    move v1, v0

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    .line 13637
    invoke-interface {p2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 13638
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_1

    iget-object v4, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1

    .line 13636
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 13641
    :cond_1
    const-string v5, "%s%s #%2d: %s"

    const/4 v4, 0x4

    new-array v6, v4, [Ljava/lang/Object;

    const/4 v4, 0x0

    aput-object p3, v6, v4

    const/4 v7, 0x1

    iget-boolean v4, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_2

    move-object v4, p5

    :goto_2
    aput-object v4, v6, v7

    const/4 v4, 0x2

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v4

    const/4 v4, 0x3

    invoke-virtual {v3}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v7

    aput-object v7, v6, v4

    invoke-static {v5, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {p0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13644
    iget-boolean v4, v3, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_0

    .line 13645
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_2
    move-object v4, p4

    .line 13641
    goto :goto_2

    .line 13648
    .end local v3    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    return v2
.end method

.method private static final dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z
    .locals 30
    .param p0, "pw"    # Ljava/io/PrintWriter;
    .param p1, "service"    # Lcom/android/server/am/ActivityManagerService;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "normalLabel"    # Ljava/lang/String;
    .param p5, "persistentLabel"    # Ljava/lang/String;
    .param p6, "inclDetails"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "Lcom/android/server/am/ActivityManagerService;",
            "Ljava/util/List",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            "Z",
            "Ljava/lang/String;",
            ")Z"
        }
    .end annotation

    .prologue
    .line 13656
    .local p2, "origList":Ljava/util/List;, "Ljava/util/List<Lcom/android/server/am/ProcessRecord;>;"
    new-instance v11, Ljava/util/ArrayList;

    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    move/from16 v0, v26

    invoke-direct {v11, v0}, Ljava/util/ArrayList;-><init>(I)V

    .line 13658
    .local v11, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/util/Pair<Lcom/android/server/am/ProcessRecord;Ljava/lang/Integer;>;>;"
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_0
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    move/from16 v0, v26

    if-ge v10, v0, :cond_1

    .line 13659
    move-object/from16 v0, p2

    invoke-interface {v0, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 13660
    .local v15, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p7, :cond_0

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    move-object/from16 v1, p7

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v26

    if-nez v26, :cond_0

    .line 13658
    :goto_1
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    .line 13663
    :cond_0
    new-instance v26, Landroid/util/Pair;

    move-object/from16 v0, p2

    invoke-interface {v0, v10}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v27

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v28

    invoke-direct/range {v26 .. v28}, Landroid/util/Pair;-><init>(Ljava/lang/Object;Ljava/lang/Object;)V

    move-object/from16 v0, v26

    invoke-virtual {v11, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 13666
    .end local v15    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_1
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v26

    if-gtz v26, :cond_2

    .line 13667
    const/16 v26, 0x0

    .line 13813
    :goto_2
    return v26

    .line 13670
    :cond_2
    new-instance v4, Lcom/android/server/am/ActivityManagerService$20;

    invoke-direct {v4}, Lcom/android/server/am/ActivityManagerService$20;-><init>()V

    .line 13685
    .local v4, "comparator":Ljava/util/Comparator;, "Ljava/util/Comparator<Landroid/util/Pair<Lcom/android/server/am/ProcessRecord;Ljava/lang/Integer;>;>;"
    invoke-static {v11, v4}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 13687
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v6

    .line 13688
    .local v6, "curRealtime":J
    move-object/from16 v0, p1

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    move-wide/from16 v26, v0

    sub-long v16, v6, v26

    .line 13689
    .local v16, "realtimeSince":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 13690
    .local v8, "curUptime":J
    move-object/from16 v0, p1

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    move-wide/from16 v26, v0

    sub-long v22, v8, v26

    .line 13692
    .local v22, "uptimeSince":J
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v26

    add-int/lit8 v10, v26, -0x1

    :goto_3
    if-ltz v10, :cond_10

    .line 13693
    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Landroid/util/Pair;

    move-object/from16 v0, v26

    iget-object v15, v0, Landroid/util/Pair;->first:Ljava/lang/Object;

    check-cast v15, Lcom/android/server/am/ProcessRecord;

    .line 13694
    .restart local v15    # "r":Lcom/android/server/am/ProcessRecord;
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeOomAdjString(I)Ljava/lang/String;

    move-result-object v13

    .line 13696
    .local v13, "oomAdj":Ljava/lang/String;
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setSchedGroup:I

    move/from16 v26, v0

    packed-switch v26, :pswitch_data_0

    .line 13704
    const/16 v18, 0x3f

    .line 13708
    .local v18, "schedGroup":C
    :goto_4
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->foregroundActivities:Z

    move/from16 v26, v0

    if-eqz v26, :cond_9

    .line 13709
    const/16 v5, 0x41

    .line 13715
    .local v5, "foreground":C
    :goto_5
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v14

    .line 13716
    .local v14, "procState":Ljava/lang/String;
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13717
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v26, v0

    if-eqz v26, :cond_b

    move-object/from16 v26, p5

    :goto_6
    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13718
    const-string v26, " #"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13719
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v26

    add-int/lit8 v27, v26, -0x1

    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Landroid/util/Pair;

    move-object/from16 v0, v26

    iget-object v0, v0, Landroid/util/Pair;->second:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Ljava/lang/Integer;

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Integer;->intValue()I

    move-result v26

    sub-int v12, v27, v26

    .line 13720
    .local v12, "num":I
    const/16 v26, 0xa

    move/from16 v0, v26

    if-ge v12, v0, :cond_3

    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13721
    :cond_3
    move-object/from16 v0, p0

    invoke-virtual {v0, v12}, Ljava/io/PrintWriter;->print(I)V

    .line 13722
    const-string v26, ": "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13723
    move-object/from16 v0, p0

    invoke-virtual {v0, v13}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13724
    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13725
    move-object/from16 v0, p0

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13726
    const/16 v26, 0x2f

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13727
    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->print(C)V

    .line 13728
    const/16 v26, 0x2f

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13729
    move-object/from16 v0, p0

    invoke-virtual {v0, v14}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13730
    const-string v26, " trm:"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13731
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v26, v0

    const/16 v27, 0xa

    move/from16 v0, v26

    move/from16 v1, v27

    if-ge v0, v1, :cond_4

    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13732
    :cond_4
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 13733
    const/16 v26, 0x20

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13734
    invoke-virtual {v15}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13735
    const-string v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13736
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    move-object/from16 v26, v0

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13737
    const/16 v26, 0x29

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(C)V

    .line 13738
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-nez v26, :cond_5

    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_6

    .line 13739
    :cond_5
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13740
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13741
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    instance-of v0, v0, Landroid/content/ComponentName;

    move/from16 v26, v0

    if-eqz v26, :cond_c

    .line 13742
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Landroid/content/ComponentName;

    invoke-virtual/range {v26 .. v26}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13748
    :goto_7
    const-string v26, "<="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13749
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    instance-of v0, v0, Lcom/android/server/am/ProcessRecord;

    move/from16 v26, v0

    if-eqz v26, :cond_e

    .line 13750
    const-string v26, "Proc{"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13751
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    check-cast v26, Lcom/android/server/am/ProcessRecord;

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/ProcessRecord;->toShortString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13752
    const-string v26, "}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13759
    :cond_6
    :goto_8
    if-eqz p6, :cond_8

    .line 13760
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13761
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13762
    const-string v26, "oom: max="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 13763
    const-string v26, " curRaw="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 13764
    const-string v26, " setRaw="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setRawAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 13765
    const-string v26, " cur="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 13766
    const-string v26, " set="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(I)V

    .line 13767
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13768
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13769
    const-string v26, "state: cur="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->curProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13770
    const-string v26, " set="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move/from16 v26, v0

    invoke-static/range {v26 .. v26}, Lcom/android/server/am/ProcessList;->makeProcStateString(I)Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13771
    const-string v26, " lastPss="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastPss:J

    move-wide/from16 v26, v0

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    .line 13772
    const-string v26, " lastCachedPss="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    move-wide/from16 v26, v0

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->println(J)V

    .line 13773
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13774
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13775
    const-string v26, "cached="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->cached:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 13776
    const-string v26, " empty="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->empty:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Z)V

    .line 13777
    const-string v26, " hasAboveClient="

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->hasAboveClient:Z

    move/from16 v26, v0

    move-object/from16 v0, p0

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Z)V

    .line 13779
    iget v0, v15, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move/from16 v26, v0

    const/16 v27, 0x7

    move/from16 v0, v26

    move/from16 v1, v27

    if-lt v0, v1, :cond_8

    .line 13780
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x0

    cmp-long v26, v26, v28

    if-eqz v26, :cond_7

    .line 13782
    move-object/from16 v0, p1

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v19

    .line 13783
    .local v19, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v19

    .line 13784
    :try_start_0
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v26, v0

    iget v0, v15, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v27, v0

    move-object/from16 v0, v19

    move/from16 v1, v26

    move/from16 v2, v27

    invoke-virtual {v0, v1, v2, v6, v7}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J

    move-result-wide v24

    .line 13786
    .local v24, "wtime":J
    monitor-exit v19
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13787
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    move-wide/from16 v26, v0

    sub-long v20, v24, v26

    .line 13788
    .local v20, "timeUsed":J
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13789
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13790
    const-string v26, "keep awake over "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13791
    move-wide/from16 v0, v16

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13792
    const-string v26, " used "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13793
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13794
    const-string v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13795
    const-wide/16 v26, 0x64

    mul-long v26, v26, v20

    div-long v26, v26, v16

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    .line 13796
    const-string v26, "%)"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13798
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v20    # "timeUsed":J
    .end local v24    # "wtime":J
    :cond_7
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    move-wide/from16 v26, v0

    const-wide/16 v28, 0x0

    cmp-long v26, v26, v28

    if-eqz v26, :cond_8

    .line 13799
    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-wide/from16 v26, v0

    iget-wide v0, v15, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    move-wide/from16 v28, v0

    sub-long v20, v26, v28

    .line 13800
    .restart local v20    # "timeUsed":J
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13801
    const-string v26, "    "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13802
    const-string v26, "run cpu over "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13803
    move-wide/from16 v0, v22

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13804
    const-string v26, " used "

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13805
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13806
    const-string v26, " ("

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13807
    const-wide/16 v26, 0x64

    mul-long v26, v26, v20

    div-long v26, v26, v22

    move-object/from16 v0, p0

    move-wide/from16 v1, v26

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    .line 13808
    const-string v26, "%)"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13692
    .end local v20    # "timeUsed":J
    :cond_8
    add-int/lit8 v10, v10, -0x1

    goto/16 :goto_3

    .line 13698
    .end local v5    # "foreground":C
    .end local v12    # "num":I
    .end local v14    # "procState":Ljava/lang/String;
    .end local v18    # "schedGroup":C
    :pswitch_0
    const/16 v18, 0x42

    .line 13699
    .restart local v18    # "schedGroup":C
    goto/16 :goto_4

    .line 13701
    .end local v18    # "schedGroup":C
    :pswitch_1
    const/16 v18, 0x46

    .line 13702
    .restart local v18    # "schedGroup":C
    goto/16 :goto_4

    .line 13710
    :cond_9
    iget-boolean v0, v15, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    move/from16 v26, v0

    if-eqz v26, :cond_a

    .line 13711
    const/16 v5, 0x53

    .restart local v5    # "foreground":C
    goto/16 :goto_5

    .line 13713
    .end local v5    # "foreground":C
    :cond_a
    const/16 v5, 0x20

    .restart local v5    # "foreground":C
    goto/16 :goto_5

    .restart local v14    # "procState":Ljava/lang/String;
    :cond_b
    move-object/from16 v26, p4

    .line 13717
    goto/16 :goto_6

    .line 13743
    .restart local v12    # "num":I
    :cond_c
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_d

    .line 13744
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto/16 :goto_7

    .line 13746
    :cond_d
    const-string v26, "{null}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    goto/16 :goto_7

    .line 13753
    :cond_e
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    if-eqz v26, :cond_f

    .line 13754
    iget-object v0, v15, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v26

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_8

    .line 13756
    :cond_f
    const-string v26, "{null}"

    move-object/from16 v0, p0

    move-object/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_8

    .line 13786
    .restart local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_0
    move-exception v26

    :try_start_1
    monitor-exit v19
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v26

    .line 13813
    .end local v5    # "foreground":C
    .end local v12    # "num":I
    .end local v13    # "oomAdj":Ljava/lang/String;
    .end local v14    # "procState":Ljava/lang/String;
    .end local v15    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v18    # "schedGroup":C
    .end local v19    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :cond_10
    const/16 v26, 0x1

    goto/16 :goto_2

    .line 13696
    nop

    :pswitch_data_0
    .packed-switch -0x1
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public static dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)Ljava/io/File;
    .locals 9
    .param p0, "clearTraces"    # Z
    .param p2, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "nativeProcs"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;[",
            "Ljava/lang/String;",
            ")",
            "Ljava/io/File;"
        }
    .end annotation

    .prologue
    .local p1, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p3, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    const/4 v4, 0x0

    .line 4753
    const-string v5, "dalvik.vm.stack-trace-file"

    invoke-static {v5, v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 4754
    .local v3, "tracesPath":Ljava/lang/String;
    if-eqz v3, :cond_0

    invoke-virtual {v3}, Ljava/lang/String;->length()I

    move-result v5

    if-nez v5, :cond_1

    :cond_0
    move-object v2, v4

    .line 4778
    :goto_0
    return-object v2

    .line 4758
    :cond_1
    new-instance v2, Ljava/io/File;

    invoke-direct {v2, v3}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 4760
    .local v2, "tracesFile":Ljava/io/File;
    :try_start_0
    invoke-virtual {v2}, Ljava/io/File;->getParentFile()Ljava/io/File;

    move-result-object v1

    .line 4761
    .local v1, "tracesDir":Ljava/io/File;
    invoke-virtual {v1}, Ljava/io/File;->exists()Z

    move-result v5

    if-nez v5, :cond_2

    .line 4762
    invoke-virtual {v1}, Ljava/io/File;->mkdirs()Z

    .line 4763
    invoke-static {v1}, Landroid/os/SELinux;->restorecon(Ljava/io/File;)Z

    move-result v5

    if-nez v5, :cond_2

    move-object v2, v4

    .line 4764
    goto :goto_0

    .line 4767
    :cond_2
    invoke-virtual {v1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v5

    const/16 v6, 0x1fd

    const/4 v7, -0x1

    const/4 v8, -0x1

    invoke-static {v5, v6, v7, v8}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I

    .line 4769
    if-eqz p0, :cond_3

    invoke-virtual {v2}, Ljava/io/File;->exists()Z

    move-result v5

    if-eqz v5, :cond_3

    invoke-virtual {v2}, Ljava/io/File;->delete()Z

    .line 4770
    :cond_3
    invoke-virtual {v2}, Ljava/io/File;->createNewFile()Z

    .line 4771
    invoke-virtual {v2}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v5

    const/16 v6, 0x1b6

    const/4 v7, -0x1

    const/4 v8, -0x1

    invoke-static {v5, v6, v7, v8}, Landroid/os/FileUtils;->setPermissions(Ljava/lang/String;III)I
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4777
    invoke-static {v3, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)V

    goto :goto_0

    .line 4772
    .end local v1    # "tracesDir":Ljava/io/File;
    :catch_0
    move-exception v0

    .line 4773
    .local v0, "e":Ljava/io/IOException;
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unable to prepare ANR traces file: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    move-object v2, v4

    .line 4774
    goto :goto_0
.end method

.method private static dumpStackTraces(Ljava/lang/String;Ljava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)V
    .locals 16
    .param p0, "tracesPath"    # Ljava/lang/String;
    .param p2, "processCpuTracker"    # Lcom/android/internal/os/ProcessCpuTracker;
    .param p4, "nativeProcs"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Ljava/lang/Integer;",
            ">;",
            "Lcom/android/internal/os/ProcessCpuTracker;",
            "Landroid/util/SparseArray",
            "<",
            "Ljava/lang/Boolean;",
            ">;[",
            "Ljava/lang/String;",
            ")V"
        }
    .end annotation

    .prologue
    .line 4785
    .local p1, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    .local p3, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    new-instance v10, Lcom/android/server/am/ActivityManagerService$5;

    const/16 v14, 0x8

    move-object/from16 v0, p0

    invoke-direct {v10, v0, v14}, Lcom/android/server/am/ActivityManagerService$5;-><init>(Ljava/lang/String;I)V

    .line 4791
    .local v10, "observer":Landroid/os/FileObserver;
    :try_start_0
    invoke-virtual {v10}, Landroid/os/FileObserver;->startWatching()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    .line 4794
    if-eqz p1, :cond_0

    .line 4796
    :try_start_1
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v8

    .line 4797
    .local v8, "num":I
    const/4 v5, 0x0

    .local v5, "i":I
    :goto_0
    if-ge v5, v8, :cond_0

    .line 4798
    monitor-enter v10
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_3

    .line 4799
    :try_start_2
    move-object/from16 v0, p1

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Ljava/lang/Integer;

    invoke-virtual {v14}, Ljava/lang/Integer;->intValue()I

    move-result v14

    const/4 v15, 0x3

    invoke-static {v14, v15}, Landroid/os/Process;->sendSignal(II)V

    .line 4800
    const-wide/16 v14, 0xc8

    invoke-virtual {v10, v14, v15}, Ljava/lang/Object;->wait(J)V

    .line 4801
    monitor-exit v10

    .line 4797
    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    .line 4801
    :catchall_0
    move-exception v14

    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v14
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 4803
    .end local v5    # "i":I
    .end local v8    # "num":I
    :catch_0
    move-exception v4

    .line 4804
    .local v4, "e":Ljava/lang/InterruptedException;
    :try_start_4
    const-string v14, "ActivityManager"

    invoke-static {v14, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 4809
    .end local v4    # "e":Ljava/lang/InterruptedException;
    :cond_0
    if-eqz p4, :cond_1

    .line 4810
    invoke-static/range {p4 .. p4}, Landroid/os/Process;->getPidsForCommands([Ljava/lang/String;)[I

    move-result-object v12

    .line 4811
    .local v12, "pids":[I
    if-eqz v12, :cond_1

    .line 4812
    move-object v3, v12

    .local v3, "arr$":[I
    array-length v7, v3

    .local v7, "len$":I
    const/4 v6, 0x0

    .local v6, "i$":I
    :goto_1
    if-ge v6, v7, :cond_1

    aget v11, v3, v6

    .line 4813
    .local v11, "pid":I
    move-object/from16 v0, p0

    invoke-static {v11, v0}, Landroid/os/Debug;->dumpNativeBacktraceToFile(ILjava/lang/String;)V

    .line 4812
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 4819
    .end local v3    # "arr$":[I
    .end local v6    # "i$":I
    .end local v7    # "len$":I
    .end local v11    # "pid":I
    .end local v12    # "pids":[I
    :cond_1
    if-eqz p2, :cond_3

    .line 4820
    invoke-virtual/range {p2 .. p2}, Lcom/android/internal/os/ProcessCpuTracker;->init()V

    .line 4821
    invoke-static {}, Ljava/lang/System;->gc()V

    .line 4822
    invoke-virtual/range {p2 .. p2}, Lcom/android/internal/os/ProcessCpuTracker;->update()V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    .line 4824
    :try_start_5
    monitor-enter p2
    :try_end_5
    .catch Ljava/lang/InterruptedException; {:try_start_5 .. :try_end_5} :catch_1
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    .line 4825
    const-wide/16 v14, 0x1f4

    :try_start_6
    move-object/from16 v0, p2

    invoke-virtual {v0, v14, v15}, Ljava/lang/Object;->wait(J)V

    .line 4826
    monitor-exit p2
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 4829
    :goto_2
    :try_start_7
    invoke-virtual/range {p2 .. p2}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    .line 4832
    invoke-virtual/range {p2 .. p2}, Lcom/android/internal/os/ProcessCpuTracker;->countWorkingStats()I

    move-result v2

    .line 4833
    .local v2, "N":I
    const/4 v9, 0x0

    .line 4834
    .local v9, "numProcs":I
    const/4 v5, 0x0

    .restart local v5    # "i":I
    :goto_3
    if-ge v5, v2, :cond_3

    const/4 v14, 0x5

    if-ge v9, v14, :cond_3

    .line 4835
    move-object/from16 v0, p2

    invoke-virtual {v0, v5}, Lcom/android/internal/os/ProcessCpuTracker;->getWorkingStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v13

    .line 4836
    .local v13, "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    iget v14, v13, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, p3

    invoke-virtual {v0, v14}, Landroid/util/SparseArray;->indexOfKey(I)I
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_3

    move-result v14

    if-ltz v14, :cond_2

    .line 4837
    add-int/lit8 v9, v9, 0x1

    .line 4839
    :try_start_8
    monitor-enter v10
    :try_end_8
    .catch Ljava/lang/InterruptedException; {:try_start_8 .. :try_end_8} :catch_2
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    .line 4840
    :try_start_9
    iget v14, v13, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v15, 0x3

    invoke-static {v14, v15}, Landroid/os/Process;->sendSignal(II)V

    .line 4841
    const-wide/16 v14, 0xc8

    invoke-virtual {v10, v14, v15}, Ljava/lang/Object;->wait(J)V

    .line 4842
    monitor-exit v10
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 4834
    :cond_2
    :goto_4
    add-int/lit8 v5, v5, 0x1

    goto :goto_3

    .line 4826
    .end local v2    # "N":I
    .end local v5    # "i":I
    .end local v9    # "numProcs":I
    .end local v13    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_1
    move-exception v14

    :try_start_a
    monitor-exit p2
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    :try_start_b
    throw v14
    :try_end_b
    .catch Ljava/lang/InterruptedException; {:try_start_b .. :try_end_b} :catch_1
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    .line 4827
    :catch_1
    move-exception v14

    goto :goto_2

    .line 4842
    .restart local v2    # "N":I
    .restart local v5    # "i":I
    .restart local v9    # "numProcs":I
    .restart local v13    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_2
    move-exception v14

    :try_start_c
    monitor-exit v10
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_2

    :try_start_d
    throw v14
    :try_end_d
    .catch Ljava/lang/InterruptedException; {:try_start_d .. :try_end_d} :catch_2
    .catchall {:try_start_d .. :try_end_d} :catchall_3

    .line 4843
    :catch_2
    move-exception v4

    .line 4844
    .restart local v4    # "e":Ljava/lang/InterruptedException;
    :try_start_e
    const-string v14, "ActivityManager"

    invoke-static {v14, v4}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    goto :goto_4

    .line 4851
    .end local v2    # "N":I
    .end local v4    # "e":Ljava/lang/InterruptedException;
    .end local v5    # "i":I
    .end local v9    # "numProcs":I
    .end local v13    # "stats":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_3
    move-exception v14

    invoke-virtual {v10}, Landroid/os/FileObserver;->stopWatching()V

    throw v14

    :cond_3
    invoke-virtual {v10}, Landroid/os/FileObserver;->stopWatching()V

    .line 4853
    return-void
.end method

.method private enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;I)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .locals 9
    .param p1, "requestType"    # I
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "hint"    # Ljava/lang/String;
    .param p4, "userHandle"    # I

    .prologue
    const/4 v8, 0x0

    .line 10470
    const-string v1, "android.permission.GET_TOP_ACTIVITY_INFO"

    const-string v4, "getAssistContextExtras()"

    invoke-virtual {p0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10473
    new-instance v3, Landroid/os/Bundle;

    invoke-direct {v3}, Landroid/os/Bundle;-><init>()V

    .line 10474
    .local v3, "extras":Landroid/os/Bundle;
    monitor-enter p0

    .line 10475
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v1

    iget-object v2, v1, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    .line 10476
    .local v2, "activity":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    .line 10477
    const-string v1, "ActivityManager"

    const-string v4, "getAssistContextExtras failed: no resumed activity"

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10478
    monitor-exit p0

    move-object v0, v8

    .line 10499
    :goto_0
    return-object v0

    .line 10480
    :cond_0
    const-string v1, "android.intent.extra.ASSIST_PACKAGE"

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v1, v4}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 10481
    iget-object v1, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_1

    iget-object v1, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v1, :cond_2

    .line 10482
    :cond_1
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "getAssistContextExtras failed: no process for "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10483
    monitor-exit p0

    move-object v0, v8

    goto :goto_0

    .line 10485
    :cond_2
    iget-object v1, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    if-ne v1, v4, :cond_3

    .line 10486
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "getAssistContextExtras failed: request process same as "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10487
    monitor-exit p0

    move-object v0, v8

    goto :goto_0

    .line 10489
    :cond_3
    new-instance v0, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-object v1, p0

    move-object v4, p2

    move-object v5, p3

    move v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;Landroid/content/Intent;Ljava/lang/String;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10491
    .local v0, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    :try_start_1
    iget-object v1, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-interface {v1, v4, v0, p1}, Landroid/app/IApplicationThread;->requestAssistContextExtras(Landroid/os/IBinder;Landroid/os/IBinder;I)V

    .line 10493
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 10494
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v4, 0x1f4

    invoke-virtual {v1, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->postDelayed(Ljava/lang/Runnable;J)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10499
    :try_start_2
    monitor-exit p0

    goto :goto_0

    .line 10500
    .end local v0    # "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .end local v2    # "activity":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 10495
    .restart local v0    # "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    .restart local v2    # "activity":Lcom/android/server/am/ActivityRecord;
    :catch_0
    move-exception v7

    .line 10496
    .local v7, "e":Landroid/os/RemoteException;
    :try_start_3
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "getAssistContextExtras failed: crash calling "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10497
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-object v0, v8

    goto/16 :goto_0
.end method

.method private fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "outInfo"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 12228
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->pid:I

    .line 12229
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->uid:I

    .line 12230
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v2, p1, :cond_0

    .line 12231
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x1

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 12233
    :cond_0
    iget-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_1

    .line 12234
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x2

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 12236
    :cond_1
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_2

    .line 12237
    iget v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    or-int/lit8 v2, v2, 0x4

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->flags:I

    .line 12239
    :cond_2
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lastTrimLevel:I

    .line 12240
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->curAdj:I

    .line 12241
    .local v0, "adj":I
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 12242
    .local v1, "procState":I
    invoke-static {v1, v0, p2}, Lcom/android/server/am/ActivityManagerService;->procStateToImportance(IILandroid/app/ActivityManager$RunningAppProcessInfo;)I

    move-result v2

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importance:I

    .line 12243
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->adjTypeCode:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonCode:I

    .line 12244
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iput v2, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->processState:I

    .line 12245
    return-void
.end method

.method private findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v6, 0x0

    .line 11830
    if-nez p1, :cond_0

    move-object v5, v6

    .line 11850
    :goto_0
    return-object v5

    .line 11834
    :cond_0
    monitor-enter p0

    .line 11835
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v7}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v7

    invoke-virtual {v7}, Landroid/util/ArrayMap;->size()I

    move-result v1

    .line 11836
    .local v1, "NP":I
    const/4 v4, 0x0

    .local v4, "ip":I
    :goto_1
    if-ge v4, v1, :cond_3

    .line 11837
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v7}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v7

    invoke-virtual {v7, v4}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/SparseArray;

    .line 11838
    .local v2, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 11839
    .local v0, "NA":I
    const/4 v3, 0x0

    .local v3, "ia":I
    :goto_2
    if-ge v3, v0, :cond_2

    .line 11840
    invoke-virtual {v2, v3}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    .line 11841
    .local v5, "p":Lcom/android/server/am/ProcessRecord;
    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_1

    iget-object v7, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v7}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    if-ne v7, p1, :cond_1

    .line 11842
    monitor-exit p0

    goto :goto_0

    .line 11851
    .end local v0    # "NA":I
    .end local v1    # "NP":I
    .end local v2    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v3    # "ia":I
    .end local v4    # "ip":I
    .end local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v6

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v6

    .line 11839
    .restart local v0    # "NA":I
    .restart local v1    # "NP":I
    .restart local v2    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v3    # "ia":I
    .restart local v4    # "ip":I
    .restart local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    .line 11836
    .end local v5    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 11847
    .end local v0    # "NA":I
    .end local v2    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v3    # "ia":I
    :cond_3
    :try_start_1
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Can\'t find mystery application for "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " from pid="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " uid="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, ": "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11850
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v5, v6

    goto :goto_0
.end method

.method private findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;
    .locals 3
    .param p1, "sourcePkg"    # Ljava/lang/String;
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;

    .prologue
    .line 7025
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v2, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .line 7026
    .local v1, "targetUris":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v1, :cond_0

    .line 7027
    invoke-static {}, Lcom/google/android/collect/Maps;->newArrayMap()Landroid/util/ArrayMap;

    move-result-object v1

    .line 7028
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v2, p3, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 7031
    :cond_0
    invoke-virtual {v1, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UriPermission;

    .line 7032
    .local v0, "perm":Lcom/android/server/am/UriPermission;
    if-nez v0, :cond_1

    .line 7033
    new-instance v0, Lcom/android/server/am/UriPermission;

    .end local v0    # "perm":Lcom/android/server/am/UriPermission;
    invoke-direct {v0, p1, p2, p3, p4}, Lcom/android/server/am/UriPermission;-><init>(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)V

    .line 7034
    .restart local v0    # "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v1, p4, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7037
    :cond_1
    return-object v0
.end method

.method private findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 15
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "callName"    # Ljava/lang/String;

    .prologue
    .line 18701
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x1

    const/4 v6, 0x2

    const/4 v8, 0x0

    move-object v1, p0

    move/from16 v4, p2

    move-object/from16 v7, p3

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 18703
    const/4 v12, 0x0

    .line 18705
    .local v12, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I

    move-result v11

    .line 18706
    .local v11, "pid":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_0

    .line 18707
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v1, v11}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object v0, v1

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    move-object v12, v0

    .line 18708
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18712
    .end local v11    # "pid":I
    :goto_0
    if-nez v12, :cond_0

    .line 18713
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v1}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v9

    .line 18715
    .local v9, "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    move-object/from16 v0, p1

    invoke-virtual {v9, v0}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/SparseArray;

    .line 18716
    .local v13, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    if-eqz v13, :cond_0

    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-lez v1, :cond_0

    .line 18717
    const/4 v1, 0x0

    invoke-virtual {v13, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    .end local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    check-cast v12, Lcom/android/server/am/ProcessRecord;

    .line 18718
    .restart local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    const/4 v1, -0x1

    move/from16 v0, p2

    if-eq v0, v1, :cond_0

    iget v1, v12, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p2

    if-eq v1, v0, :cond_0

    .line 18719
    const/4 v10, 0x1

    .local v10, "i":I
    :goto_1
    invoke-virtual {v13}, Landroid/util/SparseArray;->size()I

    move-result v1

    if-ge v10, v1, :cond_0

    .line 18720
    invoke-virtual {v13, v10}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/ProcessRecord;

    .line 18721
    .local v14, "thisProc":Lcom/android/server/am/ProcessRecord;
    iget v1, v14, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p2

    if-ne v1, v0, :cond_1

    .line 18722
    move-object v12, v14

    .line 18730
    .end local v9    # "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    .end local v10    # "i":I
    .end local v13    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v14    # "thisProc":Lcom/android/server/am/ProcessRecord;
    :cond_0
    return-object v12

    .line 18708
    .restart local v11    # "pid":I
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v1
    :try_end_3
    .catch Ljava/lang/NumberFormatException; {:try_start_3 .. :try_end_3} :catch_0

    .line 18709
    .end local v11    # "pid":I
    :catch_0
    move-exception v1

    goto :goto_0

    .line 18719
    .restart local v9    # "all":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;>;"
    .restart local v10    # "i":I
    .restart local v13    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v14    # "thisProc":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v10, v10, 0x1

    goto :goto_1
.end method

.method private findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;
    .locals 2
    .param p1, "targetUid"    # I
    .param p2, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;

    .prologue
    .line 7016
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .line 7017
    .local v0, "targetUris":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v0, :cond_0

    .line 7018
    invoke-virtual {v0, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/UriPermission;

    .line 7020
    :goto_0
    return-object v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0
.end method

.method private final finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;Z)Z
    .locals 7
    .param p1, "receiver"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Ljava/lang/String;
    .param p4, "resultExtras"    # Landroid/os/Bundle;
    .param p5, "resultAbort"    # Z

    .prologue
    const/4 v6, 0x0

    .line 16404
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->broadcastRecordForReceiverLocked(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v1

    .line 16405
    .local v1, "r":Lcom/android/server/am/BroadcastRecord;
    if-nez v1, :cond_0

    .line 16406
    const-string v0, "ActivityManager"

    const-string v2, "finishReceiver called but not found on queue"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16410
    :goto_0
    return v6

    :cond_0
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v6

    goto :goto_0
.end method

.method private forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V
    .locals 17
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 5504
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    move-object/from16 v1, p0

    move-object/from16 v2, p1

    move-object/from16 v10, p3

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 5506
    new-instance v4, Landroid/content/Intent;

    const-string v1, "android.intent.action.PACKAGE_RESTARTED"

    const-string v2, "package"

    const/4 v3, 0x0

    move-object/from16 v0, p1

    invoke-static {v2, v0, v3}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v2

    invoke-direct {v4, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 5508
    .local v4, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v1, :cond_0

    .line 5509
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5512
    :cond_0
    const-string v1, "android.intent.extra.UID"

    move/from16 v0, p2

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5513
    const-string v1, "android.intent.extra.user_handle"

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    invoke-virtual {v4, v1, v2}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5514
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    sget v14, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v15, 0x3e8

    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v16

    move-object/from16 v1, p0

    invoke-direct/range {v1 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 5518
    return-void
.end method

.method private final forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z
    .locals 26
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "callerWillRestart"    # Z
    .param p4, "purgeCache"    # Z
    .param p5, "doit"    # Z
    .param p6, "evenPersistent"    # Z
    .param p7, "uninstalling"    # Z
    .param p8, "userId"    # I
    .param p9, "reason"    # Ljava/lang/String;

    .prologue
    .line 5611
    const/4 v4, -0x1

    move/from16 v0, p8

    if-ne v0, v4, :cond_0

    if-nez p1, :cond_0

    .line 5612
    const-string v4, "ActivityManager"

    const-string v5, "Can\'t force stop all processes of all users, that is insane!"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5615
    :cond_0
    if-gez p2, :cond_1

    if-eqz p1, :cond_1

    .line 5617
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const/4 v5, 0x0

    move-object/from16 v0, p1

    invoke-interface {v4, v0, v5}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v4

    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result p2

    .line 5623
    :cond_1
    :goto_0
    if-eqz p5, :cond_9

    .line 5624
    if-eqz p1, :cond_4

    .line 5625
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Force stopping "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " appid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " user="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p8

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p9

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 5631
    :goto_1
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v23

    .line 5632
    .local v23, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    invoke-virtual/range {v23 .. v23}, Landroid/util/ArrayMap;->size()I

    move-result v4

    add-int/lit8 v20, v4, -0x1

    .local v20, "ip":I
    :goto_2
    if-ltz v20, :cond_9

    .line 5633
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Landroid/util/SparseArray;

    .line 5634
    .local v16, "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    invoke-virtual/range {v16 .. v16}, Landroid/util/SparseArray;->size()I

    move-result v4

    add-int/lit8 v19, v4, -0x1

    .local v19, "i":I
    :goto_3
    if-ltz v19, :cond_7

    .line 5635
    const/16 v24, 0x0

    .line 5636
    .local v24, "remove":Z
    move-object/from16 v0, v16

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v18

    .line 5637
    .local v18, "entUid":I
    if-eqz p1, :cond_6

    .line 5638
    const/4 v4, -0x1

    move/from16 v0, p8

    if-ne v0, v4, :cond_5

    .line 5639
    invoke-static/range {v18 .. v18}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    move/from16 v0, p2

    if-ne v4, v0, :cond_2

    .line 5640
    const/16 v24, 0x1

    .line 5650
    :cond_2
    :goto_4
    if-eqz v24, :cond_3

    .line 5651
    move-object/from16 v0, v16

    move/from16 v1, v19

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->removeAt(I)V

    .line 5634
    :cond_3
    add-int/lit8 v19, v19, -0x1

    goto :goto_3

    .line 5628
    .end local v16    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .end local v18    # "entUid":I
    .end local v19    # "i":I
    .end local v20    # "ip":I
    .end local v23    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .end local v24    # "remove":Z
    :cond_4
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Force stopping u"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p8

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p9

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 5643
    .restart local v16    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .restart local v18    # "entUid":I
    .restart local v19    # "i":I
    .restart local v20    # "ip":I
    .restart local v23    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .restart local v24    # "remove":Z
    :cond_5
    move/from16 v0, p8

    move/from16 v1, p2

    invoke-static {v0, v1}, Landroid/os/UserHandle;->getUid(II)I

    move-result v4

    move/from16 v0, v18

    if-ne v0, v4, :cond_2

    .line 5644
    const/16 v24, 0x1

    goto :goto_4

    .line 5647
    :cond_6
    invoke-static/range {v18 .. v18}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move/from16 v0, p8

    if-ne v4, v0, :cond_2

    .line 5648
    const/16 v24, 0x1

    goto :goto_4

    .line 5654
    .end local v18    # "entUid":I
    .end local v24    # "remove":Z
    :cond_7
    invoke-virtual/range {v16 .. v16}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-nez v4, :cond_8

    .line 5655
    move-object/from16 v0, v23

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->removeAt(I)Ljava/lang/Object;

    .line 5632
    :cond_8
    add-int/lit8 v20, v20, -0x1

    goto/16 :goto_2

    .line 5660
    .end local v16    # "ba":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    .end local v19    # "i":I
    .end local v20    # "ip":I
    .end local v23    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    :cond_9
    const/16 v8, -0x64

    const/4 v10, 0x1

    if-nez p1, :cond_a

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "stop user "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    :goto_5
    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move/from16 v6, p2

    move/from16 v7, p8

    move/from16 v9, p3

    move/from16 v11, p5

    move/from16 v12, p6

    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    move-result v17

    .line 5664
    .local v17, "didSomething":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p1

    move/from16 v1, p5

    move/from16 v2, p6

    move/from16 v3, p8

    invoke-virtual {v4, v0, v1, v2, v3}, Lcom/android/server/am/ActivityStackSupervisor;->forceStopPackageLocked(Ljava/lang/String;ZZI)Z

    move-result v4

    if-eqz v4, :cond_c

    .line 5665
    if-nez p5, :cond_b

    .line 5666
    const/4 v4, 0x1

    .line 5764
    :goto_6
    return v4

    .line 5660
    .end local v17    # "didSomething":Z
    :cond_a
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "stop "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v13

    goto :goto_5

    .line 5668
    .restart local v17    # "didSomething":Z
    :cond_b
    const/16 v17, 0x1

    .line 5671
    :cond_c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v0, p1

    move/from16 v1, p8

    move/from16 v2, p6

    move/from16 v3, p5

    invoke-virtual {v4, v0, v1, v2, v3}, Lcom/android/server/am/ActiveServices;->forceStopLocked(Ljava/lang/String;IZZ)Z

    move-result v4

    if-eqz v4, :cond_e

    .line 5672
    if-nez p5, :cond_d

    .line 5673
    const/4 v4, 0x1

    goto :goto_6

    .line 5675
    :cond_d
    const/16 v17, 0x1

    .line 5678
    :cond_e
    if-nez p1, :cond_f

    .line 5680
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 5683
    :cond_f
    new-instance v10, Ljava/util/ArrayList;

    invoke-direct {v10}, Ljava/util/ArrayList;-><init>()V

    .line 5684
    .local v10, "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v5, p1

    move/from16 v6, p2

    move/from16 v7, p5

    move/from16 v8, p6

    move/from16 v9, p8

    invoke-virtual/range {v4 .. v10}, Lcom/android/server/am/ProviderMap;->collectForceStopProviders(Ljava/lang/String;IZZILjava/util/ArrayList;)Z

    move-result v4

    if-eqz v4, :cond_11

    .line 5686
    if-nez p5, :cond_10

    .line 5687
    const/4 v4, 0x1

    goto :goto_6

    .line 5689
    :cond_10
    const/16 v17, 0x1

    .line 5691
    :cond_11
    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    move-result v14

    .line 5692
    .local v14, "N":I
    const/16 v19, 0x0

    .restart local v19    # "i":I
    :goto_7
    move/from16 v0, v19

    if-ge v0, v14, :cond_12

    .line 5693
    const/4 v5, 0x0

    move/from16 v0, v19

    invoke-virtual {v10, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ContentProviderRecord;

    const/4 v6, 0x1

    move-object/from16 v0, p0

    invoke-direct {v0, v5, v4, v6}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 5692
    add-int/lit8 v19, v19, 0x1

    goto :goto_7

    .line 5697
    :cond_12
    const/4 v4, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p8

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V

    .line 5699
    if-eqz p1, :cond_13

    if-eqz p7, :cond_1b

    .line 5704
    :cond_13
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    move-result v4

    if-lez v4, :cond_1b

    .line 5705
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v21

    .line 5707
    .local v21, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    :cond_14
    :goto_8
    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_1b

    .line 5708
    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v25

    check-cast v25, Ljava/lang/ref/WeakReference;

    .line 5709
    .local v25, "wpir":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-nez v25, :cond_15

    .line 5710
    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->remove()V

    goto :goto_8

    .line 5713
    :cond_15
    invoke-virtual/range {v25 .. v25}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Lcom/android/server/am/PendingIntentRecord;

    .line 5714
    .local v22, "pir":Lcom/android/server/am/PendingIntentRecord;
    if-nez v22, :cond_16

    .line 5715
    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->remove()V

    goto :goto_8

    .line 5718
    :cond_16
    if-nez p1, :cond_18

    .line 5720
    move-object/from16 v0, v22

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    move/from16 v0, p8

    if-ne v4, v0, :cond_14

    .line 5738
    :cond_17
    if-nez p5, :cond_1a

    .line 5739
    const/4 v4, 0x1

    goto/16 :goto_6

    .line 5725
    :cond_18
    move-object/from16 v0, v22

    iget v4, v0, Lcom/android/server/am/PendingIntentRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    move/from16 v0, p2

    if-ne v4, v0, :cond_14

    .line 5729
    const/4 v4, -0x1

    move/from16 v0, p8

    if-eq v0, v4, :cond_19

    move-object/from16 v0, v22

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->userId:I

    move/from16 v0, p8

    if-ne v4, v0, :cond_14

    .line 5733
    :cond_19
    move-object/from16 v0, v22

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_17

    goto :goto_8

    .line 5741
    :cond_1a
    const/16 v17, 0x1

    .line 5742
    invoke-interface/range {v21 .. v21}, Ljava/util/Iterator;->remove()V

    .line 5743
    const/4 v4, 0x1

    move-object/from16 v0, v22

    iput-boolean v4, v0, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 5744
    move-object/from16 v0, v22

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    if-eqz v4, :cond_14

    move-object/from16 v0, v22

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v4, v4, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    if-eqz v4, :cond_14

    .line 5745
    move-object/from16 v0, v22

    iget-object v4, v0, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v4, v4, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    move-object/from16 v0, v22

    iget-object v5, v0, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v4, v5}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    goto/16 :goto_8

    .line 5751
    .end local v21    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    .end local v22    # "pir":Lcom/android/server/am/PendingIntentRecord;
    .end local v25    # "wpir":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    :cond_1b
    if-eqz p5, :cond_1d

    .line 5752
    if-eqz p4, :cond_1c

    if-eqz p1, :cond_1c

    .line 5753
    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v15

    .line 5754
    .local v15, "ac":Lcom/android/server/AttributeCache;
    if-eqz v15, :cond_1c

    .line 5755
    move-object/from16 v0, p1

    invoke-virtual {v15, v0}, Lcom/android/server/AttributeCache;->removePackage(Ljava/lang/String;)V

    .line 5758
    .end local v15    # "ac":Lcom/android/server/AttributeCache;
    :cond_1c
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v4, :cond_1d

    .line 5759
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 5760
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleIdleLocked()V

    :cond_1d
    move/from16 v4, v17

    .line 5764
    goto/16 :goto_6

    .line 5619
    .end local v10    # "providers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ContentProviderRecord;>;"
    .end local v14    # "N":I
    .end local v17    # "didSomething":Z
    .end local v19    # "i":I
    :catch_0
    move-exception v4

    goto/16 :goto_0
.end method

.method private forceStopUserLocked(ILjava/lang/String;)V
    .locals 17
    .param p1, "userId"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 5521
    const/4 v2, 0x0

    const/4 v3, -0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v9, p1

    move-object/from16 v10, p2

    invoke-direct/range {v1 .. v10}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 5522
    new-instance v4, Landroid/content/Intent;

    const-string v1, "android.intent.action.USER_STOPPED"

    invoke-direct {v4, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5523
    .local v4, "intent":Landroid/content/Intent;
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5525
    const-string v1, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5526
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    sget v14, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v15, 0x3e8

    const/16 v16, -0x1

    move-object/from16 v1, p0

    invoke-direct/range {v1 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 5530
    return-void
.end method

.method private final generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;
    .locals 12
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/android/server/am/ProcessRecord;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ProviderInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8918
    const/4 v8, 0x0

    .line 8920
    .local v8, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v10, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    const/16 v11, 0xc00

    invoke-interface {v1, v3, v10, v11}, Landroid/content/pm/IPackageManager;->queryContentProviders(Ljava/lang/String;II)Ljava/util/List;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v8

    .line 8927
    :goto_0
    iget v9, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    .line 8928
    .local v9, "userId":I
    if-eqz v8, :cond_4

    .line 8929
    invoke-interface {v8}, Ljava/util/List;->size()I

    move-result v6

    .line 8930
    .local v6, "N":I
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/2addr v3, v6

    invoke-virtual {v1, v3}, Landroid/util/ArrayMap;->ensureCapacity(I)V

    .line 8931
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_1
    if-ge v7, v6, :cond_4

    .line 8932
    invoke-interface {v8, v7}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ProviderInfo;

    .line 8934
    .local v2, "cpi":Landroid/content/pm/ProviderInfo;
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v11, v2, Landroid/content/pm/ProviderInfo;->flags:I

    invoke-virtual {p0, v1, v3, v10, v11}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v5

    .line 8936
    .local v5, "singleton":Z
    if-eqz v5, :cond_0

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    if-eqz v1, :cond_0

    .line 8941
    invoke-interface {v8, v7}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 8942
    add-int/lit8 v6, v6, -0x1

    .line 8943
    add-int/lit8 v7, v7, -0x1

    .line 8931
    :goto_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    .line 8947
    :cond_0
    new-instance v4, Landroid/content/ComponentName;

    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v4, v1, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 8948
    .local v4, "comp":Landroid/content/ComponentName;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v1, v4, v9}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 8949
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v0, :cond_1

    .line 8950
    new-instance v0, Lcom/android/server/am/ContentProviderRecord;

    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object v1, p0

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;Z)V

    .line 8951
    .restart local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v1, v4, v0}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 8955
    :cond_1
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v1, v3, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 8956
    iget-boolean v1, v2, Landroid/content/pm/ProviderInfo;->multiprocess:Z

    if-eqz v1, :cond_2

    const-string v1, "android"

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3

    .line 8961
    :cond_2
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->versionCode:I

    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {p1, v1, v3, v10}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    .line 8964
    :cond_3
    iget-object v1, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->ensurePackageDexOpt(Ljava/lang/String;)V

    goto :goto_2

    .line 8967
    .end local v0    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v2    # "cpi":Landroid/content/pm/ProviderInfo;
    .end local v4    # "comp":Landroid/content/ComponentName;
    .end local v5    # "singleton":Z
    .end local v6    # "N":I
    .end local v7    # "i":I
    :cond_4
    return-object v8

    .line 8923
    .end local v9    # "userId":I
    :catch_0
    move-exception v1

    goto/16 :goto_0
.end method

.method private generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;
    .locals 2
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "condition"    # I
    .param p3, "activity"    # Ljava/lang/String;
    .param p4, "shortMsg"    # Ljava/lang/String;
    .param p5, "longMsg"    # Ljava/lang/String;
    .param p6, "stackTrace"    # Ljava/lang/String;

    .prologue
    .line 11430
    new-instance v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;

    invoke-direct {v0}, Landroid/app/ActivityManager$ProcessErrorStateInfo;-><init>()V

    .line 11432
    .local v0, "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    iput p2, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->condition:I

    .line 11433
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iput-object v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->processName:Ljava/lang/String;

    .line 11434
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->pid:I

    .line 11435
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iput v1, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->uid:I

    .line 11436
    iput-object p3, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->tag:Ljava/lang/String;

    .line 11437
    iput-object p4, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->shortMsg:Ljava/lang/String;

    .line 11438
    iput-object p5, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->longMsg:Ljava/lang/String;

    .line 11439
    iput-object p6, v0, Landroid/app/ActivityManager$ProcessErrorStateInfo;->stackTrace:Ljava/lang/String;

    .line 11441
    return-object v0
.end method

.method private static getCalledPreBootReceiversFile()Ljava/io/File;
    .locals 4

    .prologue
    .line 11037
    invoke-static {}, Landroid/os/Environment;->getDataDirectory()Ljava/io/File;

    move-result-object v0

    .line 11038
    .local v0, "dataDir":Ljava/io/File;
    new-instance v2, Ljava/io/File;

    const-string v3, "system"

    invoke-direct {v2, v0, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 11039
    .local v2, "systemDir":Ljava/io/File;
    new-instance v1, Ljava/io/File;

    const-string v3, "called_pre_boots.dat"

    invoke-direct {v1, v2, v3}, Ljava/io/File;-><init>(Ljava/io/File;Ljava/lang/String;)V

    .line 11040
    .local v1, "fname":Ljava/io/File;
    return-object v1
.end method

.method private getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6399
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6400
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 6401
    const/4 v1, 0x0

    .line 6403
    :goto_0
    return-object v1

    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    goto :goto_0
.end method

.method private getCommonServicesLocked(Z)Ljava/util/HashMap;
    .locals 3
    .param p1, "isolated"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z)",
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Landroid/os/IBinder;",
            ">;"
        }
    .end annotation

    .prologue
    .line 2346
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    if-nez v0, :cond_0

    .line 2347
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    .line 2351
    if-nez p1, :cond_0

    .line 2353
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string v1, "package"

    const-string v2, "package"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2354
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string v1, "window"

    const-string v2, "window"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2355
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    const-string v1, "alarm"

    const-string v2, "alarm"

    invoke-static {v2}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 2359
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppBindArgs:Ljava/util/HashMap;

    return-object v0
.end method

.method private getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "userId"    # I

    .prologue
    .line 9526
    const/4 v1, 0x0

    const/4 v4, 0x1

    move-object v0, p0

    move-object v2, p1

    move-object v3, p2

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method private final getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 40
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "token"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z
    .param p5, "userId"    # I

    .prologue
    .line 9161
    const/16 v22, 0x0

    .line 9162
    .local v22, "conn":Lcom/android/server/am/ContentProviderConnection;
    const/4 v6, 0x0

    .line 9164
    .local v6, "cpi":Landroid/content/pm/ProviderInfo;
    monitor-enter p0

    .line 9165
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v38

    .line 9167
    .local v38, "startTime":J
    const/16 v36, 0x0

    .line 9168
    .local v36, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p1, :cond_0

    .line 9169
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v36

    .line 9170
    if-nez v36, :cond_0

    .line 9171
    new-instance v5, Ljava/lang/SecurityException;

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to find app for caller "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p1

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " (pid="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ") when getting content provider "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-direct {v5, v10}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 9464
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .end local v38    # "startTime":J
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5

    .line 9178
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    .restart local v38    # "startTime":J
    :cond_0
    const/16 v21, 0x1

    .line 9180
    .local v21, "checkCrossUser":Z
    :try_start_1
    const-string v5, "getContentProviderImpl: getProviderByName"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9183
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v0, p2

    move/from16 v1, p5

    invoke-virtual {v5, v0, v1}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v4

    .line 9186
    .local v4, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v4, :cond_1

    if-eqz p5, :cond_1

    .line 9187
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    const/4 v10, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v5, v0, v10}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v4

    .line 9188
    if-eqz v4, :cond_1

    .line 9189
    iget-object v6, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 9190
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v12, v6, Landroid/content/pm/ProviderInfo;->flags:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10, v11, v12}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v5

    if-eqz v5, :cond_2

    move-object/from16 v0, v36

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 9193
    const/16 p5, 0x0

    .line 9194
    const/16 v21, 0x0

    .line 9202
    :cond_1
    :goto_0
    if-eqz v4, :cond_3

    const/16 v35, 0x1

    .line 9203
    .local v35, "providerRunning":Z
    :goto_1
    if-eqz v35, :cond_9

    .line 9204
    iget-object v6, v4, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 9206
    const-string v5, "getContentProviderImpl: before checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9207
    move-object/from16 v0, p0

    move-object/from16 v1, v36

    move/from16 v2, p5

    move/from16 v3, v21

    invoke-direct {v0, v6, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object v31

    .local v31, "msg":Ljava/lang/String;
    if-eqz v31, :cond_4

    .line 9209
    new-instance v5, Ljava/lang/SecurityException;

    move-object/from16 v0, v31

    invoke-direct {v5, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 9196
    .end local v31    # "msg":Ljava/lang/String;
    .end local v35    # "providerRunning":Z
    :cond_2
    const/4 v4, 0x0

    .line 9197
    const/4 v6, 0x0

    goto :goto_0

    .line 9202
    :cond_3
    const/16 v35, 0x0

    goto :goto_1

    .line 9211
    .restart local v31    # "msg":Ljava/lang/String;
    .restart local v35    # "providerRunning":Z
    :cond_4
    const-string v5, "getContentProviderImpl: after checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9213
    if-eqz v36, :cond_5

    move-object/from16 v0, v36

    invoke-virtual {v4, v0}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 9218
    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v26

    .line 9221
    .local v26, "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v5, 0x0

    move-object/from16 v0, v26

    iput-object v5, v0, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    .line 9222
    monitor-exit p0

    .line 9497
    .end local v26    # "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    .end local v31    # "msg":Ljava/lang/String;
    :goto_2
    return-object v26

    .line 9225
    .restart local v31    # "msg":Ljava/lang/String;
    :cond_5
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v32

    .line 9227
    .local v32, "origId":J
    const-string v5, "getContentProviderImpl: incProviderCountLocked"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9231
    move-object/from16 v0, p0

    move-object/from16 v1, v36

    move-object/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v1, v4, v2, v3}, Lcom/android/server/am/ActivityManagerService;->incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;

    move-result-object v22

    .line 9232
    if-eqz v22, :cond_6

    move-object/from16 v0, v22

    iget v5, v0, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    move-object/from16 v0, v22

    iget v10, v0, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr v5, v10

    const/4 v10, 0x1

    if-ne v5, v10, :cond_6

    .line 9233
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v5, :cond_6

    move-object/from16 v0, v36

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/4 v10, 0x2

    if-gt v5, v10, :cond_6

    .line 9238
    const-string v5, "getContentProviderImpl: before updateLruProcess"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9239
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    const/4 v10, 0x0

    const/4 v11, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10, v11}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 9240
    const-string v5, "getContentProviderImpl: after updateLruProcess"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9244
    :cond_6
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v5, :cond_8

    .line 9253
    const-string v5, "getContentProviderImpl: before updateOomAdj"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9254
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v37

    .line 9255
    .local v37, "success":Z
    const-string v5, "getContentProviderImpl: after updateOomAdj"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9261
    if-nez v37, :cond_8

    .line 9266
    const-string v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Existing provider "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v4, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v11}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " is crashing; detaching "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v36

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 9269
    move-object/from16 v0, p0

    move-object/from16 v1, v22

    move-object/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v1, v4, v2, v3}, Lcom/android/server/am/ActivityManagerService;->decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z

    move-result v30

    .line 9270
    .local v30, "lastRef":Z
    const-string v5, "getContentProviderImpl: before appDied"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9271
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p0

    invoke-virtual {v0, v5}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 9272
    const-string v5, "getContentProviderImpl: after appDied"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9273
    if-nez v30, :cond_7

    .line 9276
    const/16 v26, 0x0

    monitor-exit p0

    goto/16 :goto_2

    .line 9278
    :cond_7
    const/16 v35, 0x0

    .line 9279
    const/16 v22, 0x0

    .line 9283
    .end local v30    # "lastRef":Z
    .end local v37    # "success":Z
    :cond_8
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9287
    .end local v31    # "msg":Ljava/lang/String;
    .end local v32    # "origId":J
    :cond_9
    if-nez v35, :cond_18

    .line 9289
    :try_start_2
    const-string v5, "getContentProviderImpl: before resolveContentProvider"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9290
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    const/16 v10, 0xc00

    move-object/from16 v0, p2

    move/from16 v1, p5

    invoke-interface {v5, v0, v10, v1}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;

    move-result-object v6

    .line 9293
    const-string v5, "getContentProviderImpl: after resolveContentProvider"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_5
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 9296
    :goto_3
    if-nez v6, :cond_a

    .line 9297
    const/16 v26, 0x0

    :try_start_3
    monitor-exit p0

    goto/16 :goto_2

    .line 9303
    :cond_a
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    iget v12, v6, Landroid/content/pm/ProviderInfo;->flags:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10, v11, v12}, Lcom/android/server/am/ActivityManagerService;->isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z

    move-result v5

    if-eqz v5, :cond_c

    move-object/from16 v0, v36

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10}, Lcom/android/server/am/ActivityManagerService;->isValidSingletonCall(II)Z

    move-result v5

    if-eqz v5, :cond_c

    const/4 v9, 0x1

    .line 9306
    .local v9, "singleton":Z
    :goto_4
    if-eqz v9, :cond_b

    .line 9307
    const/16 p5, 0x0

    .line 9309
    :cond_b
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v5, v1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v5

    iput-object v5, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    .line 9310
    const-string v5, "getContentProviderImpl: got app info for user"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9313
    const-string v5, "getContentProviderImpl: before checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9314
    if-nez v9, :cond_d

    const/4 v5, 0x1

    :goto_5
    move-object/from16 v0, p0

    move-object/from16 v1, v36

    move/from16 v2, p5

    invoke-direct {v0, v6, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkContentProviderPermissionLocked(Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ProcessRecord;IZ)Ljava/lang/String;

    move-result-object v31

    .restart local v31    # "msg":Ljava/lang/String;
    if-eqz v31, :cond_e

    .line 9316
    new-instance v5, Ljava/lang/SecurityException;

    move-object/from16 v0, v31

    invoke-direct {v5, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 9303
    .end local v9    # "singleton":Z
    .end local v31    # "msg":Ljava/lang/String;
    :cond_c
    const/4 v9, 0x0

    goto :goto_4

    .line 9314
    .restart local v9    # "singleton":Z
    :cond_d
    const/4 v5, 0x0

    goto :goto_5

    .line 9318
    .restart local v31    # "msg":Ljava/lang/String;
    :cond_e
    const-string v5, "getContentProviderImpl: after checkContentProviderPermission"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9320
    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v5, :cond_f

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    if-nez v5, :cond_f

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    if-nez v5, :cond_f

    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    const-string v10, "system"

    invoke-virtual {v5, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_f

    .line 9325
    new-instance v5, Ljava/lang/IllegalArgumentException;

    const-string v10, "Attempt to launch content provider before system ready"

    invoke-direct {v5, v10}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    .line 9331
    :cond_f
    const/4 v5, 0x0

    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v1, v5}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v5

    if-nez v5, :cond_10

    .line 9332
    const-string v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to launch app "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, "/"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " for provider "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ": user "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move/from16 v0, p5

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " is stopped"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9336
    const/16 v26, 0x0

    monitor-exit p0

    goto/16 :goto_2

    .line 9339
    :cond_10
    new-instance v8, Landroid/content/ComponentName;

    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v8, v5, v10}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 9340
    .local v8, "comp":Landroid/content/ComponentName;
    const-string v5, "getContentProviderImpl: before getProviderByClass"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9341
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move/from16 v0, p5

    invoke-virtual {v5, v8, v0}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v23

    .line 9342
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .local v23, "cpr":Lcom/android/server/am/ContentProviderRecord;
    const-string v5, "getContentProviderImpl: after getProviderByClass"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9343
    if-nez v23, :cond_11

    const/16 v25, 0x1

    .line 9344
    .local v25, "firstClass":Z
    :goto_6
    if-eqz v25, :cond_21

    .line 9345
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result-wide v28

    .line 9347
    .local v28, "ident":J
    :try_start_4
    const-string v5, "getContentProviderImpl: before getApplicationInfo"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9348
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/16 v11, 0x400

    move/from16 v0, p5

    invoke-interface {v5, v10, v11, v0}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v7

    .line 9353
    .local v7, "ai":Landroid/content/pm/ApplicationInfo;
    const-string v5, "getContentProviderImpl: after getApplicationInfo"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9354
    if-nez v7, :cond_12

    .line 9355
    const-string v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "No package info for content provider "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 9357
    const/16 v26, 0x0

    .line 9364
    :try_start_5
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    move-object/from16 v4, v23

    .end local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_2

    .line 9343
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v7    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v25    # "firstClass":Z
    .end local v28    # "ident":J
    .restart local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_11
    const/16 v25, 0x0

    goto :goto_6

    .line 9359
    .restart local v7    # "ai":Landroid/content/pm/ApplicationInfo;
    .restart local v25    # "firstClass":Z
    .restart local v28    # "ident":J
    :cond_12
    :try_start_6
    move-object/from16 v0, p0

    move/from16 v1, p5

    invoke-virtual {v0, v7, v1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v7

    .line 9360
    new-instance v4, Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v5, p0

    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ContentProviderRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/pm/ProviderInfo;Landroid/content/pm/ApplicationInfo;Landroid/content/ComponentName;Z)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 9364
    .end local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :try_start_7
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9368
    .end local v7    # "ai":Landroid/content/pm/ApplicationInfo;
    .end local v28    # "ident":J
    :goto_7
    const-string v5, "getContentProviderImpl: now have ContentProviderRecord"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9370
    if-eqz v36, :cond_13

    move-object/from16 v0, v36

    invoke-virtual {v4, v0}, Lcom/android/server/am/ContentProviderRecord;->canRunHere(Lcom/android/server/am/ProcessRecord;)Z

    move-result v5

    if-eqz v5, :cond_13

    .line 9375
    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v26

    monitor-exit p0

    goto/16 :goto_2

    .line 9361
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v28    # "ident":J
    :catch_0
    move-exception v5

    .line 9364
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    move-object/from16 v4, v23

    .line 9365
    .end local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto :goto_7

    .line 9364
    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :catchall_1
    move-exception v5

    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5

    .line 9387
    .end local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v28    # "ident":J
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_13
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v20

    .line 9389
    .local v20, "N":I
    const/16 v27, 0x0

    .local v27, "i":I
    :goto_8
    move/from16 v0, v27

    move/from16 v1, v20

    if-ge v0, v1, :cond_14

    .line 9390
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    move/from16 v0, v27

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    if-ne v5, v4, :cond_1a

    .line 9397
    :cond_14
    move/from16 v0, v27

    move/from16 v1, v20

    if-lt v0, v1, :cond_16

    .line 9398
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    move-result-wide v32

    .line 9403
    .restart local v32    # "origId":J
    :try_start_8
    const-string v5, "getContentProviderImpl: before set stopped state"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9404
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    iget-object v10, v4, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v10, v10, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v11, 0x0

    move/from16 v0, p5

    invoke-interface {v5, v10, v11, v0}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V

    .line 9406
    const-string v5, "getContentProviderImpl: after set stopped state"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_4
    .catch Ljava/lang/IllegalArgumentException; {:try_start_8 .. :try_end_8} :catch_1
    .catchall {:try_start_8 .. :try_end_8} :catchall_3

    .line 9414
    :goto_9
    :try_start_9
    const-string v5, "getContentProviderImpl: looking for process record"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9415
    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v10, v4, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget v10, v10, Landroid/content/pm/ApplicationInfo;->uid:I

    const/4 v11, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v5, v10, v11}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v34

    .line 9417
    .local v34, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v34, :cond_1b

    move-object/from16 v0, v34

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v5, :cond_1b

    .line 9421
    const-string v5, "getContentProviderImpl: scheduling install"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9422
    move-object/from16 v0, v34

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v5, v10, v4}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    .line 9424
    :try_start_a
    move-object/from16 v0, v34

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v5, v6}, Landroid/app/IApplicationThread;->scheduleInstallProvider(Landroid/content/pm/ProviderInfo;)V
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_3
    .catchall {:try_start_a .. :try_end_a} :catchall_3

    .line 9442
    :cond_15
    :goto_a
    :try_start_b
    move-object/from16 v0, v34

    iput-object v0, v4, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 9443
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    .line 9445
    :try_start_c
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9449
    .end local v32    # "origId":J
    .end local v34    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_16
    const-string v5, "getContentProviderImpl: updating data structures"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9453
    if-eqz v25, :cond_17

    .line 9454
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v5, v8, v4}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 9457
    :cond_17
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v0, p2

    invoke-virtual {v5, v0, v4}, Lcom/android/server/am/ProviderMap;->putProviderByName(Ljava/lang/String;Lcom/android/server/am/ContentProviderRecord;)V

    .line 9458
    move-object/from16 v0, p0

    move-object/from16 v1, v36

    move-object/from16 v2, p3

    move/from16 v3, p4

    invoke-virtual {v0, v1, v4, v2, v3}, Lcom/android/server/am/ActivityManagerService;->incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;

    move-result-object v22

    .line 9459
    if-eqz v22, :cond_18

    .line 9460
    const/4 v5, 0x1

    move-object/from16 v0, v22

    iput-boolean v5, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    .line 9463
    .end local v8    # "comp":Landroid/content/ComponentName;
    .end local v9    # "singleton":Z
    .end local v20    # "N":I
    .end local v25    # "firstClass":Z
    .end local v27    # "i":I
    .end local v31    # "msg":Ljava/lang/String;
    :cond_18
    const-string v5, "getContentProviderImpl: done!"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9464
    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_0

    .line 9467
    monitor-enter v4

    .line 9468
    :cond_19
    :goto_b
    :try_start_d
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-nez v5, :cond_1f

    .line 9469
    iget-object v5, v4, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-nez v5, :cond_1c

    .line 9470
    const-string v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to launch app "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, "/"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " for provider "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ": launching app became null"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9474
    const/16 v5, 0x7554

    const/4 v10, 0x4

    new-array v10, v10, [Ljava/lang/Object;

    const/4 v11, 0x0

    iget-object v12, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v12}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v12

    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    aput-object v12, v10, v11

    const/4 v11, 0x1

    iget-object v12, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v12, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    aput-object v12, v10, v11

    const/4 v11, 0x2

    iget-object v12, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v12, v12, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    aput-object v12, v10, v11

    const/4 v11, 0x3

    aput-object p2, v10, v11

    invoke-static {v5, v10}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 9478
    const/16 v26, 0x0

    monitor-exit v4

    goto/16 :goto_2

    .line 9496
    :catchall_2
    move-exception v5

    monitor-exit v4
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    throw v5

    .line 9389
    .restart local v8    # "comp":Landroid/content/ComponentName;
    .restart local v9    # "singleton":Z
    .restart local v20    # "N":I
    .restart local v25    # "firstClass":Z
    .restart local v27    # "i":I
    .restart local v31    # "msg":Ljava/lang/String;
    :cond_1a
    add-int/lit8 v27, v27, 0x1

    goto/16 :goto_8

    .line 9408
    .restart local v32    # "origId":J
    :catch_1
    move-exception v24

    .line 9409
    .local v24, "e":Ljava/lang/IllegalArgumentException;
    :try_start_e
    const-string v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Failed trying to unstop package "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v4, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ": "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, v24

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    goto/16 :goto_9

    .line 9445
    .end local v24    # "e":Ljava/lang/IllegalArgumentException;
    :catchall_3
    move-exception v5

    :try_start_f
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_0

    .line 9428
    .restart local v34    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1b
    :try_start_10
    const-string v5, "getContentProviderImpl: before start process"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9429
    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    iget-object v12, v4, Lcom/android/server/am/ContentProviderRecord;->appInfo:Landroid/content/pm/ApplicationInfo;

    const/4 v13, 0x0

    const/4 v14, 0x0

    const-string v15, "content provider"

    new-instance v16, Landroid/content/ComponentName;

    iget-object v5, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v10, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v16

    invoke-direct {v0, v5, v10}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object/from16 v10, p0

    invoke-virtual/range {v10 .. v19}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v34

    .line 9433
    const-string v5, "getContentProviderImpl: after start process"

    move-object/from16 v0, p0

    move-wide/from16 v1, v38

    invoke-direct {v0, v1, v2, v5}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 9434
    if-nez v34, :cond_15

    .line 9435
    const-string v5, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Unable to launch app "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v11, v11, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, "/"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v6, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v11, v11, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " for provider "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    move-object/from16 v0, p2

    invoke-virtual {v10, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ": process is bad"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v5, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_3

    .line 9439
    const/16 v26, 0x0

    .line 9445
    :try_start_11
    invoke-static/range {v32 .. v33}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_11
    .catchall {:try_start_11 .. :try_end_11} :catchall_0

    goto/16 :goto_2

    .line 9485
    .end local v8    # "comp":Landroid/content/ComponentName;
    .end local v9    # "singleton":Z
    .end local v20    # "N":I
    .end local v25    # "firstClass":Z
    .end local v27    # "i":I
    .end local v31    # "msg":Ljava/lang/String;
    .end local v32    # "origId":J
    .end local v34    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1c
    if-eqz v22, :cond_1d

    .line 9486
    const/4 v5, 0x1

    :try_start_12
    move-object/from16 v0, v22

    iput-boolean v5, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    .line 9488
    :cond_1d
    invoke-virtual {v4}, Ljava/lang/Object;->wait()V
    :try_end_12
    .catch Ljava/lang/InterruptedException; {:try_start_12 .. :try_end_12} :catch_2
    .catchall {:try_start_12 .. :try_end_12} :catchall_4

    .line 9491
    if-eqz v22, :cond_19

    .line 9492
    const/4 v5, 0x0

    :try_start_13
    move-object/from16 v0, v22

    iput-boolean v5, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    goto/16 :goto_b

    .line 9489
    :catch_2
    move-exception v5

    .line 9491
    if-eqz v22, :cond_19

    .line 9492
    const/4 v5, 0x0

    move-object/from16 v0, v22

    iput-boolean v5, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    goto/16 :goto_b

    .line 9491
    :catchall_4
    move-exception v5

    if-eqz v22, :cond_1e

    .line 9492
    const/4 v10, 0x0

    move-object/from16 v0, v22

    iput-boolean v10, v0, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    :cond_1e
    throw v5

    .line 9496
    :cond_1f
    monitor-exit v4
    :try_end_13
    .catchall {:try_start_13 .. :try_end_13} :catchall_2

    .line 9497
    if-eqz v4, :cond_20

    move-object/from16 v0, v22

    invoke-virtual {v4, v0}, Lcom/android/server/am/ContentProviderRecord;->newHolder(Lcom/android/server/am/ContentProviderConnection;)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v5

    :goto_c
    move-object/from16 v26, v5

    goto/16 :goto_2

    :cond_20
    const/4 v5, 0x0

    goto :goto_c

    .line 9425
    .restart local v8    # "comp":Landroid/content/ComponentName;
    .restart local v9    # "singleton":Z
    .restart local v20    # "N":I
    .restart local v25    # "firstClass":Z
    .restart local v27    # "i":I
    .restart local v31    # "msg":Ljava/lang/String;
    .restart local v32    # "origId":J
    .restart local v34    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_3
    move-exception v5

    goto/16 :goto_a

    .line 9407
    .end local v34    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_4
    move-exception v5

    goto/16 :goto_9

    .line 9294
    .end local v8    # "comp":Landroid/content/ComponentName;
    .end local v9    # "singleton":Z
    .end local v20    # "N":I
    .end local v25    # "firstClass":Z
    .end local v27    # "i":I
    .end local v31    # "msg":Ljava/lang/String;
    .end local v32    # "origId":J
    :catch_5
    move-exception v5

    goto/16 :goto_3

    .end local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v8    # "comp":Landroid/content/ComponentName;
    .restart local v9    # "singleton":Z
    .restart local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v25    # "firstClass":Z
    .restart local v31    # "msg":Ljava/lang/String;
    :cond_21
    move-object/from16 v4, v23

    .end local v23    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v4    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    goto/16 :goto_7
.end method

.method public static getInputDispatchingTimeoutLocked(Lcom/android/server/am/ActivityRecord;)J
    .locals 2
    .param p0, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 10360
    if-eqz p0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-static {v0}, Lcom/android/server/am/ActivityManagerService;->getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J

    move-result-wide v0

    :goto_0
    return-wide v0

    :cond_0
    const-wide/16 v0, 0x1388

    goto :goto_0
.end method

.method public static getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J
    .locals 2
    .param p0, "r"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 10364
    if-eqz p0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    if-eqz v0, :cond_1

    .line 10365
    :cond_0
    const-wide/32 v0, 0xea60

    .line 10367
    :goto_0
    return-wide v0

    :cond_1
    const-wide/16 v0, 0x1388

    goto :goto_0
.end method

.method private final getKsmInfo()[J
    .locals 13

    .prologue
    const/4 v12, 0x1

    const-wide/16 v10, 0x1000

    const-wide/16 v8, 0x400

    const/4 v7, 0x0

    const/4 v6, 0x0

    .line 14054
    const/4 v3, 0x4

    new-array v1, v3, [J

    .line 14055
    .local v1, "longOut":[J
    new-array v0, v12, [I

    const/16 v3, 0x2020

    aput v3, v0, v6

    .line 14058
    .local v0, "SINGLE_LONG_FORMAT":[I
    new-array v2, v12, [J

    .line 14059
    .local v2, "longTmp":[J
    const-string v3, "/sys/kernel/mm/ksm/pages_shared"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 14061
    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v6

    .line 14062
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 14063
    const-string v3, "/sys/kernel/mm/ksm/pages_sharing"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 14065
    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v12

    .line 14066
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 14067
    const-string v3, "/sys/kernel/mm/ksm/pages_unshared"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 14069
    const/4 v3, 0x2

    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v3

    .line 14070
    const-wide/16 v4, 0x0

    aput-wide v4, v2, v6

    .line 14071
    const-string v3, "/sys/kernel/mm/ksm/pages_volatile"

    invoke-static {v3, v0, v7, v2, v7}, Landroid/os/Process;->readProcFile(Ljava/lang/String;[I[Ljava/lang/String;[J[F)Z

    .line 14073
    const/4 v3, 0x3

    aget-wide v4, v2, v6

    mul-long/2addr v4, v10

    div-long/2addr v4, v8

    aput-wide v4, v1, v3

    .line 14074
    return-object v1
.end method

.method private final getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I
    .locals 4
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    .line 4597
    invoke-interface {p1}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    .line 4599
    .local v2, "threadBinder":Landroid/os/IBinder;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v0, v3, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    .line 4600
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 4601
    .local v1, "rec":Lcom/android/server/am/ProcessRecord;
    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_0

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    if-ne v3, v2, :cond_0

    .line 4605
    .end local v0    # "i":I
    .end local v1    # "rec":Lcom/android/server/am/ProcessRecord;
    :goto_1
    return v0

    .line 4599
    .restart local v0    # "i":I
    .restart local v1    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_0
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 4605
    .end local v1    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_1
    const/4 v0, -0x1

    goto :goto_1
.end method

.method private getLowRamTimeSinceIdle(J)J
    .locals 7
    .param p1, "now"    # J

    .prologue
    const-wide/16 v0, 0x0

    .line 10924
    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    iget-wide v4, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    cmp-long v4, v4, v0

    if-lez v4, :cond_0

    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    sub-long v0, p1, v0

    :cond_0
    add-long/2addr v0, v2

    return-wide v0
.end method

.method private getProfileIdsLocked(I)Ljava/util/Set;
    .locals 6
    .param p1, "userId"    # I

    .prologue
    .line 18842
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    .line 18843
    .local v3, "userIds":Ljava/util/Set;
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    const/4 v5, 0x0

    invoke-virtual {v4, p1, v5}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v1

    .line 18845
    .local v1, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v1}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .local v0, "i$":Ljava/util/Iterator;
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_0

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    .line 18846
    .local v2, "user":Landroid/content/pm/UserInfo;
    iget v4, v2, Landroid/content/pm/UserInfo;->id:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    invoke-interface {v3, v4}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 18848
    .end local v2    # "user":Landroid/content/pm/UserInfo;
    :cond_0
    return-object v3
.end method

.method private getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;
    .locals 4
    .param p1, "authority"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 7001
    const/4 v1, 0x0

    .line 7002
    .local v1, "pi":Landroid/content/pm/ProviderInfo;
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v0

    .line 7003
    .local v0, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-eqz v0, :cond_0

    .line 7004
    iget-object v1, v0, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    .line 7012
    :goto_0
    return-object v1

    .line 7007
    :cond_0
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    const/16 v3, 0x800

    invoke-interface {v2, p1, v3, p2}, Landroid/content/pm/IPackageManager;->resolveContentProvider(Ljava/lang/String;II)Landroid/content/pm/ProviderInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v1

    goto :goto_0

    .line 7009
    :catch_0
    move-exception v2

    goto :goto_0
.end method

.method private final getStickiesLocked(Ljava/lang/String;Landroid/content/IntentFilter;Ljava/util/List;I)Ljava/util/List;
    .locals 9
    .param p1, "action"    # Ljava/lang/String;
    .param p2, "filter"    # Landroid/content/IntentFilter;
    .param p3, "cur"    # Ljava/util/List;
    .param p4, "userId"    # I

    .prologue
    .line 15533
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v7}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v5

    .line 15534
    .local v5, "resolver":Landroid/content/ContentResolver;
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v7, p4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 15535
    .local v6, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-nez v6, :cond_0

    move-object v1, p3

    .line 15552
    .end local p3    # "cur":Ljava/util/List;
    .local v1, "cur":Ljava/util/List;
    :goto_0
    return-object v1

    .line 15538
    .end local v1    # "cur":Ljava/util/List;
    .restart local p3    # "cur":Ljava/util/List;
    :cond_0
    invoke-virtual {v6, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/util/ArrayList;

    .line 15539
    .local v4, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-nez v4, :cond_1

    move-object v1, p3

    .line 15540
    .end local p3    # "cur":Ljava/util/List;
    .restart local v1    # "cur":Ljava/util/List;
    goto :goto_0

    .line 15542
    .end local v1    # "cur":Ljava/util/List;
    .restart local p3    # "cur":Ljava/util/List;
    :cond_1
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 15543
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v0, :cond_4

    .line 15544
    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    .line 15545
    .local v3, "intent":Landroid/content/Intent;
    const/4 v7, 0x1

    const-string v8, "ActivityManager"

    invoke-virtual {p2, v5, v3, v7, v8}, Landroid/content/IntentFilter;->match(Landroid/content/ContentResolver;Landroid/content/Intent;ZLjava/lang/String;)I

    move-result v7

    if-ltz v7, :cond_3

    .line 15546
    if-nez p3, :cond_2

    .line 15547
    new-instance p3, Ljava/util/ArrayList;

    .end local p3    # "cur":Ljava/util/List;
    invoke-direct {p3}, Ljava/util/ArrayList;-><init>()V

    .line 15549
    .restart local p3    # "cur":Ljava/util/List;
    :cond_2
    invoke-interface {p3, v3}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    .line 15543
    :cond_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .end local v3    # "intent":Landroid/content/Intent;
    :cond_4
    move-object v1, p3

    .line 15552
    .end local p3    # "cur":Ljava/util/List;
    .restart local v1    # "cur":Ljava/util/List;
    goto :goto_0
.end method

.method private handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 17
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "shortMsg"    # Ljava/lang/String;
    .param p3, "longMsg"    # Ljava/lang/String;
    .param p4, "stackTrace"    # Ljava/lang/String;

    .prologue
    .line 11465
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .line 11468
    .local v4, "now":J
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_1

    .line 11469
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v6, v7}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Ljava/lang/Long;

    .line 11473
    .local v10, "crashTime":Ljava/lang/Long;
    :goto_0
    if-eqz v10, :cond_3

    invoke-virtual {v10}, Ljava/lang/Long;->longValue()J

    move-result-wide v6

    const-wide/32 v14, 0xea60

    add-long/2addr v6, v14

    cmp-long v3, v4, v6

    if-gez v3, :cond_3

    .line 11475
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v7, v7, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " has crashed too many times: killing!"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 11477
    const/16 v3, 0x7550

    const/4 v6, 0x3

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v6, v7

    const/4 v7, 0x1

    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v8, v6, v7

    const/4 v7, 0x2

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v6, v7

    invoke-static {v3, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 11479
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityStackSupervisor;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 11480
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v3, :cond_2

    .line 11485
    const/16 v3, 0x753f

    const/4 v6, 0x3

    new-array v6, v6, [Ljava/lang/Object;

    const/4 v7, 0x0

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v6, v7

    const/4 v7, 0x1

    move-object/from16 v0, p1

    iget v8, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v8}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    aput-object v8, v6, v7

    const/4 v7, 0x2

    move-object/from16 v0, p1

    iget-object v8, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v8, v8, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v8, v6, v7

    invoke-static {v3, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 11487
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_0

    .line 11490
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v15, v3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move/from16 v16, v0

    new-instance v3, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move-object/from16 v8, p4

    invoke-direct/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;-><init>(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    move/from16 v0, v16

    invoke-virtual {v14, v15, v0, v3}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 11492
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v6, v7}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)V

    .line 11494
    :cond_0
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->bad:Z

    .line 11495
    const/4 v3, 0x1

    move-object/from16 v0, p1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 11499
    const/4 v3, 0x0

    const/4 v6, 0x0

    const-string v7, "crash"

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v3, v6, v7}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 11500
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 11501
    const/4 v3, 0x0

    .line 11544
    :goto_1
    return v3

    .line 11471
    .end local v10    # "crashTime":Ljava/lang/Long;
    :cond_1
    const/4 v10, 0x0

    .restart local v10    # "crashTime":Ljava/lang/Long;
    goto/16 :goto_0

    .line 11503
    :cond_2
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    .line 11509
    :goto_2
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    add-int/lit8 v11, v3, -0x1

    .local v11, "i":I
    :goto_3
    if-ltz v11, :cond_4

    .line 11512
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3, v11}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ServiceRecord;

    .line 11513
    .local v13, "sr":Lcom/android/server/am/ServiceRecord;
    iget v3, v13, Lcom/android/server/am/ServiceRecord;->crashCount:I

    add-int/lit8 v3, v3, 0x1

    iput v3, v13, Lcom/android/server/am/ServiceRecord;->crashCount:I

    .line 11509
    add-int/lit8 v11, v11, -0x1

    goto :goto_3

    .line 11505
    .end local v11    # "i":I
    .end local v13    # "sr":Lcom/android/server/am/ServiceRecord;
    :cond_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityStackSupervisor;->finishTopRunningActivityLocked(Lcom/android/server/am/ProcessRecord;)V

    goto :goto_2

    .line 11520
    .restart local v11    # "i":I
    :cond_4
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    .line 11521
    .local v2, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    move-object/from16 v0, p1

    if-ne v0, v3, :cond_6

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-lez v3, :cond_6

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x1

    if-nez v3, :cond_6

    .line 11523
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v9, v3, -0x1

    .local v9, "activityNdx":I
    :goto_4
    if-ltz v9, :cond_6

    .line 11524
    invoke-virtual {v2, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ActivityRecord;

    .line 11525
    .local v12, "r":Lcom/android/server/am/ActivityRecord;
    invoke-virtual {v12}, Lcom/android/server/am/ActivityRecord;->isHomeActivity()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 11526
    const-string v3, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Clearing package preferred activities from "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, v12, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v3, v6}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 11528
    :try_start_0
    invoke-static {}, Landroid/app/ActivityThread;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    iget-object v6, v12, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-interface {v3, v6}, Landroid/content/pm/IPackageManager;->clearPackagePreferredActivities(Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 11523
    :cond_5
    :goto_5
    add-int/lit8 v9, v9, -0x1

    goto :goto_4

    .line 11537
    .end local v9    # "activityNdx":I
    .end local v12    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_6
    move-object/from16 v0, p1

    iget-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v3, :cond_7

    .line 11540
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v4, v5}, Ljava/lang/Long;->valueOf(J)Ljava/lang/Long;

    move-result-object v8

    invoke-virtual {v3, v6, v7, v8}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 11543
    :cond_7
    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    if-eqz v3, :cond_8

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p1

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    invoke-virtual {v3, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 11544
    :cond_8
    const/4 v3, 0x1

    goto/16 :goto_1

    .line 11530
    .restart local v9    # "activityNdx":I
    .restart local v12    # "r":Lcom/android/server/am/ActivityRecord;
    :catch_0
    move-exception v3

    goto :goto_5
.end method

.method private final handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 8
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "restarting"    # Z
    .param p3, "allowRestart"    # Z

    .prologue
    const/4 v7, 0x0

    .line 4556
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 4557
    .local v3, "pid":I
    const/4 v4, -0x1

    invoke-direct {p0, p1, p2, p3, v4}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z

    move-result v2

    .line 4558
    .local v2, "kept":Z
    if-nez v2, :cond_0

    if-nez p2, :cond_0

    .line 4559
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 4560
    if-lez v3, :cond_0

    .line 4561
    invoke-static {v3}, Lcom/android/server/am/ProcessList;->remove(I)V

    .line 4565
    :cond_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-ne v4, p1, :cond_1

    .line 4566
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 4570
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ActivityStackSupervisor;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v0

    .line 4572
    .local v0, "hasVisibleActivities":Z
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->clear()V

    .line 4574
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v4, :cond_2

    .line 4575
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Crash of app "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " running instrumentation "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4577
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V

    .line 4578
    .local v1, "info":Landroid/os/Bundle;
    const-string v4, "shortMsg"

    const-string v5, "Process crashed."

    invoke-virtual {v1, v4, v5}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 4579
    invoke-virtual {p0, p1, v7, v1}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 4582
    .end local v1    # "info":Landroid/os/Bundle;
    :cond_2
    if-nez p2, :cond_3

    .line 4583
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    move-result v4

    if-nez v4, :cond_3

    .line 4589
    if-eqz v0, :cond_3

    .line 4590
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 4594
    :cond_3
    return-void
.end method

.method private isGetTasksAllowed(Ljava/lang/String;II)Z
    .locals 4
    .param p1, "caller"    # Ljava/lang/String;
    .param p2, "callingPid"    # I
    .param p3, "callingUid"    # I

    .prologue
    .line 8109
    const-string v1, "android.permission.REAL_GET_TASKS"

    invoke-virtual {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v1

    if-nez v1, :cond_2

    const/4 v0, 0x1

    .line 8111
    .local v0, "allowed":Z
    :goto_0
    if-nez v0, :cond_0

    .line 8112
    const-string v1, "android.permission.GET_TASKS"

    invoke-virtual {p0, v1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v1

    if-nez v1, :cond_0

    .line 8119
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    invoke-interface {v1, p3}, Landroid/content/pm/IPackageManager;->isUidPrivileged(I)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 8120
    const/4 v0, 0x1

    .line 8121
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": caller "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " is using old GET_TASKS but privileged; allowing"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 8128
    :cond_0
    :goto_1
    if-nez v0, :cond_1

    .line 8129
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": caller "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " does not hold REAL_GET_TASKS; limiting output"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8132
    :cond_1
    return v0

    .line 8109
    .end local v0    # "allowed":Z
    :cond_2
    const/4 v0, 0x0

    goto :goto_0

    .line 8124
    .restart local v0    # "allowed":Z
    :catch_0
    move-exception v1

    goto :goto_1
.end method

.method private isLockTaskAuthorized(Ljava/lang/String;)Z
    .locals 6
    .param p1, "pkg"    # Ljava/lang/String;

    .prologue
    const/4 v3, 0x0

    .line 8765
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v5, "device_policy"

    invoke-virtual {v4, v5}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/admin/DevicePolicyManager;

    .line 8768
    .local v0, "dpm":Landroid/app/admin/DevicePolicyManager;
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v5

    invoke-virtual {v5}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v5

    invoke-virtual {v4, p1, v5}, Landroid/content/pm/PackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v2

    .line 8770
    .local v2, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    if-ne v2, v4, :cond_0

    if-eqz v0, :cond_0

    invoke-virtual {v0, p1}, Landroid/app/admin/DevicePolicyManager;->isLockTaskPermitted(Ljava/lang/String;)Z
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v4

    if-eqz v4, :cond_0

    const/4 v3, 0x1

    .line 8772
    .end local v2    # "uid":I
    :cond_0
    :goto_0
    return v3

    .line 8771
    :catch_0
    move-exception v1

    .line 8772
    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    goto :goto_0
.end method

.method private isReceivingBroadcast(Lcom/android/server/am/ProcessRecord;)Lcom/android/server/am/BroadcastQueue;
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 16866
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    .line 16867
    .local v4, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v4, :cond_0

    .line 16868
    iget-object v3, v4, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    .line 16882
    :goto_0
    return-object v3

    .line 16872
    :cond_0
    monitor-enter p0

    .line 16873
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_1
    if-ge v1, v2, :cond_2

    aget-object v3, v0, v1

    .line 16874
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    iget-object v4, v3, Lcom/android/server/am/BroadcastQueue;->mPendingBroadcast:Lcom/android/server/am/BroadcastRecord;

    .line 16875
    if-eqz v4, :cond_1

    iget-object v5, v4, Lcom/android/server/am/BroadcastRecord;->curApp:Lcom/android/server/am/ProcessRecord;

    if-ne v5, p1, :cond_1

    .line 16877
    monitor-exit p0

    goto :goto_0

    .line 16880
    .end local v0    # "arr$":[Lcom/android/server/am/BroadcastQueue;
    .end local v1    # "i$":I
    .end local v2    # "len$":I
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5

    .line 16873
    .restart local v0    # "arr$":[Lcom/android/server/am/BroadcastQueue;
    .restart local v1    # "i$":I
    .restart local v2    # "len$":I
    .restart local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 16880
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_2
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16882
    const/4 v3, 0x0

    goto :goto_0
.end method

.method private final killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z
    .locals 14
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "appId"    # I
    .param p3, "userId"    # I
    .param p4, "minOomAdj"    # I
    .param p5, "callerWillRestart"    # Z
    .param p6, "allowRestart"    # Z
    .param p7, "doit"    # Z
    .param p8, "evenPersistent"    # Z
    .param p9, "reason"    # Ljava/lang/String;

    .prologue
    .line 5535
    new-instance v12, Ljava/util/ArrayList;

    invoke-direct {v12}, Ljava/util/ArrayList;-><init>()V

    .line 5540
    .local v12, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v13, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v13}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v13

    invoke-virtual {v13}, Landroid/util/ArrayMap;->size()I

    move-result v5

    .line 5541
    .local v5, "NP":I
    const/4 v10, 0x0

    .local v10, "ip":I
    :goto_0
    if-ge v10, v5, :cond_a

    .line 5542
    iget-object v13, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v13}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v13

    invoke-virtual {v13, v10}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/SparseArray;

    .line 5543
    .local v7, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v4

    .line 5544
    .local v4, "NA":I
    const/4 v9, 0x0

    .local v9, "ia":I
    :goto_1
    if-ge v9, v4, :cond_9

    .line 5545
    invoke-virtual {v7, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .line 5546
    .local v6, "app":Lcom/android/server/am/ProcessRecord;
    iget-boolean v13, v6, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v13, :cond_1

    if-nez p8, :cond_1

    .line 5544
    :cond_0
    :goto_2
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 5550
    :cond_1
    iget-boolean v13, v6, Lcom/android/server/am/ProcessRecord;->removed:Z

    if-eqz v13, :cond_2

    .line 5551
    if-eqz p7, :cond_0

    .line 5552
    invoke-virtual {v12, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 5558
    :cond_2
    iget v13, v6, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v0, p4

    if-lt v13, v0, :cond_0

    .line 5564
    if-nez p1, :cond_4

    .line 5565
    iget v13, v6, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p3

    if-ne v13, v0, :cond_0

    .line 5568
    if-ltz p2, :cond_3

    iget v13, v6, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v13}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v13

    move/from16 v0, p2

    if-ne v13, v0, :cond_0

    .line 5589
    :cond_3
    if-nez p7, :cond_8

    .line 5590
    const/4 v13, 0x1

    .line 5602
    .end local v4    # "NA":I
    .end local v6    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v7    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v9    # "ia":I
    :goto_3
    return v13

    .line 5575
    .restart local v4    # "NA":I
    .restart local v6    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v7    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v9    # "ia":I
    :cond_4
    iget-object v13, v6, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-eqz v13, :cond_7

    iget-object v13, v6, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v13, p1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v13

    if-eqz v13, :cond_7

    const/4 v11, 0x1

    .line 5577
    .local v11, "isDep":Z
    :goto_4
    if-nez v11, :cond_5

    iget v13, v6, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v13}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v13

    move/from16 v0, p2

    if-ne v13, v0, :cond_0

    .line 5580
    :cond_5
    const/4 v13, -0x1

    move/from16 v0, p3

    if-eq v0, v13, :cond_6

    iget v13, v6, Lcom/android/server/am/ProcessRecord;->userId:I

    move/from16 v0, p3

    if-ne v13, v0, :cond_0

    .line 5583
    :cond_6
    iget-object v13, v6, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v13, p1}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v13

    if-nez v13, :cond_3

    if-nez v11, :cond_3

    goto :goto_2

    .line 5575
    .end local v11    # "isDep":Z
    :cond_7
    const/4 v11, 0x0

    goto :goto_4

    .line 5592
    :cond_8
    const/4 v13, 0x1

    iput-boolean v13, v6, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 5593
    invoke-virtual {v12, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 5541
    .end local v6    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_9
    add-int/lit8 v10, v10, 0x1

    goto/16 :goto_0

    .line 5597
    .end local v4    # "NA":I
    .end local v7    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v9    # "ia":I
    :cond_a
    invoke-virtual {v12}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 5598
    .local v3, "N":I
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_5
    if-ge v8, v3, :cond_b

    .line 5599
    invoke-virtual {v12, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ProcessRecord;

    move/from16 v0, p5

    move/from16 v1, p6

    move-object/from16 v2, p9

    invoke-direct {p0, v13, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 5598
    add-int/lit8 v8, v8, 0x1

    goto :goto_5

    .line 5601
    :cond_b
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 5602
    if-lez v3, :cond_c

    const/4 v13, 0x1

    goto :goto_3

    :cond_c
    const/4 v13, 0x0

    goto :goto_3
.end method

.method private killProcessesBelowAdj(ILjava/lang/String;)Z
    .locals 8
    .param p1, "belowAdj"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 10830
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const/16 v7, 0x3e8

    if-eq v6, v7, :cond_0

    .line 10831
    new-instance v6, Ljava/lang/SecurityException;

    const-string v7, "killProcessesBelowAdj() only available to system"

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 10834
    :cond_0
    const/4 v2, 0x0

    .line 10835
    .local v2, "killed":Z
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v7

    .line 10836
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v5

    .line 10837
    .local v5, "size":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v5, :cond_3

    .line 10838
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 10839
    .local v3, "pid":I
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 10840
    .local v4, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v4, :cond_2

    .line 10837
    :cond_1
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 10842
    :cond_2
    iget v0, v4, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 10843
    .local v0, "adj":I
    if-le v0, p1, :cond_1

    iget-boolean v6, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v6, :cond_1

    .line 10844
    const/4 v6, 0x1

    invoke-virtual {v4, p2, v6}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 10845
    const/4 v2, 0x1

    goto :goto_1

    .line 10848
    .end local v0    # "adj":I
    .end local v3    # "pid":I
    .end local v4    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    monitor-exit v7

    .line 10849
    return v2

    .line 10848
    .end local v1    # "i":I
    .end local v5    # "size":I
    :catchall_0
    move-exception v6

    monitor-exit v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v6
.end method

.method private loadResourcesOnSystemReady()V
    .locals 2

    .prologue
    .line 11025
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v1}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v0

    .line 11026
    .local v0, "res":Landroid/content/res/Resources;
    const v1, #android:bool@config_hasRecents#t

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getBoolean(I)Z

    move-result v1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mHasRecents:Z

    const v1, #android:dimen@thumbnail_width#t

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    const v1, #android:dimen@thumbnail_height#t

    invoke-virtual {v0, v1}, Landroid/content/res/Resources;->getDimensionPixelSize(I)I

    move-result v1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    .line 11029
    return-void
.end method

.method private lockScreenShownToString()Ljava/lang/String;
    .locals 2

    .prologue
    .line 10123
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    packed-switch v0, :pswitch_data_0

    .line 10127
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Unknown="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    :goto_0
    return-object v0

    .line 10124
    :pswitch_0
    const-string v0, "LOCK_SCREEN_HIDDEN"

    goto :goto_0

    .line 10125
    :pswitch_1
    const-string v0, "LOCK_SCREEN_LEAVING"

    goto :goto_0

    .line 10126
    :pswitch_2
    const-string v0, "LOCK_SCREEN_SHOWN"

    goto :goto_0

    .line 10123
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
    .end packed-switch
.end method

.method private logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V
    .locals 18
    .param p1, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "info"    # Landroid/os/StrictMode$ViolationInfo;

    .prologue
    .line 11662
    if-nez p2, :cond_1

    .line 11771
    :cond_0
    :goto_0
    return-void

    .line 11665
    :cond_1
    if-eqz p1, :cond_2

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v2, v2, 0x81

    if-eqz v2, :cond_8

    :cond_2
    const/4 v11, 0x1

    .line 11668
    .local v11, "isSystemApp":Z
    :goto_1
    if-nez p1, :cond_9

    const-string v14, "unknown"

    .line 11669
    .local v14, "processName":Ljava/lang/String;
    :goto_2
    if-eqz v11, :cond_a

    const-string v7, "system_app_strictmode"

    .line 11670
    .local v7, "dropboxTag":Ljava/lang/String;
    :goto_3
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v3, "dropbox"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/os/DropBoxManager;

    .line 11674
    .local v6, "dbox":Landroid/os/DropBoxManager;
    if-eqz v6, :cond_0

    invoke-virtual {v6, v7}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 11678
    if-eqz v11, :cond_b

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStrictModeBuffer:Ljava/lang/StringBuilder;

    .line 11679
    .local v5, "sb":Ljava/lang/StringBuilder;
    :goto_4
    monitor-enter v5

    .line 11680
    :try_start_0
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->length()I

    move-result v2

    if-nez v2, :cond_c

    const/4 v9, 0x1

    .line 11681
    .local v9, "bufferWasEmpty":Z
    :goto_5
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v14, v5}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 11682
    const-string v2, "Build: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    sget-object v3, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11683
    const-string v2, "System-App: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v11}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11684
    const-string v2, "Uptime-Millis: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-wide v0, v0, Landroid/os/StrictMode$ViolationInfo;->violationUptimeMillis:J

    move-wide/from16 v16, v0

    move-wide/from16 v0, v16

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11685
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    if-eqz v2, :cond_3

    .line 11686
    const-string v2, "Loop-Violation-Number: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->violationNumThisLoop:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11688
    :cond_3
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    if-eqz v2, :cond_4

    .line 11689
    const-string v2, "Animations-Running: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->numAnimationsRunning:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11691
    :cond_4
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    if-eqz v2, :cond_5

    .line 11692
    const-string v2, "Broadcast-Intent-Action: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-object v3, v0, Landroid/os/StrictMode$ViolationInfo;->broadcastIntentAction:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11694
    :cond_5
    move-object/from16 v0, p2

    iget v2, v0, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    const/4 v3, -0x1

    if-eq v2, v3, :cond_6

    .line 11695
    const-string v2, "Duration-Millis: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget v3, v0, Landroid/os/StrictMode$ViolationInfo;->durationMillis:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11697
    :cond_6
    move-object/from16 v0, p2

    iget-wide v2, v0, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    const-wide/16 v16, -0x1

    cmp-long v2, v2, v16

    if-eqz v2, :cond_7

    .line 11698
    const-string v2, "Instance-Count: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-wide v0, v0, Landroid/os/StrictMode$ViolationInfo;->numInstances:J

    move-wide/from16 v16, v0

    move-wide/from16 v0, v16

    invoke-virtual {v2, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11700
    :cond_7
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    if-eqz v2, :cond_d

    .line 11701
    move-object/from16 v0, p2

    iget-object v8, v0, Landroid/os/StrictMode$ViolationInfo;->tags:[Ljava/lang/String;

    .local v8, "arr$":[Ljava/lang/String;
    array-length v12, v8

    .local v12, "len$":I
    const/4 v10, 0x0

    .local v10, "i$":I
    :goto_6
    if-ge v10, v12, :cond_d

    aget-object v15, v8, v10

    .line 11702
    .local v15, "tag":Ljava/lang/String;
    const-string v2, "Span-Tag: "

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11701
    add-int/lit8 v10, v10, 0x1

    goto :goto_6

    .line 11665
    .end local v5    # "sb":Ljava/lang/StringBuilder;
    .end local v6    # "dbox":Landroid/os/DropBoxManager;
    .end local v7    # "dropboxTag":Ljava/lang/String;
    .end local v8    # "arr$":[Ljava/lang/String;
    .end local v9    # "bufferWasEmpty":Z
    .end local v10    # "i$":I
    .end local v11    # "isSystemApp":Z
    .end local v12    # "len$":I
    .end local v14    # "processName":Ljava/lang/String;
    .end local v15    # "tag":Ljava/lang/String;
    :cond_8
    const/4 v11, 0x0

    goto/16 :goto_1

    .line 11668
    .restart local v11    # "isSystemApp":Z
    :cond_9
    move-object/from16 v0, p1

    iget-object v14, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto/16 :goto_2

    .line 11669
    .restart local v14    # "processName":Ljava/lang/String;
    :cond_a
    const-string v7, "data_app_strictmode"

    goto/16 :goto_3

    .line 11678
    .restart local v6    # "dbox":Landroid/os/DropBoxManager;
    .restart local v7    # "dropboxTag":Ljava/lang/String;
    :cond_b
    new-instance v5, Ljava/lang/StringBuilder;

    const/16 v2, 0x400

    invoke-direct {v5, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    goto/16 :goto_4

    .line 11680
    .restart local v5    # "sb":Ljava/lang/StringBuilder;
    :cond_c
    const/4 v9, 0x0

    goto/16 :goto_5

    .line 11705
    .restart local v9    # "bufferWasEmpty":Z
    :cond_d
    :try_start_1
    const-string v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11706
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    if-eqz v2, :cond_e

    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    iget-object v2, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    if-eqz v2, :cond_e

    .line 11707
    move-object/from16 v0, p2

    iget-object v2, v0, Landroid/os/StrictMode$ViolationInfo;->crashInfo:Landroid/app/ApplicationErrorReport$CrashInfo;

    iget-object v2, v2, Landroid/app/ApplicationErrorReport$CrashInfo;->stackTrace:Ljava/lang/String;

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11709
    :cond_e
    const-string v2, "\n"

    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11713
    invoke-virtual {v5}, Ljava/lang/StringBuilder;->length()I

    move-result v2

    const/high16 v3, 0x10000

    if-le v2, v3, :cond_10

    const/4 v13, 0x1

    .line 11714
    .local v13, "needsFlush":Z
    :goto_7
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 11723
    if-eqz v11, :cond_f

    if-eqz v13, :cond_11

    .line 11724
    :cond_f
    new-instance v2, Lcom/android/server/am/ActivityManagerService$16;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Error dump: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v3, p0

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService$16;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/StringBuilder;Landroid/os/DropBoxManager;Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$16;->start()V

    goto/16 :goto_0

    .line 11713
    .end local v13    # "needsFlush":Z
    :cond_10
    const/4 v13, 0x0

    goto :goto_7

    .line 11714
    .end local v9    # "bufferWasEmpty":Z
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 11742
    .restart local v9    # "bufferWasEmpty":Z
    .restart local v13    # "needsFlush":Z
    :cond_11
    if-eqz v9, :cond_0

    .line 11751
    new-instance v2, Lcom/android/server/am/ActivityManagerService$17;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Error dump: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p0

    invoke-direct {v2, v0, v3, v6, v7}, Lcom/android/server/am/ActivityManagerService$17;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Landroid/os/DropBoxManager;Ljava/lang/String;)V

    invoke-virtual {v2}, Lcom/android/server/am/ActivityManagerService$17;->start()V

    goto/16 :goto_0
.end method

.method private makeAppCrashingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "shortMsg"    # Ljava/lang/String;
    .param p3, "longMsg"    # Ljava/lang/String;
    .param p4, "stackTrace"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x1

    .line 11397
    iput-boolean v2, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 11398
    const/4 v3, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v4, p2

    move-object v5, p3

    move-object v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object v0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 11400
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 11401
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->stopFreezingAllLocked()V

    .line 11402
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    move-result v0

    return v0
.end method

.method private makeAppNotRespondingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Ljava/lang/String;
    .param p3, "shortMsg"    # Ljava/lang/String;
    .param p4, "longMsg"    # Ljava/lang/String;

    .prologue
    .line 11407
    const/4 v0, 0x1

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 11408
    const/4 v2, 0x2

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->generateProcessError(Lcom/android/server/am/ProcessRecord;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/app/ActivityManager$ProcessErrorStateInfo;

    move-result-object v0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 11411
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 11412
    invoke-virtual {p1}, Lcom/android/server/am/ProcessRecord;->stopFreezingAllLocked()V

    .line 11413
    return-void
.end method

.method private maybePrunePersistedUriGrantsLocked(I)Z
    .locals 9
    .param p1, "uid"    # I

    .prologue
    const/4 v6, 0x0

    .line 7916
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    .line 7917
    .local v3, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v3, :cond_1

    .line 7942
    :cond_0
    :goto_0
    return v6

    .line 7918
    :cond_1
    invoke-virtual {v3}, Landroid/util/ArrayMap;->size()I

    move-result v7

    const/16 v8, 0x80

    if-lt v7, v8, :cond_0

    .line 7920
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v4

    .line 7921
    .local v4, "persisted":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v3}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v7

    invoke-interface {v7}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_2
    :goto_1
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_3

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UriPermission;

    .line 7922
    .local v2, "perm":Lcom/android/server/am/UriPermission;
    iget v7, v2, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v7, :cond_2

    .line 7923
    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 7927
    .end local v2    # "perm":Lcom/android/server/am/UriPermission;
    :cond_3
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v7

    add-int/lit8 v5, v7, -0x80

    .line 7928
    .local v5, "trimCount":I
    if-lez v5, :cond_0

    .line 7930
    new-instance v6, Lcom/android/server/am/UriPermission$PersistedTimeComparator;

    invoke-direct {v6}, Lcom/android/server/am/UriPermission$PersistedTimeComparator;-><init>()V

    invoke-static {v4, v6}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 7931
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_2
    if-ge v0, v5, :cond_4

    .line 7932
    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UriPermission;

    .line 7938
    .restart local v2    # "perm":Lcom/android/server/am/UriPermission;
    const/4 v6, -0x1

    invoke-virtual {v2, v6}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    .line 7939
    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 7931
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    .line 7942
    .end local v2    # "perm":Lcom/android/server/am/UriPermission;
    :cond_4
    const/4 v6, 0x1

    goto :goto_0
.end method

.method private final moveAffiliatedTasksToFront(Lcom/android/server/am/TaskRecord;I)Z
    .locals 13
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;
    .param p2, "taskIndex"    # I

    .prologue
    const/4 v8, 0x1

    const/4 v9, 0x0

    const/4 v12, -0x1

    .line 3930
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 3931
    .local v0, "N":I
    move-object v6, p1

    .line 3932
    .local v6, "top":Lcom/android/server/am/TaskRecord;
    move v7, p2

    .line 3933
    .local v7, "topIndex":I
    :goto_0
    iget-object v10, v6, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    if-eqz v10, :cond_0

    if-lez v7, :cond_0

    .line 3934
    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    .line 3935
    add-int/lit8 v7, v7, -0x1

    goto :goto_0

    .line 3940
    :cond_0
    iget v10, v6, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    iget v11, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    if-ne v10, v11, :cond_5

    move v5, v8

    .line 3941
    .local v5, "sane":Z
    :goto_1
    move v2, v7

    .line 3942
    .local v2, "endIndex":I
    move-object v4, v6

    .line 3943
    .local v4, "prev":Lcom/android/server/am/TaskRecord;
    :cond_1
    if-ge v2, v0, :cond_3

    .line 3944
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v10, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/TaskRecord;

    .line 3947
    .local v1, "cur":Lcom/android/server/am/TaskRecord;
    if-ne v1, v6, :cond_6

    .line 3949
    iget-object v10, v1, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    if-nez v10, :cond_2

    iget v10, v1, Lcom/android/server/am/TaskRecord;->mNextAffiliateTaskId:I

    if-eq v10, v12, :cond_8

    .line 3950
    :cond_2
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Bad chain @"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ": first task has next affiliate: "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 3952
    const/4 v5, 0x0

    .line 4006
    .end local v1    # "cur":Lcom/android/server/am/TaskRecord;
    :cond_3
    :goto_2
    if-eqz v5, :cond_4

    .line 4007
    if-ge v2, p2, :cond_4

    .line 4008
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Bad chain @"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ": did not extend to task "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " @"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4010
    const/4 v5, 0x0

    .line 4013
    :cond_4
    if-eqz v5, :cond_c

    .line 4016
    move v3, v7

    .local v3, "i":I
    :goto_3
    if-gt v3, v2, :cond_d

    .line 4019
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v9, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/TaskRecord;

    .line 4020
    .restart local v1    # "cur":Lcom/android/server/am/TaskRecord;
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    sub-int v10, v3, v7

    invoke-virtual {v9, v10, v1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 4016
    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .end local v1    # "cur":Lcom/android/server/am/TaskRecord;
    .end local v2    # "endIndex":I
    .end local v3    # "i":I
    .end local v4    # "prev":Lcom/android/server/am/TaskRecord;
    .end local v5    # "sane":Z
    :cond_5
    move v5, v9

    .line 3940
    goto/16 :goto_1

    .line 3957
    .restart local v1    # "cur":Lcom/android/server/am/TaskRecord;
    .restart local v2    # "endIndex":I
    .restart local v4    # "prev":Lcom/android/server/am/TaskRecord;
    .restart local v5    # "sane":Z
    :cond_6
    iget-object v10, v1, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    if-ne v10, v4, :cond_7

    iget v10, v1, Lcom/android/server/am/TaskRecord;->mNextAffiliateTaskId:I

    iget v11, v4, Lcom/android/server/am/TaskRecord;->taskId:I

    if-eq v10, v11, :cond_8

    .line 3959
    :cond_7
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Bad chain @"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ": middle task "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " @"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " has bad next affiliate "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, v1, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " id "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget v12, v1, Lcom/android/server/am/TaskRecord;->mNextAffiliateTaskId:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ", expected "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 3964
    const/4 v5, 0x0

    .line 3965
    goto/16 :goto_2

    .line 3968
    :cond_8
    iget v10, v1, Lcom/android/server/am/TaskRecord;->mPrevAffiliateTaskId:I

    if-ne v10, v12, :cond_9

    .line 3970
    iget-object v10, v1, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    if-eqz v10, :cond_3

    .line 3971
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Bad chain @"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ": last task "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " has previous affiliate "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, v1, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 3974
    const/4 v5, 0x0

    goto/16 :goto_2

    .line 3980
    :cond_9
    iget-object v10, v1, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    if-nez v10, :cond_a

    .line 3981
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Bad chain @"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ": task "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " has previous affiliate "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, v1, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " but should be id "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget-object v12, v1, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 3985
    const/4 v5, 0x0

    .line 3986
    goto/16 :goto_2

    .line 3989
    :cond_a
    iget v10, v1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    iget v11, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    if-eq v10, v11, :cond_b

    .line 3990
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Bad chain @"

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ": task "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " has affiliated id "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget v12, v1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " but should be "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    iget v12, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 3994
    const/4 v5, 0x0

    .line 3995
    goto/16 :goto_2

    .line 3997
    :cond_b
    move-object v4, v1

    .line 3998
    add-int/lit8 v2, v2, 0x1

    .line 3999
    if-lt v2, v0, :cond_1

    .line 4000
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Bad chain ran off index "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, ": last task "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    .line 4002
    const/4 v5, 0x0

    .line 4003
    goto/16 :goto_2

    .end local v1    # "cur":Lcom/android/server/am/TaskRecord;
    :cond_c
    move v8, v9

    .line 4028
    :cond_d
    return v8
.end method

.method private final moveTaskBackwardsLocked(I)V
    .locals 2
    .param p1, "task"    # I

    .prologue
    .line 8630
    const-string v0, "ActivityManager"

    const-string v1, "moveTaskBackwards not yet implemented!"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 8631
    return-void
.end method

.method static procStateToImportance(IILandroid/app/ActivityManager$RunningAppProcessInfo;)I
    .locals 2
    .param p0, "procState"    # I
    .param p1, "memAdj"    # I
    .param p2, "currApp"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 12217
    invoke-static {p0}, Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportance(I)I

    move-result v0

    .line 12218
    .local v0, "imp":I
    const/16 v1, 0x190

    if-ne v0, v1, :cond_0

    .line 12219
    iput p1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I

    .line 12223
    :goto_0
    return v0

    .line 12221
    :cond_0
    const/4 v1, 0x0

    iput v1, p2, Landroid/app/ActivityManager$RunningAppProcessInfo;->lru:I

    goto :goto_0
.end method

.method private static processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;
    .locals 2
    .param p0, "process"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 11898
    if-eqz p0, :cond_0

    iget v0, p0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne v0, v1, :cond_1

    .line 11899
    :cond_0
    const-string v0, "system_server"

    .line 11903
    :goto_0
    return-object v0

    .line 11900
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x1

    if-eqz v0, :cond_2

    .line 11901
    const-string v0, "system_app"

    goto :goto_0

    .line 11903
    :cond_2
    const-string v0, "data_app"

    goto :goto_0
.end method

.method private processNextAffiliateChainLocked(I)I
    .locals 12
    .param p1, "start"    # I

    .prologue
    .line 3740
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v9, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/TaskRecord;

    .line 3741
    .local v6, "startTask":Lcom/android/server/am/TaskRecord;
    iget v0, v6, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    .line 3744
    .local v0, "affiliateId":I
    iget v9, v6, Lcom/android/server/am/TaskRecord;->taskId:I

    if-ne v9, v0, :cond_0

    iget-object v9, v6, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    if-nez v9, :cond_0

    iget-object v9, v6, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    if-nez v9, :cond_0

    .line 3749
    const/4 v9, 0x1

    iput-boolean v9, v6, Lcom/android/server/am/TaskRecord;->inRecents:Z

    .line 3750
    add-int/lit8 v9, p1, 0x1

    .line 3807
    :goto_0
    return v9

    .line 3754
    :cond_0
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->clear()V

    .line 3755
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v9

    add-int/lit8 v2, v9, -0x1

    .local v2, "i":I
    :goto_1
    if-lt v2, p1, :cond_2

    .line 3756
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v9, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/TaskRecord;

    .line 3757
    .local v7, "task":Lcom/android/server/am/TaskRecord;
    iget v9, v7, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    if-ne v9, v0, :cond_1

    .line 3758
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v9, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 3759
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    invoke-virtual {v9, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 3755
    :cond_1
    add-int/lit8 v2, v2, -0x1

    goto :goto_1

    .line 3765
    .end local v7    # "task":Lcom/android/server/am/TaskRecord;
    :cond_2
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mTaskRecordComparator:Ljava/util/Comparator;

    invoke-static {v9, v10}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    .line 3769
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    const/4 v10, 0x0

    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/TaskRecord;

    .line 3770
    .local v1, "first":Lcom/android/server/am/TaskRecord;
    const/4 v9, 0x1

    iput-boolean v9, v1, Lcom/android/server/am/TaskRecord;->inRecents:Z

    .line 3771
    iget-object v9, v1, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    if-eqz v9, :cond_3

    .line 3772
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Link error 1 first.next="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v1, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3773
    const/4 v9, 0x0

    invoke-virtual {v1, v9}, Lcom/android/server/am/TaskRecord;->setNextAffiliate(Lcom/android/server/am/TaskRecord;)V

    .line 3774
    const/4 v9, 0x0

    invoke-virtual {p0, v1, v9}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 3777
    :cond_3
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v8

    .line 3778
    .local v8, "tmpSize":I
    const/4 v2, 0x0

    :goto_2
    add-int/lit8 v9, v8, -0x1

    if-ge v2, v9, :cond_6

    .line 3779
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    invoke-virtual {v9, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/TaskRecord;

    .line 3780
    .local v4, "next":Lcom/android/server/am/TaskRecord;
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    add-int/lit8 v10, v2, 0x1

    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/TaskRecord;

    .line 3781
    .local v5, "prev":Lcom/android/server/am/TaskRecord;
    iget-object v9, v4, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    if-eq v9, v5, :cond_4

    .line 3782
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Link error 2 next="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " prev="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v4, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " setting prev="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3784
    invoke-virtual {v4, v5}, Lcom/android/server/am/TaskRecord;->setPrevAffiliate(Lcom/android/server/am/TaskRecord;)V

    .line 3785
    const/4 v9, 0x0

    invoke-virtual {p0, v4, v9}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 3787
    :cond_4
    iget-object v9, v5, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    if-eq v9, v4, :cond_5

    .line 3788
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Link error 3 prev="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " next="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v5, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " setting next="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3790
    invoke-virtual {v5, v4}, Lcom/android/server/am/TaskRecord;->setNextAffiliate(Lcom/android/server/am/TaskRecord;)V

    .line 3791
    const/4 v9, 0x0

    invoke-virtual {p0, v5, v9}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 3793
    :cond_5
    const/4 v9, 0x1

    iput-boolean v9, v5, Lcom/android/server/am/TaskRecord;->inRecents:Z

    .line 3778
    add-int/lit8 v2, v2, 0x1

    goto/16 :goto_2

    .line 3796
    .end local v4    # "next":Lcom/android/server/am/TaskRecord;
    .end local v5    # "prev":Lcom/android/server/am/TaskRecord;
    :cond_6
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    add-int/lit8 v10, v8, -0x1

    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/TaskRecord;

    .line 3797
    .local v3, "last":Lcom/android/server/am/TaskRecord;
    iget-object v9, v3, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    if-eqz v9, :cond_7

    .line 3798
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Link error 4 last.prev="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v3, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 3799
    const/4 v9, 0x0

    invoke-virtual {v3, v9}, Lcom/android/server/am/TaskRecord;->setPrevAffiliate(Lcom/android/server/am/TaskRecord;)V

    .line 3800
    const/4 v9, 0x0

    invoke-virtual {p0, v3, v9}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 3804
    :cond_7
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    invoke-virtual {v9, p1, v10}, Ljava/util/ArrayList;->addAll(ILjava/util/Collection;)Z

    .line 3807
    add-int v9, p1, v8

    goto/16 :goto_0
.end method

.method private final processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 10
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v9, 0x0

    const/4 v8, 0x1

    .line 5812
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 5813
    .local v3, "pid":I
    const/4 v1, 0x0

    .line 5814
    .local v1, "gone":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 5815
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 5816
    .local v2, "knownApp":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_0

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v4, :cond_0

    .line 5817
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->remove(I)V

    .line 5818
    const/4 v1, 0x1

    .line 5820
    :cond_0
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5822
    if-eqz v1, :cond_5

    .line 5823
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Process "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " failed to attach"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5824
    const/16 v4, 0x7555

    const/4 v5, 0x4

    new-array v5, v5, [Ljava/lang/Object;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v9

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v8

    const/4 v6, 0x2

    iget v7, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x3

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v7, v5, v6

    invoke-static {v4, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 5826
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v6, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5, v6}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)V

    .line 5827
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->remove(I)V

    .line 5828
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v4, p1, :cond_1

    .line 5829
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x19

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v7, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v5, v6, v7, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 5831
    const/4 v4, 0x0

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 5833
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 5834
    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_2

    .line 5835
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 5838
    :cond_2
    invoke-virtual {p0, p1, v8}, Lcom/android/server/am/ActivityManagerService;->checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z

    .line 5840
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v4, p1}, Lcom/android/server/am/ActiveServices;->processStartTimedOutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5841
    const-string v4, "start timeout"

    invoke-virtual {p1, v4, v8}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 5842
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    if-eqz v4, :cond_3

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v4, v4, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v4, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, v3, :cond_3

    .line 5843
    const-string v4, "ActivityManager"

    const-string v5, "Unattached app died before backup, skipping"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5845
    :try_start_1
    const-string v4, "backup"

    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v4

    invoke-static {v4}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v0

    .line 5847
    .local v0, "bm":Landroid/app/backup/IBackupManager;
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-interface {v0, v4}, Landroid/app/backup/IBackupManager;->agentDisconnected(Ljava/lang/String;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 5852
    .end local v0    # "bm":Landroid/app/backup/IBackupManager;
    :cond_3
    :goto_0
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->isPendingBroadcastProcessLocked(I)Z

    move-result v4

    if-eqz v4, :cond_4

    .line 5853
    const-string v4, "ActivityManager"

    const-string v5, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5854
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->skipPendingBroadcastLocked(I)V

    .line 5859
    :cond_4
    :goto_1
    return-void

    .line 5820
    .end local v2    # "knownApp":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 5857
    .restart local v2    # "knownApp":Lcom/android/server/am/ProcessRecord;
    :cond_5
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Spurious process start timeout - pid not known for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 5848
    :catch_0
    move-exception v4

    goto :goto_0
.end method

.method private readGrantedUriPermissionsLocked()V
    .locals 27

    .prologue
    .line 7758
    invoke-static {}, Ljava/lang/System;->currentTimeMillis()J

    move-result-wide v10

    .line 7760
    .local v10, "now":J
    const/4 v7, 0x0

    .line 7762
    .local v7, "fis":Ljava/io/FileInputStream;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    move-object/from16 v24, v0

    invoke-virtual/range {v24 .. v24}, Landroid/util/AtomicFile;->openRead()Ljava/io/FileInputStream;

    move-result-object v7

    .line 7763
    invoke-static {}, Landroid/util/Xml;->newPullParser()Lorg/xmlpull/v1/XmlPullParser;

    move-result-object v8

    .line 7764
    .local v8, "in":Lorg/xmlpull/v1/XmlPullParser;
    const/16 v24, 0x0

    move-object/from16 v0, v24

    invoke-interface {v8, v7, v0}, Lorg/xmlpull/v1/XmlPullParser;->setInput(Ljava/io/InputStream;Ljava/lang/String;)V

    .line 7767
    :cond_0
    :goto_0
    invoke-interface {v8}, Lorg/xmlpull/v1/XmlPullParser;->next()I

    move-result v21

    .local v21, "type":I
    const/16 v24, 0x1

    move/from16 v0, v21

    move/from16 v1, v24

    if-eq v0, v1, :cond_3

    .line 7768
    invoke-interface {v8}, Lorg/xmlpull/v1/XmlPullParser;->getName()Ljava/lang/String;

    move-result-object v17

    .line 7769
    .local v17, "tag":Ljava/lang/String;
    const/16 v24, 0x2

    move/from16 v0, v21

    move/from16 v1, v24

    if-ne v0, v1, :cond_0

    .line 7770
    const-string v24, "uri-grant"

    move-object/from16 v0, v24

    move-object/from16 v1, v17

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v24

    if-eqz v24, :cond_0

    .line 7773
    const-string v24, "userHandle"

    const/16 v25, -0x2710

    move-object/from16 v0, v24

    move/from16 v1, v25

    invoke-static {v8, v0, v1}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)I

    move-result v23

    .line 7775
    .local v23, "userHandle":I
    const/16 v24, -0x2710

    move/from16 v0, v23

    move/from16 v1, v24

    if-eq v0, v1, :cond_1

    .line 7777
    move/from16 v16, v23

    .line 7778
    .local v16, "sourceUserId":I
    move/from16 v20, v23

    .line 7783
    .local v20, "targetUserId":I
    :goto_1
    const/16 v24, 0x0

    const-string v25, "sourcePkg"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-interface {v8, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v15

    .line 7784
    .local v15, "sourcePkg":Ljava/lang/String;
    const/16 v24, 0x0

    const-string v25, "targetPkg"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-interface {v8, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v18

    .line 7785
    .local v18, "targetPkg":Ljava/lang/String;
    const/16 v24, 0x0

    const-string v25, "uri"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-interface {v8, v0, v1}, Lorg/xmlpull/v1/XmlPullParser;->getAttributeValue(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v24

    invoke-static/range {v24 .. v24}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v22

    .line 7786
    .local v22, "uri":Landroid/net/Uri;
    const-string v24, "prefix"

    move-object/from16 v0, v24

    invoke-static {v8, v0}, Lcom/android/internal/util/XmlUtils;->readBooleanAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z

    move-result v14

    .line 7787
    .local v14, "prefix":Z
    const-string v24, "modeFlags"

    move-object/from16 v0, v24

    invoke-static {v8, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v9

    .line 7788
    .local v9, "modeFlags":I
    const-string v24, "createdTime"

    move-object/from16 v0, v24

    invoke-static {v8, v0, v10, v11}, Lcom/android/internal/util/XmlUtils;->readLongAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;J)J

    move-result-wide v4

    .line 7791
    .local v4, "createdTime":J
    invoke-virtual/range {v22 .. v22}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v24

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    move/from16 v2, v16

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v13

    .line 7793
    .local v13, "pi":Landroid/content/pm/ProviderInfo;
    if-eqz v13, :cond_2

    iget-object v0, v13, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    move-object/from16 v24, v0

    move-object/from16 v0, v24

    invoke-virtual {v15, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v24

    if-eqz v24, :cond_2

    .line 7794
    const/16 v19, -0x1

    .line 7796
    .local v19, "targetUid":I
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v24

    move-object/from16 v0, v24

    move-object/from16 v1, v18

    move/from16 v2, v20

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_3
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v19

    .line 7800
    :goto_2
    const/16 v24, -0x1

    move/from16 v0, v19

    move/from16 v1, v24

    if-eq v0, v1, :cond_0

    .line 7801
    :try_start_2
    new-instance v24, Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-object/from16 v0, v24

    move/from16 v1, v16

    move-object/from16 v2, v22

    invoke-direct {v0, v1, v2, v14}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    move/from16 v2, v19

    move-object/from16 v3, v24

    invoke-direct {v0, v15, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v12

    .line 7804
    .local v12, "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v12, v9, v4, v5}, Lcom/android/server/am/UriPermission;->initPersistedModes(IJ)V
    :try_end_2
    .catch Ljava/io/FileNotFoundException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_2 .. :try_end_2} :catch_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    goto/16 :goto_0

    .line 7813
    .end local v4    # "createdTime":J
    .end local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v9    # "modeFlags":I
    .end local v12    # "perm":Lcom/android/server/am/UriPermission;
    .end local v13    # "pi":Landroid/content/pm/ProviderInfo;
    .end local v14    # "prefix":Z
    .end local v15    # "sourcePkg":Ljava/lang/String;
    .end local v16    # "sourceUserId":I
    .end local v17    # "tag":Ljava/lang/String;
    .end local v18    # "targetPkg":Ljava/lang/String;
    .end local v19    # "targetUid":I
    .end local v20    # "targetUserId":I
    .end local v21    # "type":I
    .end local v22    # "uri":Landroid/net/Uri;
    .end local v23    # "userHandle":I
    :catch_0
    move-exception v24

    .line 7820
    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    .line 7822
    :goto_3
    return-void

    .line 7780
    .restart local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v17    # "tag":Ljava/lang/String;
    .restart local v21    # "type":I
    .restart local v23    # "userHandle":I
    :cond_1
    :try_start_3
    const-string v24, "sourceUserId"

    move-object/from16 v0, v24

    invoke-static {v8, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v16

    .line 7781
    .restart local v16    # "sourceUserId":I
    const-string v24, "targetUserId"

    move-object/from16 v0, v24

    invoke-static {v8, v0}, Lcom/android/internal/util/XmlUtils;->readIntAttribute(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)I

    move-result v20

    .restart local v20    # "targetUserId":I
    goto/16 :goto_1

    .line 7807
    .restart local v4    # "createdTime":J
    .restart local v9    # "modeFlags":I
    .restart local v13    # "pi":Landroid/content/pm/ProviderInfo;
    .restart local v14    # "prefix":Z
    .restart local v15    # "sourcePkg":Ljava/lang/String;
    .restart local v18    # "targetPkg":Ljava/lang/String;
    .restart local v22    # "uri":Landroid/net/Uri;
    :cond_2
    const-string v24, "ActivityManager"

    new-instance v25, Ljava/lang/StringBuilder;

    invoke-direct/range {v25 .. v25}, Ljava/lang/StringBuilder;-><init>()V

    const-string v26, "Persisted grant for "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    move-object/from16 v1, v22

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v25

    const-string v26, " had source "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    invoke-virtual {v0, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    const-string v26, " but instead found "

    invoke-virtual/range {v25 .. v26}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v25

    move-object/from16 v0, v25

    invoke-virtual {v0, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v25

    invoke-virtual/range {v25 .. v25}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    invoke-static/range {v24 .. v25}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Ljava/io/FileNotFoundException; {:try_start_3 .. :try_end_3} :catch_0
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1
    .catch Lorg/xmlpull/v1/XmlPullParserException; {:try_start_3 .. :try_end_3} :catch_2
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto/16 :goto_0

    .line 7815
    .end local v4    # "createdTime":J
    .end local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v9    # "modeFlags":I
    .end local v13    # "pi":Landroid/content/pm/ProviderInfo;
    .end local v14    # "prefix":Z
    .end local v15    # "sourcePkg":Ljava/lang/String;
    .end local v16    # "sourceUserId":I
    .end local v17    # "tag":Ljava/lang/String;
    .end local v18    # "targetPkg":Ljava/lang/String;
    .end local v20    # "targetUserId":I
    .end local v21    # "type":I
    .end local v22    # "uri":Landroid/net/Uri;
    .end local v23    # "userHandle":I
    :catch_1
    move-exception v6

    .line 7816
    .local v6, "e":Ljava/io/IOException;
    :try_start_4
    const-string v24, "ActivityManager"

    const-string v25, "Failed reading Uri grants"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-static {v0, v1, v6}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 7820
    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .end local v6    # "e":Ljava/io/IOException;
    .restart local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v21    # "type":I
    :cond_3
    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .line 7817
    .end local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .end local v21    # "type":I
    :catch_2
    move-exception v6

    .line 7818
    .local v6, "e":Lorg/xmlpull/v1/XmlPullParserException;
    :try_start_5
    const-string v24, "ActivityManager"

    const-string v25, "Failed reading Uri grants"

    move-object/from16 v0, v24

    move-object/from16 v1, v25

    invoke-static {v0, v1, v6}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 7820
    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    goto :goto_3

    .end local v6    # "e":Lorg/xmlpull/v1/XmlPullParserException;
    :catchall_0
    move-exception v24

    invoke-static {v7}, Llibcore/io/IoUtils;->closeQuietly(Ljava/lang/AutoCloseable;)V

    throw v24

    .line 7798
    .restart local v4    # "createdTime":J
    .restart local v8    # "in":Lorg/xmlpull/v1/XmlPullParser;
    .restart local v9    # "modeFlags":I
    .restart local v13    # "pi":Landroid/content/pm/ProviderInfo;
    .restart local v14    # "prefix":Z
    .restart local v15    # "sourcePkg":Ljava/lang/String;
    .restart local v16    # "sourceUserId":I
    .restart local v17    # "tag":Ljava/lang/String;
    .restart local v18    # "targetPkg":Ljava/lang/String;
    .restart local v19    # "targetUid":I
    .restart local v20    # "targetUserId":I
    .restart local v21    # "type":I
    .restart local v22    # "uri":Landroid/net/Uri;
    .restart local v23    # "userHandle":I
    :catch_3
    move-exception v24

    goto/16 :goto_2
.end method

.method private static readLastDonePreBootReceivers()Ljava/util/ArrayList;
    .locals 15
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;"
        }
    .end annotation

    .prologue
    .line 11044
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 11045
    .local v9, "lastDoneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCalledPreBootReceiversFile()Ljava/io/File;

    move-result-object v5

    .line 11046
    .local v5, "file":Ljava/io/File;
    const/4 v6, 0x0

    .line 11048
    .local v6, "fis":Ljava/io/FileInputStream;
    :try_start_0
    new-instance v7, Ljava/io/FileInputStream;

    invoke-direct {v7, v5}, Ljava/io/FileInputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_7
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11049
    .end local v6    # "fis":Ljava/io/FileInputStream;
    .local v7, "fis":Ljava/io/FileInputStream;
    :try_start_1
    new-instance v3, Ljava/io/DataInputStream;

    new-instance v13, Ljava/io/BufferedInputStream;

    const/16 v14, 0x800

    invoke-direct {v13, v7, v14}, Ljava/io/BufferedInputStream;-><init>(Ljava/io/InputStream;I)V

    invoke-direct {v3, v13}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V

    .line 11050
    .local v3, "dis":Ljava/io/DataInputStream;
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readInt()I

    move-result v8

    .line 11051
    .local v8, "fvers":I
    const/16 v13, 0x2710

    if-ne v8, v13, :cond_1

    .line 11052
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v12

    .line 11053
    .local v12, "vers":Ljava/lang/String;
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v2

    .line 11054
    .local v2, "codename":Ljava/lang/String;
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v0

    .line 11055
    .local v0, "build":Ljava/lang/String;
    sget-object v13, Landroid/os/Build$VERSION;->RELEASE:Ljava/lang/String;

    invoke-virtual {v13, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v13

    if-eqz v13, :cond_1

    sget-object v13, Landroid/os/Build$VERSION;->CODENAME:Ljava/lang/String;

    invoke-virtual {v13, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v13

    if-eqz v13, :cond_1

    sget-object v13, Landroid/os/Build$VERSION;->INCREMENTAL:Ljava/lang/String;

    invoke-virtual {v13, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v13

    if-eqz v13, :cond_1

    .line 11058
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readInt()I

    move-result v10

    .line 11059
    .local v10, "num":I
    :goto_0
    if-lez v10, :cond_1

    .line 11060
    add-int/lit8 v10, v10, -0x1

    .line 11061
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v11

    .line 11062
    .local v11, "pkg":Ljava/lang/String;
    invoke-virtual {v3}, Ljava/io/DataInputStream;->readUTF()Ljava/lang/String;

    move-result-object v1

    .line 11063
    .local v1, "cls":Ljava/lang/String;
    new-instance v13, Landroid/content/ComponentName;

    invoke-direct {v13, v11, v1}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v9, v13}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catch Ljava/io/FileNotFoundException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_6
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    goto :goto_0

    .line 11067
    .end local v0    # "build":Ljava/lang/String;
    .end local v1    # "cls":Ljava/lang/String;
    .end local v2    # "codename":Ljava/lang/String;
    .end local v3    # "dis":Ljava/io/DataInputStream;
    .end local v8    # "fvers":I
    .end local v10    # "num":I
    .end local v11    # "pkg":Ljava/lang/String;
    .end local v12    # "vers":Ljava/lang/String;
    :catch_0
    move-exception v13

    move-object v6, v7

    .line 11071
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v6    # "fis":Ljava/io/FileInputStream;
    :goto_1
    if-eqz v6, :cond_0

    .line 11073
    :try_start_2
    invoke-virtual {v6}, Ljava/io/FileInputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_4

    .line 11078
    :cond_0
    :goto_2
    return-object v9

    .line 11071
    .end local v6    # "fis":Ljava/io/FileInputStream;
    .restart local v3    # "dis":Ljava/io/DataInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v8    # "fvers":I
    :cond_1
    if-eqz v7, :cond_3

    .line 11073
    :try_start_3
    invoke-virtual {v7}, Ljava/io/FileInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_1

    move-object v6, v7

    .line 11075
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v6    # "fis":Ljava/io/FileInputStream;
    goto :goto_2

    .line 11074
    .end local v6    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    :catch_1
    move-exception v13

    move-object v6, v7

    .line 11075
    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v6    # "fis":Ljava/io/FileInputStream;
    goto :goto_2

    .line 11068
    .end local v3    # "dis":Ljava/io/DataInputStream;
    .end local v8    # "fvers":I
    :catch_2
    move-exception v4

    .line 11069
    .local v4, "e":Ljava/io/IOException;
    :goto_3
    :try_start_4
    const-string v13, "ActivityManager"

    const-string v14, "Failure reading last done pre-boot receivers"

    invoke-static {v13, v14, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 11071
    if-eqz v6, :cond_0

    .line 11073
    :try_start_5
    invoke-virtual {v6}, Ljava/io/FileInputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_3

    goto :goto_2

    .line 11074
    :catch_3
    move-exception v13

    goto :goto_2

    .line 11071
    .end local v4    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v13

    :goto_4
    if-eqz v6, :cond_2

    .line 11073
    :try_start_6
    invoke-virtual {v6}, Ljava/io/FileInputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_5

    .line 11075
    :cond_2
    :goto_5
    throw v13

    .line 11074
    :catch_4
    move-exception v13

    goto :goto_2

    :catch_5
    move-exception v14

    goto :goto_5

    .line 11071
    .end local v6    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    :catchall_1
    move-exception v13

    move-object v6, v7

    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v6    # "fis":Ljava/io/FileInputStream;
    goto :goto_4

    .line 11068
    .end local v6    # "fis":Ljava/io/FileInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    :catch_6
    move-exception v4

    move-object v6, v7

    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v6    # "fis":Ljava/io/FileInputStream;
    goto :goto_3

    .line 11067
    :catch_7
    move-exception v13

    goto :goto_1

    .end local v6    # "fis":Ljava/io/FileInputStream;
    .restart local v3    # "dis":Ljava/io/DataInputStream;
    .restart local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v8    # "fvers":I
    :cond_3
    move-object v6, v7

    .end local v7    # "fis":Ljava/io/FileInputStream;
    .restart local v6    # "fis":Ljava/io/FileInputStream;
    goto :goto_2
.end method

.method private removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    .locals 6
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "userId"    # I

    .prologue
    .line 9571
    monitor-enter p0

    .line 9572
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v3, p1, p3}, Lcom/android/server/am/ProviderMap;->getProviderByName(Ljava/lang/String;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v1

    .line 9573
    .local v1, "cpr":Lcom/android/server/am/ContentProviderRecord;
    if-nez v1, :cond_0

    .line 9576
    monitor-exit p0

    .line 9595
    :goto_0
    return-void

    .line 9580
    :cond_0
    new-instance v0, Landroid/content/ComponentName;

    iget-object v3, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v3, v3, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v4, v4, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v0, v3, v4}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 9581
    .local v0, "comp":Landroid/content/ComponentName;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v3, v0, p3}, Lcom/android/server/am/ProviderMap;->getProviderByClass(Landroid/content/ComponentName;I)Lcom/android/server/am/ContentProviderRecord;

    move-result-object v2

    .line 9582
    .local v2, "localCpr":Lcom/android/server/am/ContentProviderRecord;
    invoke-virtual {v2}, Lcom/android/server/am/ContentProviderRecord;->hasExternalProcessHandles()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 9583
    invoke-virtual {v2, p2}, Lcom/android/server/am/ContentProviderRecord;->removeExternalProcessHandleLocked(Landroid/os/IBinder;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 9584
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 9594
    :goto_1
    monitor-exit p0

    goto :goto_0

    .end local v0    # "comp":Landroid/content/ComponentName;
    .end local v1    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .end local v2    # "localCpr":Lcom/android/server/am/ContentProviderRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3

    .line 9586
    .restart local v0    # "comp":Landroid/content/ComponentName;
    .restart local v1    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    .restart local v2    # "localCpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_1
    :try_start_1
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attmpt to remove content provider "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " with no external reference for token: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 9591
    :cond_2
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Attmpt to remove content provider: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " with no external references."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1
.end method

.method private final removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z
    .locals 11
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "always"    # Z

    .prologue
    const/4 v10, 0x1

    .line 14806
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6, p2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v3

    .line 14808
    .local v3, "inLaunching":Z
    if-eqz v3, :cond_0

    if-eqz p3, :cond_1

    .line 14809
    :cond_0
    monitor-enter p2

    .line 14810
    const/4 v6, 0x0

    :try_start_0
    iput-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    .line 14811
    invoke-virtual {p2}, Ljava/lang/Object;->notifyAll()V

    .line 14812
    monitor-exit p2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 14813
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    iget-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iget v8, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    invoke-virtual {v6, v7, v8}, Lcom/android/server/am/ProviderMap;->removeProviderByClass(Landroid/content/ComponentName;I)V

    .line 14814
    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v6, v6, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    const-string v7, ";"

    invoke-virtual {v6, v7}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v5

    .line 14815
    .local v5, "names":[Ljava/lang/String;
    const/4 v4, 0x0

    .local v4, "j":I
    :goto_0
    array-length v6, v5

    if-ge v4, v6, :cond_1

    .line 14816
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    aget-object v7, v5, v4

    iget v8, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v8

    invoke-virtual {v6, v7, v8}, Lcom/android/server/am/ProviderMap;->removeProviderByName(Ljava/lang/String;I)V

    .line 14815
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 14812
    .end local v4    # "j":I
    .end local v5    # "names":[Ljava/lang/String;
    :catchall_0
    move-exception v6

    :try_start_1
    monitor-exit p2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v6

    .line 14820
    :cond_1
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-ge v2, v6, :cond_6

    .line 14821
    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ContentProviderConnection;

    .line 14822
    .local v1, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-boolean v6, v1, Lcom/android/server/am/ContentProviderConnection;->waiting:Z

    if-eqz v6, :cond_3

    .line 14826
    if-eqz v3, :cond_3

    if-nez p3, :cond_3

    .line 14820
    :cond_2
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 14830
    :cond_3
    iget-object v0, v1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    .line 14831
    .local v0, "capp":Lcom/android/server/am/ProcessRecord;
    iput-boolean v10, v1, Lcom/android/server/am/ContentProviderConnection;->dead:Z

    .line 14832
    iget v6, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    if-lez v6, :cond_5

    .line 14833
    iget-boolean v6, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v6, :cond_2

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_2

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eqz v6, :cond_2

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v7, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v6, v7, :cond_2

    .line 14836
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "depends on provider "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    iget-object v7, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " in dying proc "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    if-eqz p1, :cond_4

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    :goto_3
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v0, v6, v10}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto :goto_2

    :cond_4
    const-string v6, "??"

    goto :goto_3

    .line 14840
    :cond_5
    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_2

    iget-object v6, v1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v6, v6, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-eqz v6, :cond_2

    .line 14842
    :try_start_2
    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    iget-object v7, v1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v7, v7, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    invoke-interface {v7}, Landroid/content/IContentProvider;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    invoke-interface {v6, v7}, Landroid/app/IApplicationThread;->unstableProviderDied(Landroid/os/IBinder;)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0

    .line 14847
    :goto_4
    iget-object v6, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v6, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 14848
    iget-object v6, v1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v6, v6, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v6, v1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_2

    .line 14849
    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v8, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v9, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v6, v7, v8, v9}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    goto :goto_2

    .line 14854
    .end local v0    # "capp":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_6
    if-eqz v3, :cond_7

    if-eqz p3, :cond_7

    .line 14855
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v6, p2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14857
    :cond_7
    return v3

    .line 14843
    .restart local v0    # "capp":Lcom/android/server/am/ProcessRecord;
    .restart local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v6

    goto :goto_4
.end method

.method private final removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
    .locals 11
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerWillRestart"    # Z
    .param p3, "allowRestart"    # Z
    .param p4, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v10, 0x0

    const/4 v9, 0x1

    const/4 v8, 0x0

    .line 5769
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    .line 5770
    .local v0, "name":Ljava/lang/String;
    iget v3, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 5775
    .local v3, "uid":I
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4, v0, v3}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)V

    .line 5776
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->remove(I)V

    .line 5777
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-ne v4, p1, :cond_0

    .line 5778
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x19

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v7, v7, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-virtual {v5, v6, v7, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 5780
    iput-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 5782
    :cond_0
    const/4 v1, 0x0

    .line 5783
    .local v1, "needRestart":Z
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v4, :cond_4

    iget v4, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v4, v5, :cond_4

    .line 5784
    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 5785
    .local v2, "pid":I
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 5786
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, v2}, Landroid/util/SparseArray;->remove(I)V

    .line 5787
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x14

    invoke-virtual {v4, v6, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 5788
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5789
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 5790
    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_1

    .line 5791
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 5793
    :cond_1
    invoke-virtual {p1, p4, v9}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 5794
    invoke-direct {p0, p1, v9, p3}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 5795
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5797
    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_2

    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-nez v4, :cond_2

    .line 5798
    if-nez p2, :cond_3

    .line 5799
    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v4, v8, v10}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    .line 5808
    .end local v2    # "pid":I
    :cond_2
    :goto_0
    return v1

    .line 5788
    .restart local v2    # "pid":I
    :catchall_0
    move-exception v4

    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 5801
    :cond_3
    const/4 v1, 0x1

    goto :goto_0

    .line 5805
    .end local v2    # "pid":I
    :cond_4
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0
.end method

.method private removeRecentTasksForUserLocked(I)V
    .locals 5
    .param p1, "userId"    # I

    .prologue
    .line 3711
    if-gtz p1, :cond_0

    .line 3712
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Can\'t remove recent task on user "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3728
    :goto_0
    return-void

    .line 3716
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_1
    if-ltz v0, :cond_2

    .line 3717
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/TaskRecord;

    .line 3718
    .local v1, "tr":Lcom/android/server/am/TaskRecord;
    iget v2, v1, Lcom/android/server/am/TaskRecord;->userId:I

    if-ne v2, p1, :cond_1

    .line 3721
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 3722
    invoke-virtual {v1}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 3716
    :cond_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 3727
    .end local v1    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_2
    const/4 v2, 0x0

    const/4 v3, 0x1

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    goto :goto_0
.end method

.method private removeTaskByIdLocked(IZ)Z
    .locals 4
    .param p1, "taskId"    # I
    .param p2, "killProcess"    # Z

    .prologue
    const/4 v1, 0x1

    .line 8482
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .line 8483
    .local v0, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v0, :cond_1

    .line 8484
    invoke-virtual {v0}, Lcom/android/server/am/TaskRecord;->removeTaskActivitiesLocked()V

    .line 8485
    invoke-direct {p0, v0, p2}, Lcom/android/server/am/ActivityManagerService;->cleanUpRemovedTaskLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 8486
    iget-boolean v2, v0, Lcom/android/server/am/TaskRecord;->isPersistable:Z

    if-eqz v2, :cond_0

    .line 8487
    const/4 v2, 0x0

    invoke-virtual {p0, v2, v1}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    .line 8492
    :cond_0
    :goto_0
    return v1

    .line 8491
    :cond_1
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Request to remove task ignored for non-existent task "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 8492
    const/4 v1, 0x0

    goto :goto_0
.end method

.method private removeTasksByPackageNameLocked(Ljava/lang/String;I)V
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 8435
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 8436
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/TaskRecord;

    .line 8437
    .local v2, "tr":Lcom/android/server/am/TaskRecord;
    iget v3, v2, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v3, p2, :cond_1

    .line 8435
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 8439
    :cond_1
    iget-object v3, v2, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 8440
    .local v0, "cn":Landroid/content/ComponentName;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 8442
    iget v3, v2, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v4, 0x1

    invoke-direct {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    goto :goto_1

    .line 8445
    .end local v0    # "cn":Landroid/content/ComponentName;
    .end local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_2
    return-void
.end method

.method private removeTasksByRemovedPackageComponentsLocked(Ljava/lang/String;I)V
    .locals 10
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 8448
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 8449
    .local v5, "pm":Landroid/content/pm/IPackageManager;
    new-instance v1, Ljava/util/HashSet;

    invoke-direct {v1}, Ljava/util/HashSet;-><init>()V

    .line 8451
    .local v1, "componentsKnownToExist":Ljava/util/HashSet;, "Ljava/util/HashSet<Landroid/content/ComponentName;>;"
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v7

    add-int/lit8 v3, v7, -0x1

    .local v3, "i":I
    :goto_0
    if-ltz v3, :cond_3

    .line 8452
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/TaskRecord;

    .line 8453
    .local v6, "tr":Lcom/android/server/am/TaskRecord;
    iget v7, v6, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v7, p2, :cond_1

    .line 8451
    :cond_0
    :goto_1
    add-int/lit8 v3, v3, -0x1

    goto :goto_0

    .line 8455
    :cond_1
    iget-object v7, v6, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v7}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v0

    .line 8456
    .local v0, "cn":Landroid/content/ComponentName;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_0

    .line 8458
    invoke-virtual {v1, v0}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_0

    .line 8461
    const/4 v7, 0x0

    :try_start_0
    invoke-interface {v5, v0, v7, p2}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v4

    .line 8462
    .local v4, "info":Landroid/content/pm/ActivityInfo;
    if-eqz v4, :cond_2

    .line 8463
    invoke-virtual {v1, v0}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    .line 8467
    .end local v4    # "info":Landroid/content/pm/ActivityInfo;
    :catch_0
    move-exception v2

    .line 8468
    .local v2, "e":Landroid/os/RemoteException;
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Activity info query failed. component="

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8, v2}, Landroid/util/Log;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_1

    .line 8465
    .end local v2    # "e":Landroid/os/RemoteException;
    .restart local v4    # "info":Landroid/content/pm/ActivityInfo;
    :cond_2
    :try_start_1
    iget v7, v6, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v8, 0x0

    invoke-direct {p0, v7, v8}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    goto :goto_1

    .line 8472
    .end local v0    # "cn":Landroid/content/ComponentName;
    .end local v4    # "info":Landroid/content/pm/ActivityInfo;
    .end local v6    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_3
    return-void
.end method

.method private removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V
    .locals 10
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userHandle"    # I
    .param p3, "persistable"    # Z

    .prologue
    const/4 v8, -0x1

    .line 7593
    if-ne p2, v8, :cond_0

    if-nez p1, :cond_0

    .line 7594
    new-instance v7, Ljava/lang/IllegalArgumentException;

    const-string v8, "Must narrow by either package or user"

    invoke-direct {v7, v8}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 7597
    :cond_0
    const/4 v5, 0x0

    .line 7599
    .local v5, "persistChanged":Z
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7}, Landroid/util/SparseArray;->size()I

    move-result v0

    .line 7600
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_7

    .line 7601
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v6

    .line 7602
    .local v6, "targetUid":I
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/ArrayMap;

    .line 7605
    .local v4, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eq p2, v8, :cond_1

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    if-ne p2, v7, :cond_6

    .line 7607
    :cond_1
    invoke-virtual {v4}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v7

    invoke-interface {v7}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .local v2, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :goto_1
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_5

    .line 7608
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UriPermission;

    .line 7611
    .local v3, "perm":Lcom/android/server/am/UriPermission;
    if-eqz p1, :cond_3

    iget-object v7, v3, Lcom/android/server/am/UriPermission;->sourcePkg:Ljava/lang/String;

    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-nez v7, :cond_3

    iget-object v7, v3, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {v7, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_2

    .line 7613
    :cond_3
    if-eqz p3, :cond_4

    move v7, v8

    :goto_2
    const/4 v9, 0x1

    invoke-virtual {v3, v7, v9}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v7

    or-int/2addr v5, v7

    .line 7618
    iget v7, v3, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v7, :cond_2

    .line 7619
    invoke-interface {v2}, Ljava/util/Iterator;->remove()V

    goto :goto_1

    .line 7613
    :cond_4
    const/16 v7, -0x41

    goto :goto_2

    .line 7624
    .end local v3    # "perm":Lcom/android/server/am/UriPermission;
    :cond_5
    invoke-virtual {v4}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v7

    if-eqz v7, :cond_6

    .line 7625
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v7, v6}, Landroid/util/SparseArray;->remove(I)V

    .line 7626
    add-int/lit8 v0, v0, -0x1

    .line 7627
    add-int/lit8 v1, v1, -0x1

    .line 7600
    .end local v2    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_6
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 7632
    .end local v4    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v6    # "targetUid":I
    :cond_7
    if-eqz v5, :cond_8

    .line 7633
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 7635
    :cond_8
    return-void
.end method

.method private reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V
    .locals 4
    .param p1, "watcher"    # Landroid/app/IInstrumentationWatcher;
    .param p2, "cn"    # Landroid/content/ComponentName;
    .param p3, "report"    # Ljava/lang/String;

    .prologue
    .line 16531
    const-string v2, "ActivityManager"

    invoke-static {v2, p3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16533
    if-eqz p1, :cond_0

    .line 16534
    :try_start_0
    new-instance v1, Landroid/os/Bundle;

    invoke-direct {v1}, Landroid/os/Bundle;-><init>()V

    .line 16535
    .local v1, "results":Landroid/os/Bundle;
    const-string v2, "id"

    const-string v3, "ActivityManagerService"

    invoke-virtual {v1, v2, v3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 16536
    const-string v2, "Error"

    invoke-virtual {v1, v2, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 16537
    const/4 v2, -0x1

    invoke-interface {p1, p2, v2, v1}, Landroid/app/IInstrumentationWatcher;->instrumentationStatus(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 16542
    .end local v1    # "results":Landroid/os/Bundle;
    :cond_0
    :goto_0
    return-void

    .line 16539
    :catch_0
    move-exception v0

    .line 16540
    .local v0, "e":Landroid/os/RemoteException;
    const-string v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_0
.end method

.method private resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;
    .locals 5
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "flags"    # I
    .param p3, "userId"    # I

    .prologue
    .line 3148
    const/4 v0, 0x0

    .line 3149
    .local v0, "ai":Landroid/content/pm/ActivityInfo;
    invoke-virtual {p1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    .line 3151
    .local v1, "comp":Landroid/content/ComponentName;
    if-eqz v1, :cond_1

    .line 3152
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    invoke-interface {v3, v1, p2, p3}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v0

    .line 3167
    :cond_0
    :goto_0
    return-object v0

    .line 3154
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    invoke-virtual {p1, v4}, Landroid/content/Intent;->resolveTypeIfNeeded(Landroid/content/ContentResolver;)Ljava/lang/String;

    move-result-object v4

    invoke-interface {v3, p1, v4, p2, p3}, Landroid/content/pm/IPackageManager;->resolveIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ResolveInfo;

    move-result-object v2

    .line 3159
    .local v2, "info":Landroid/content/pm/ResolveInfo;
    if-eqz v2, :cond_0

    .line 3160
    iget-object v0, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 3163
    .end local v2    # "info":Landroid/content/pm/ResolveInfo;
    :catch_0
    move-exception v3

    goto :goto_0
.end method

.method private final resumedAppLocked()Lcom/android/server/am/ActivityRecord;
    .locals 7

    .prologue
    .line 18117
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 18120
    .local v0, "act":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_3

    .line 18121
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    .line 18122
    .local v1, "pkg":Ljava/lang/String;
    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 18128
    .local v2, "uid":I
    :goto_0
    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    if-ne v2, v3, :cond_0

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eq v1, v3, :cond_2

    if-eqz v1, :cond_0

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    invoke-virtual {v1, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_2

    .line 18130
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v3, :cond_1

    .line 18131
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const/16 v4, 0x4003

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 18134
    :cond_1
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    .line 18135
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    .line 18136
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    if-eqz v3, :cond_2

    .line 18137
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v4, 0x8003

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedPackage:Ljava/lang/String;

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurResumedUid:I

    invoke-virtual {v3, v4, v5, v6}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    .line 18141
    :cond_2
    return-object v0

    .line 18124
    .end local v1    # "pkg":Ljava/lang/String;
    .end local v2    # "uid":I
    :cond_3
    const/4 v1, 0x0

    .line 18125
    .restart local v1    # "pkg":Ljava/lang/String;
    const/4 v2, -0x1

    .restart local v2    # "uid":I
    goto :goto_0
.end method

.method private retrieveSettings()V
    .locals 9

    .prologue
    const/4 v6, 0x1

    const/4 v7, 0x0

    .line 10993
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v8}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v4

    .line 10994
    .local v4, "resolver":Landroid/content/ContentResolver;
    const-string v8, "debug_app"

    invoke-static {v4, v8}, Landroid/provider/Settings$Global;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 10996
    .local v2, "debugApp":Ljava/lang/String;
    const-string v8, "wait_for_debugger"

    invoke-static {v4, v8, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_1

    move v5, v6

    .line 10998
    .local v5, "waitForDebugger":Z
    :goto_0
    const-string v8, "always_finish_activities"

    invoke-static {v4, v8, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_2

    move v0, v6

    .line 11000
    .local v0, "alwaysFinishActivities":Z
    :goto_1
    const-string v8, "debug.force_rtl"

    invoke-static {v4, v8, v7}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v8

    if-eqz v8, :cond_3

    move v3, v6

    .line 11003
    .local v3, "forceRtl":Z
    :goto_2
    const-string v7, "debug.force_rtl"

    if-eqz v3, :cond_4

    const-string v6, "1"

    :goto_3
    invoke-static {v7, v6}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 11005
    new-instance v1, Landroid/content/res/Configuration;

    invoke-direct {v1}, Landroid/content/res/Configuration;-><init>()V

    .line 11006
    .local v1, "configuration":Landroid/content/res/Configuration;
    invoke-static {v4, v1}, Landroid/provider/Settings$System;->getConfiguration(Landroid/content/ContentResolver;Landroid/content/res/Configuration;)V

    .line 11007
    if-eqz v3, :cond_0

    .line 11009
    iget-object v6, v1, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v1, v6}, Landroid/content/res/Configuration;->setLayoutDirection(Ljava/util/Locale;)V

    .line 11012
    :cond_0
    monitor-enter p0

    .line 11013
    :try_start_0
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    .line 11014
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    .line 11015
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    .line 11018
    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x1

    invoke-virtual {p0, v1, v6, v7, v8}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    .line 11020
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11021
    return-void

    .end local v0    # "alwaysFinishActivities":Z
    .end local v1    # "configuration":Landroid/content/res/Configuration;
    .end local v3    # "forceRtl":Z
    .end local v5    # "waitForDebugger":Z
    :cond_1
    move v5, v7

    .line 10996
    goto :goto_0

    .restart local v5    # "waitForDebugger":Z
    :cond_2
    move v0, v7

    .line 10998
    goto :goto_1

    .restart local v0    # "alwaysFinishActivities":Z
    :cond_3
    move v3, v7

    .line 11000
    goto :goto_2

    .line 11003
    .restart local v3    # "forceRtl":Z
    :cond_4
    const-string v6, "0"

    goto :goto_3

    .line 11020
    .restart local v1    # "configuration":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v6

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v6
.end method

.method private revokeUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;I)V
    .locals 15
    .param p1, "callingUid"    # I
    .param p2, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p3, "modeFlags"    # I

    .prologue
    .line 7469
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .line 7470
    .local v2, "pm":Landroid/content/pm/IPackageManager;
    move-object/from16 v0, p2

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v8

    .line 7471
    .local v8, "authority":Ljava/lang/String;
    move-object/from16 v0, p2

    iget v1, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-direct {p0, v8, v1}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v3

    .line 7472
    .local v3, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v3, :cond_1

    .line 7473
    const-string v1, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No content provider found for permission revoke: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p2 .. p2}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v1, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7542
    :cond_0
    :goto_0
    return-void

    :cond_1
    move-object v1, p0

    move-object/from16 v4, p2

    move/from16 v5, p1

    move/from16 v6, p3

    .line 7479
    invoke-direct/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v1

    if-nez v1, :cond_5

    .line 7482
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/util/ArrayMap;

    .line 7483
    .local v12, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v12, :cond_0

    .line 7484
    const/4 v13, 0x0

    .line 7485
    .local v13, "persistChanged":Z
    invoke-virtual {v12}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v10

    .local v10, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :goto_1
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 7486
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/UriPermission;

    .line 7487
    .local v11, "perm":Lcom/android/server/am/UriPermission;
    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p2

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-ne v1, v4, :cond_2

    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    move-object/from16 v0, p2

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1, v4}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v1

    if-eqz v1, :cond_2

    .line 7492
    or-int/lit8 v1, p3, 0x40

    const/4 v4, 0x0

    invoke-virtual {v11, v1, v4}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v1

    or-int/2addr v13, v1

    .line 7494
    iget v1, v11, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_2

    .line 7495
    invoke-interface {v10}, Ljava/util/Iterator;->remove()V

    goto :goto_1

    .line 7499
    .end local v11    # "perm":Lcom/android/server/am/UriPermission;
    :cond_3
    invoke-virtual {v12}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_4

    .line 7500
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->remove(I)V

    .line 7502
    :cond_4
    if-eqz v13, :cond_0

    .line 7503
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    goto :goto_0

    .line 7509
    .end local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    .end local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v13    # "persistChanged":Z
    :cond_5
    const/4 v13, 0x0

    .line 7512
    .restart local v13    # "persistChanged":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1}, Landroid/util/SparseArray;->size()I

    move-result v7

    .line 7513
    .local v7, "N":I
    const/4 v9, 0x0

    .local v9, "i":I
    :goto_2
    if-ge v9, v7, :cond_9

    .line 7514
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v14

    .line 7515
    .local v14, "targetUid":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/util/ArrayMap;

    .line 7517
    .restart local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v12}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v10

    .restart local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    :cond_6
    :goto_3
    invoke-interface {v10}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_7

    .line 7518
    invoke-interface {v10}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/UriPermission;

    .line 7519
    .restart local v11    # "perm":Lcom/android/server/am/UriPermission;
    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p2

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-ne v1, v4, :cond_6

    iget-object v1, v11, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v1, v1, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    move-object/from16 v0, p2

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v1, v4}, Landroid/net/Uri;->isPathPrefixMatch(Landroid/net/Uri;)Z

    move-result v1

    if-eqz v1, :cond_6

    .line 7524
    or-int/lit8 v1, p3, 0x40

    const/4 v4, 0x1

    invoke-virtual {v11, v1, v4}, Lcom/android/server/am/UriPermission;->revokeModes(IZ)Z

    move-result v1

    or-int/2addr v13, v1

    .line 7526
    iget v1, v11, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_6

    .line 7527
    invoke-interface {v10}, Ljava/util/Iterator;->remove()V

    goto :goto_3

    .line 7532
    .end local v11    # "perm":Lcom/android/server/am/UriPermission;
    :cond_7
    invoke-virtual {v12}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 7533
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v1, v14}, Landroid/util/SparseArray;->remove(I)V

    .line 7534
    add-int/lit8 v7, v7, -0x1

    .line 7535
    add-int/lit8 v9, v9, -0x1

    .line 7513
    :cond_8
    add-int/lit8 v9, v9, 0x1

    goto :goto_2

    .line 7539
    .end local v10    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Lcom/android/server/am/UriPermission;>;"
    .end local v12    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v14    # "targetUid":I
    :cond_9
    if-eqz v13, :cond_0

    .line 7540
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    goto/16 :goto_0
.end method

.method private saveLocaleLocked(Ljava/util/Locale;ZZ)V
    .locals 3
    .param p1, "l"    # Ljava/util/Locale;
    .param p2, "isDiff"    # Z
    .param p3, "isPersist"    # Z

    .prologue
    .line 16806
    if-eqz p2, :cond_0

    .line 16807
    const-string v0, "user.language"

    invoke-virtual {p1}, Ljava/util/Locale;->getLanguage()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 16808
    const-string v0, "user.region"

    invoke-virtual {p1}, Ljava/util/Locale;->getCountry()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 16811
    :cond_0
    if-eqz p3, :cond_1

    .line 16812
    const-string v0, "persist.sys.language"

    invoke-virtual {p1}, Ljava/util/Locale;->getLanguage()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 16813
    const-string v0, "persist.sys.country"

    invoke-virtual {p1}, Ljava/util/Locale;->getCountry()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 16814
    const-string v0, "persist.sys.localevar"

    invoke-virtual {p1}, Ljava/util/Locale;->getVariant()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 16816
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x2f

    invoke-virtual {v1, v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 16818
    :cond_1
    return-void
.end method

.method private static scanArgs([Ljava/lang/String;Ljava/lang/String;)Z
    .locals 5
    .param p0, "args"    # [Ljava/lang/String;
    .param p1, "value"    # Ljava/lang/String;

    .prologue
    .line 14794
    if-eqz p0, :cond_1

    .line 14795
    move-object v1, p0

    .local v1, "arr$":[Ljava/lang/String;
    array-length v3, v1

    .local v3, "len$":I
    const/4 v2, 0x0

    .local v2, "i$":I
    :goto_0
    if-ge v2, v3, :cond_1

    aget-object v0, v1, v2

    .line 14796
    .local v0, "arg":Ljava/lang/String;
    invoke-virtual {p1, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 14797
    const/4 v4, 0x1

    .line 14801
    .end local v0    # "arg":Ljava/lang/String;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v2    # "i$":I
    .end local v3    # "len$":I
    :goto_1
    return v4

    .line 14795
    .restart local v0    # "arg":Ljava/lang/String;
    .restart local v1    # "arr$":[Ljava/lang/String;
    .restart local v2    # "i$":I
    .restart local v3    # "len$":I
    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 14801
    .end local v0    # "arg":Ljava/lang/String;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v2    # "i$":I
    .end local v3    # "len$":I
    :cond_1
    const/4 v4, 0x0

    goto :goto_1
.end method

.method private schedulePersistUriGrants()V
    .locals 4

    .prologue
    const/16 v2, 0x26

    .line 7701
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v0

    if-nez v0, :cond_0

    .line 7702
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    const-wide/16 v2, 0x2710

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 7705
    :cond_0
    return-void
.end method

.method private final sendPackageBroadcastLocked(I[Ljava/lang/String;I)V
    .locals 3
    .param p1, "cmd"    # I
    .param p2, "packages"    # [Ljava/lang/String;
    .param p3, "userId"    # I

    .prologue
    .line 15750
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_2

    .line 15751
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 15752
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_1

    const/4 v2, -0x1

    if-eq p3, v2, :cond_0

    iget v2, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v2, p3, :cond_1

    .line 15754
    :cond_0
    :try_start_0
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2, p1, p2}, Landroid/app/IApplicationThread;->dispatchPackageBroadcast(I[Ljava/lang/String;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 15750
    :cond_1
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 15759
    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2
    return-void

    .line 15755
    .restart local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method private final setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V
    .locals 7
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "memFactor"    # I
    .param p3, "now"    # J

    .prologue
    .line 18060
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_1

    .line 18061
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    if-eqz v0, :cond_0

    .line 18062
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move v3, p2

    move-wide v4, p3

    invoke-virtual/range {v1 .. v6}, Lcom/android/internal/app/ProcessStats$ProcessState;->setState(IIJLandroid/util/ArrayMap;)V

    .line 18064
    :cond_0
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    if-ltz v0, :cond_1

    .line 18065
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->repProcState:I

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/BatteryStatsService;->noteProcessState(Ljava/lang/String;II)V

    .line 18069
    :cond_1
    return-void
.end method

.method private static final shouldShowDialogs(Landroid/content/res/Configuration;)Z
    .locals 2
    .param p0, "config"    # Landroid/content/res/Configuration;

    .prologue
    const/4 v0, 0x1

    .line 16798
    iget v1, p0, Landroid/content/res/Configuration;->keyboard:I

    if-ne v1, v0, :cond_0

    iget v1, p0, Landroid/content/res/Configuration;->touchscreen:I

    if-eq v1, v0, :cond_1

    :cond_0
    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private shouldSleepLocked()Z
    .locals 3

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 10042
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Z

    if-eqz v2, :cond_1

    move v0, v1

    .line 10058
    :cond_0
    :goto_0
    return v0

    .line 10046
    :cond_1
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    packed-switch v2, :pswitch_data_0

    goto :goto_0

    .line 10051
    :pswitch_0
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-eqz v2, :cond_2

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    if-nez v2, :cond_0

    :cond_2
    move v0, v1

    goto :goto_0

    .line 10054
    :pswitch_1
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    if-nez v2, :cond_0

    move v0, v1

    goto :goto_0

    .line 10046
    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
        :pswitch_0
        :pswitch_1
    .end packed-switch
.end method

.method private showUserSwitchDialog(ILjava/lang/String;)V
    .locals 6
    .param p1, "userId"    # I
    .param p2, "userName"    # Ljava/lang/String;

    .prologue
    invoke-static/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->flymeShowUserSwitchDialog(Lcom/android/server/am/ActivityManagerService;I)V

    return-void

    new-instance v0, Lcom/android/server/am/UserSwitchingDialog;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const/4 v5, 0x1

    move-object v1, p0

    move v3, p1

    move-object v4, p2

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/UserSwitchingDialog;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/content/Context;ILjava/lang/String;Z)V

    .line 18877
    .local v0, "d":Landroid/app/Dialog;
    invoke-virtual {v0}, Landroid/app/Dialog;->show()V

    .line 18878
    return-void
.end method

.method private start()V
    .locals 3

    .prologue
    .line 2163
    invoke-static {}, Landroid/os/Process;->removeAllProcessGroups()V

    .line 2164
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    .line 2166
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1}, Lcom/android/server/am/BatteryStatsService;->publish(Landroid/content/Context;)V

    .line 2167
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v1}, Lcom/android/server/AppOpsService;->publish(Landroid/content/Context;)V

    .line 2168
    const-string v0, "AppOps"

    const-string v1, "AppOpsService published"

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 2169
    const-class v0, Landroid/app/ActivityManagerInternal;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$LocalService;

    const/4 v2, 0x0

    invoke-direct {v1, p0, v2}, Lcom/android/server/am/ActivityManagerService$LocalService;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityManagerService$1;)V

    invoke-static {v0, v1}, Lcom/android/server/LocalServices;->addService(Ljava/lang/Class;Ljava/lang/Object;)V

    .line 2170
    return-void
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "hostingType"    # Ljava/lang/String;
    .param p3, "hostingNameStr"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x0

    .line 2900
    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v5, v4

    move-object v6, v4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    .line 2902
    return-void
.end method

.method private final startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V
    .locals 26
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "hostingType"    # Ljava/lang/String;
    .param p3, "hostingNameStr"    # Ljava/lang/String;
    .param p4, "abiOverride"    # Ljava/lang/String;
    .param p5, "entryPoint"    # Ljava/lang/String;
    .param p6, "entryPointArgs"    # [Ljava/lang/String;

    .prologue
    .line 2906
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v24

    .line 2907
    .local v24, "startTime":J
    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v4, :cond_0

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v5, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v4, v5, :cond_0

    .line 2908
    const-string v4, "startProcess: removing from pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 2909
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 2910
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, p1

    iget v7, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v4, v7}, Landroid/util/SparseArray;->remove(I)V

    .line 2911
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v7, 0x14

    move-object/from16 v0, p1

    invoke-virtual {v4, v7, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(ILjava/lang/Object;)V

    .line 2912
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2913
    const-string v4, "startProcess: done removing from pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 2914
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 2919
    :cond_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 2921
    const-string v4, "startProcess: starting to update cpu stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 2922
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStats()V

    .line 2923
    const-string v4, "startProcess: done updating cpu stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 2926
    :try_start_1
    move-object/from16 v0, p1

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    .line 2928
    .local v6, "uid":I
    const/4 v8, 0x0

    .line 2929
    .local v8, "gids":[I
    const/4 v10, 0x0

    .line 2930
    .local v10, "mountExternal":I
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z
    :try_end_1
    .catch Ljava/lang/RuntimeException; {:try_start_1 .. :try_end_1} :catch_1

    if-nez v4, :cond_2

    .line 2931
    const/16 v21, 0x0

    .line 2933
    .local v21, "permGids":[I
    :try_start_2
    const-string v4, "startProcess: getting gids from package manager"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 2934
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v22

    .line 2935
    .local v22, "pm":Landroid/content/pm/PackageManager;
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v22

    invoke-virtual {v0, v4}, Landroid/content/pm/PackageManager;->getPackageGids(Ljava/lang/String;)[I

    move-result-object v21

    .line 2937
    invoke-static {}, Landroid/os/Environment;->isExternalStorageEmulated()Z

    move-result v4

    if-eqz v4, :cond_1

    .line 2938
    const-string v4, "startProcess: checking external storage perm"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 2939
    const-string v4, "android.permission.ACCESS_ALL_EXTERNAL_STORAGE"

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v22

    invoke-virtual {v0, v4, v5}, Landroid/content/pm/PackageManager;->checkPermission(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Ljava/lang/RuntimeException; {:try_start_2 .. :try_end_2} :catch_1

    move-result v4

    if-nez v4, :cond_13

    .line 2942
    const/4 v10, 0x3

    .line 2955
    .end local v22    # "pm":Landroid/content/pm/PackageManager;
    :cond_1
    :goto_0
    if-nez v21, :cond_15

    .line 2956
    const/4 v4, 0x2

    :try_start_3
    new-array v8, v4, [I

    .line 2961
    :goto_1
    const/4 v4, 0x0

    invoke-static {v6}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v5

    invoke-static {v5}, Landroid/os/UserHandle;->getSharedAppGid(I)I

    move-result v5

    aput v5, v8, v4

    .line 2962
    const/4 v4, 0x1

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    invoke-static {v5}, Landroid/os/UserHandle;->getUserGid(I)I

    move-result v5

    aput v5, v8, v4

    .line 2964
    .end local v21    # "permGids":[I
    :cond_2
    const-string v4, "startProcess: building args"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 2965
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-eqz v4, :cond_4

    .line 2966
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x1

    if-ne v4, v5, :cond_3

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    if-eqz v4, :cond_3

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    invoke-virtual {v5}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 2969
    const/4 v6, 0x0

    .line 2971
    :cond_3
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x2

    if-ne v4, v5, :cond_4

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x10

    if-eqz v4, :cond_4

    .line 2973
    const/4 v6, 0x0

    .line 2976
    :cond_4
    const/4 v9, 0x0

    .line 2977
    .local v9, "debugFlags":I
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x2

    if-eqz v4, :cond_5

    .line 2978
    or-int/lit8 v9, v9, 0x1

    .line 2981
    or-int/lit8 v9, v9, 0x2

    .line 2985
    :cond_5
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit16 v4, v4, 0x4000

    if-nez v4, :cond_6

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    const/4 v5, 0x1

    if-ne v4, v5, :cond_7

    .line 2987
    :cond_6
    or-int/lit8 v9, v9, 0x8

    .line 2989
    :cond_7
    const-string v4, "1"

    const-string v5, "debug.checkjni"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_8

    .line 2990
    or-int/lit8 v9, v9, 0x2

    .line 2992
    :cond_8
    const-string v4, "1"

    const-string v5, "debug.jni.logging"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 2993
    or-int/lit8 v9, v9, 0x10

    .line 2995
    :cond_9
    const-string v4, "1"

    const-string v5, "debug.assert"

    invoke-static {v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_a

    .line 2996
    or-int/lit8 v9, v9, 0x4

    .line 2999
    :cond_a
    if-eqz p4, :cond_16

    move-object/from16 v13, p4

    .line 3000
    .local v13, "requiredAbi":Ljava/lang/String;
    :goto_2
    if-nez v13, :cond_b

    .line 3001
    sget-object v4, Landroid/os/Build;->SUPPORTED_ABIS:[Ljava/lang/String;

    const/4 v5, 0x0

    aget-object v13, v4, v5

    .line 3004
    :cond_b
    const/4 v14, 0x0

    .line 3005
    .local v14, "instructionSet":Ljava/lang/String;
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    if-eqz v4, :cond_c

    .line 3006
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    invoke-static {v4}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v14

    .line 3009
    :cond_c
    move-object/from16 v0, p1

    iput-object v8, v0, Lcom/android/server/am/ProcessRecord;->gids:[I

    .line 3010
    move-object/from16 v0, p1

    iput-object v13, v0, Lcom/android/server/am/ProcessRecord;->requiredAbi:Ljava/lang/String;

    .line 3011
    move-object/from16 v0, p1

    iput-object v14, v0, Lcom/android/server/am/ProcessRecord;->instructionSet:Ljava/lang/String;

    .line 3015
    if-nez p5, :cond_17

    const/16 v19, 0x1

    .line 3016
    .local v19, "isActivityProcess":Z
    :goto_3
    if-nez p5, :cond_d

    const-string p5, "android.app.ActivityThread"

    .line 3017
    :cond_d
    const-string v4, "startProcess: asking zygote to start proc"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3018
    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v11, v4, Landroid/content/pm/ApplicationInfo;->targetSdkVersion:I

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v12, v4, Landroid/content/pm/ApplicationInfo;->seinfo:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v15, v4, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    move-object/from16 v4, p5

    move v7, v6

    move-object/from16 v16, p6

    invoke-static/range {v4 .. v16}, Landroid/os/Process;->start(Ljava/lang/String;Ljava/lang/String;II[IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)Landroid/os/Process$ProcessStartResult;

    move-result-object v23

    .line 3022
    .local v23, "startResult":Landroid/os/Process$ProcessStartResult;
    const-string v4, "startProcess: returned from zygote!"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3024
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_e

    .line 3025
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->addIsolatedUid(II)V

    .line 3027
    :cond_e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessStart(Ljava/lang/String;I)V

    .line 3028
    const-string v4, "startProcess: done updating battery stats"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3030
    const/16 v5, 0x753e

    const/4 v4, 0x6

    new-array v7, v4, [Ljava/lang/Object;

    const/4 v4, 0x0

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v11

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v7, v4

    const/4 v4, 0x1

    move-object/from16 v0, v23

    iget v11, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v7, v4

    const/4 v4, 0x2

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v11

    aput-object v11, v7, v4

    const/4 v4, 0x3

    move-object/from16 v0, p1

    iget-object v11, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v11, v7, v4

    const/4 v4, 0x4

    aput-object p2, v7, v4

    const/4 v11, 0x5

    if-eqz p3, :cond_18

    move-object/from16 v4, p3

    :goto_4
    aput-object v4, v7, v11

    invoke-static {v5, v7}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 3035
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_f

    .line 3036
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v4

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v23

    iget v7, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/Watchdog;->processStarted(Ljava/lang/String;I)V

    .line 3039
    :cond_f
    const-string v4, "startProcess: building log message"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3040
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mStringBuilder:Ljava/lang/StringBuilder;

    move-object/from16 v17, v0

    .line 3041
    .local v17, "buf":Ljava/lang/StringBuilder;
    const/4 v4, 0x0

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 3042
    const-string v4, "Start proc "

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3043
    move-object/from16 v0, v23

    iget v4, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 3044
    const/16 v4, 0x3a

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 3045
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3046
    const/16 v4, 0x2f

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    .line 3047
    move-object/from16 v0, v17

    invoke-static {v0, v6}, Landroid/os/UserHandle;->formatUid(Ljava/lang/StringBuilder;I)V

    .line 3048
    if-nez v19, :cond_10

    .line 3049
    const-string v4, " ["

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3050
    move-object/from16 v0, v17

    move-object/from16 v1, p5

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3051
    const-string v4, "]"

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3053
    :cond_10
    const-string v4, " for "

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3054
    move-object/from16 v0, v17

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3055
    if-eqz p3, :cond_11

    .line 3056
    const-string v4, " "

    move-object/from16 v0, v17

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3057
    move-object/from16 v0, v17

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 3059
    :cond_11
    const-string v4, "ActivityManager"

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 3060
    move-object/from16 v0, v23

    iget v4, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 3061
    move-object/from16 v0, v23

    iget-boolean v4, v0, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->usingWrapper:Z

    .line 3062
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 3063
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 3064
    const/4 v4, 0x0

    move-object/from16 v0, p1

    iput-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    .line 3065
    const-string v4, "startProcess: starting to update pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    .line 3066
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v7
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_1

    .line 3067
    :try_start_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, v23

    iget v5, v0, Landroid/os/Process$ProcessStartResult;->pid:I

    move-object/from16 v0, p1

    invoke-virtual {v4, v5, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 3068
    if-eqz v19, :cond_12

    .line 3069
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x14

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v20

    .line 3070
    .local v20, "msg":Landroid/os/Message;
    move-object/from16 v0, p1

    move-object/from16 v1, v20

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 3071
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v23

    iget-boolean v4, v0, Landroid/os/Process$ProcessStartResult;->usingWrapper:Z

    if-eqz v4, :cond_19

    const-wide/32 v4, 0x124f80

    :goto_5
    move-object/from16 v0, v20

    invoke-virtual {v11, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 3074
    .end local v20    # "msg":Landroid/os/Message;
    :cond_12
    monitor-exit v7
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 3075
    :try_start_5
    const-string v4, "startProcess: done updating pids map"

    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V
    :try_end_5
    .catch Ljava/lang/RuntimeException; {:try_start_5 .. :try_end_5} :catch_1

    .line 3085
    .end local v6    # "uid":I
    .end local v8    # "gids":[I
    .end local v9    # "debugFlags":I
    .end local v10    # "mountExternal":I
    .end local v13    # "requiredAbi":Ljava/lang/String;
    .end local v14    # "instructionSet":Ljava/lang/String;
    .end local v17    # "buf":Ljava/lang/StringBuilder;
    .end local v19    # "isActivityProcess":Z
    .end local v23    # "startResult":Landroid/os/Process$ProcessStartResult;
    :goto_6
    return-void

    .line 2912
    :catchall_0
    move-exception v4

    :try_start_6
    monitor-exit v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    throw v4

    .line 2944
    .restart local v6    # "uid":I
    .restart local v8    # "gids":[I
    .restart local v10    # "mountExternal":I
    .restart local v21    # "permGids":[I
    .restart local v22    # "pm":Landroid/content/pm/PackageManager;
    :cond_13
    const/4 v10, 0x2

    goto/16 :goto_0

    .line 2947
    .end local v22    # "pm":Landroid/content/pm/PackageManager;
    :catch_0
    move-exception v18

    .line 2948
    .local v18, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :try_start_7
    const-string v4, "ActivityManager"

    const-string v5, "Unable to retrieve gids"

    move-object/from16 v0, v18

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_7
    .catch Ljava/lang/RuntimeException; {:try_start_7 .. :try_end_7} :catch_1

    goto/16 :goto_0

    .line 3076
    .end local v6    # "uid":I
    .end local v8    # "gids":[I
    .end local v10    # "mountExternal":I
    .end local v18    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    .end local v21    # "permGids":[I
    :catch_1
    move-exception v18

    .line 3078
    .local v18, "e":Ljava/lang/RuntimeException;
    const/4 v4, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Lcom/android/server/am/ProcessRecord;->setPid(I)V

    .line 3079
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->noteProcessFinish(Ljava/lang/String;I)V

    .line 3080
    move-object/from16 v0, p1

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v4, :cond_14

    .line 3081
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v7, v7, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v5, v7}, Lcom/android/server/am/BatteryStatsService;->removeIsolatedUid(II)V

    .line 3083
    :cond_14
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Failure starting process "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, p1

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, v18

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_6

    .line 2958
    .end local v18    # "e":Ljava/lang/RuntimeException;
    .restart local v6    # "uid":I
    .restart local v8    # "gids":[I
    .restart local v10    # "mountExternal":I
    .restart local v21    # "permGids":[I
    :cond_15
    :try_start_8
    move-object/from16 v0, v21

    array-length v4, v0

    add-int/lit8 v4, v4, 0x2

    new-array v8, v4, [I

    .line 2959
    const/4 v4, 0x0

    const/4 v5, 0x2

    move-object/from16 v0, v21

    array-length v7, v0

    move-object/from16 v0, v21

    invoke-static {v0, v4, v8, v5, v7}, Ljava/lang/System;->arraycopy([II[III)V

    goto/16 :goto_1

    .line 2999
    .end local v21    # "permGids":[I
    .restart local v9    # "debugFlags":I
    :cond_16
    move-object/from16 v0, p1

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v13, v4, Landroid/content/pm/ApplicationInfo;->primaryCpuAbi:Ljava/lang/String;

    goto/16 :goto_2

    .line 3015
    .restart local v13    # "requiredAbi":Ljava/lang/String;
    .restart local v14    # "instructionSet":Ljava/lang/String;
    :cond_17
    const/16 v19, 0x0

    goto/16 :goto_3

    .line 3030
    .restart local v19    # "isActivityProcess":Z
    .restart local v23    # "startResult":Landroid/os/Process$ProcessStartResult;
    :cond_18
    const-string v4, ""
    :try_end_8
    .catch Ljava/lang/RuntimeException; {:try_start_8 .. :try_end_8} :catch_1

    goto/16 :goto_4

    .line 3071
    .restart local v17    # "buf":Ljava/lang/StringBuilder;
    .restart local v20    # "msg":Landroid/os/Message;
    :cond_19
    const-wide/16 v4, 0x2710

    goto/16 :goto_5

    .line 3074
    .end local v20    # "msg":Landroid/os/Message;
    :catchall_1
    move-exception v4

    :try_start_9
    monitor-exit v7
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_1

    :try_start_a
    throw v4
    :try_end_a
    .catch Ljava/lang/RuntimeException; {:try_start_a .. :try_end_a} :catch_1
.end method

.method private startUser(IZ)Z
    .locals 34
    .param p1, "userId"    # I
    .param p2, "foreground"    # Z

    .prologue
    .line 18881
    const-string v4, "android.permission.INTERACT_ACROSS_USERS_FULL"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v4

    if-eqz v4, :cond_0

    .line 18883
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Permission Denial: switchUser() from pid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", uid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " requires "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v28

    .line 18887
    .local v28, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    move-object/from16 v0, v28

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18888
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v28

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 18893
    .end local v28    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v26

    .line 18895
    .local v26, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 18896
    :try_start_1
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v30, v0

    .line 18897
    .local v30, "oldUserId":I
    move/from16 v0, v30

    move/from16 v1, p1

    if-ne v0, v1, :cond_1

    .line 18898
    const/4 v4, 0x1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 19041
    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 19044
    :goto_0
    return v4

    .line 18901
    :cond_1
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const-string v8, "startUser"

    invoke-virtual {v4, v5, v6, v8}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ZLjava/lang/String;)V

    .line 18903
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v32

    .line 18904
    .local v32, "userInfo":Landroid/content/pm/UserInfo;
    if-nez v32, :cond_2

    .line 18905
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "No user info for user #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18906
    const/4 v4, 0x0

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 19041
    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 18908
    :cond_2
    if-eqz p2, :cond_3

    :try_start_3
    invoke-virtual/range {v32 .. v32}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v4

    if-eqz v4, :cond_3

    .line 18909
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Cannot switch to User #"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": not a full user"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 18910
    const/4 v4, 0x0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 19041
    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 18913
    :cond_3
    if-eqz p2, :cond_4

    .line 18914
    :try_start_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const v5, #android:anim@screen_user_exit#t

    const v6, #android:anim@screen_user_enter#t

    invoke-virtual {v4, v5, v6}, Lcom/android/server/wm/WindowManagerService;->startFreezingScreen(II)V

    .line 18918
    :cond_4
    const/16 v29, 0x0

    .line 18922
    .local v29, "needStart":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    if-nez v4, :cond_5

    .line 18923
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    new-instance v5, Lcom/android/server/am/UserStartedState;

    new-instance v6, Landroid/os/UserHandle;

    move/from16 v0, p1

    invoke-direct {v6, v0}, Landroid/os/UserHandle;-><init>(I)V

    const/4 v8, 0x0

    invoke-direct {v5, v6, v8}, Lcom/android/server/am/UserStartedState;-><init>(Landroid/os/UserHandle;Z)V

    move/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 18924
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 18925
    const/16 v29, 0x1

    .line 18928
    :cond_5
    invoke-static/range {p1 .. p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v31

    .line 18929
    .local v31, "userIdInt":Ljava/lang/Integer;
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v31

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 18930
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v31

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 18932
    if-eqz p2, :cond_d

    .line 18933
    move/from16 v0, p1

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .line 18934
    const/16 v4, -0x2710

    move-object/from16 v0, p0

    iput v4, v0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 18935
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    .line 18936
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    move/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Lcom/android/server/wm/WindowManagerService;->setCurrentUser(I[I)V

    goto/16 :goto_flyme_0

    .line 18939
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService;->lockNow(Landroid/os/Bundle;)V

    .line 18948
    :goto_1
    :goto_flyme_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v33

    check-cast v33, Lcom/android/server/am/UserStartedState;

    .line 18952
    .local v33, "uss":Lcom/android/server/am/UserStartedState;
    move-object/from16 v0, v33

    iget v4, v0, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v5, 0x2

    if-ne v4, v5, :cond_e

    .line 18956
    const/4 v4, 0x1

    move-object/from16 v0, v33

    iput v4, v0, Lcom/android/server/am/UserStartedState;->mState:I

    .line 18957
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 18958
    const/16 v29, 0x1

    .line 18967
    :cond_6
    :goto_2
    move-object/from16 v0, v33

    iget v4, v0, Lcom/android/server/am/UserStartedState;->mState:I

    if-nez v4, :cond_7

    .line 18971
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x2a

    const/4 v8, 0x0

    move/from16 v0, p1

    invoke-virtual {v5, v6, v0, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 18974
    :cond_7
    if-eqz p2, :cond_8

    .line 18975
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x2b

    move/from16 v0, p1

    move/from16 v1, v30

    invoke-virtual {v5, v6, v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 18977
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x22

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 18978
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x24

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 18979
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x22

    move/from16 v0, v30

    move/from16 v1, p1

    move-object/from16 v2, v33

    invoke-virtual {v5, v6, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 18981
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v6, 0x24

    move/from16 v0, v30

    move/from16 v1, p1

    move-object/from16 v2, v33

    invoke-virtual {v5, v6, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v5

    const-wide/16 v8, 0x7d0

    invoke-virtual {v4, v5, v8, v9}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 18985
    :cond_8
    if-eqz v29, :cond_9

    .line 18987
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.intent.action.USER_STARTED"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 18988
    .local v7, "intent":Landroid/content/Intent;
    const/high16 v4, 0x50000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 18990
    const-string v4, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v7, v4, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 18991
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/4 v15, 0x0

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v18, 0x3e8

    move-object/from16 v4, p0

    move/from16 v19, p1

    invoke-direct/range {v4 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 18996
    .end local v7    # "intent":Landroid/content/Intent;
    :cond_9
    move-object/from16 v0, v32

    iget v4, v0, Landroid/content/pm/UserInfo;->flags:I

    and-int/lit8 v4, v4, 0x10

    if-nez v4, :cond_a

    .line 18997
    if-eqz p1, :cond_f

    .line 18998
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.intent.action.USER_INITIALIZE"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 18999
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x10000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 19000
    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    new-instance v8, Lcom/android/server/am/ActivityManagerService$24;

    move-object/from16 v9, p0

    move-object/from16 v10, v33

    move/from16 v11, p2

    move/from16 v12, v30

    move/from16 v13, p1

    invoke-direct/range {v8 .. v13}, Lcom/android/server/am/ActivityManagerService$24;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserStartedState;ZII)V

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, -0x1

    const/16 v20, 0x1

    const/16 v21, 0x0

    sget v22, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v23, 0x3e8

    move-object/from16 v9, p0

    move-object v10, v4

    move-object v11, v5

    move-object v12, v7

    move-object v13, v6

    move-object v14, v8

    move/from16 v24, p1

    invoke-direct/range {v9 .. v24}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 19010
    const/4 v4, 0x1

    move-object/from16 v0, v33

    iput-boolean v4, v0, Lcom/android/server/am/UserStartedState;->initializing:Z

    .line 19016
    .end local v7    # "intent":Landroid/content/Intent;
    :cond_a
    :goto_3
    if-eqz p2, :cond_10

    .line 19017
    move-object/from16 v0, v33

    iget-boolean v4, v0, Lcom/android/server/am/UserStartedState;->initializing:Z

    if-nez v4, :cond_b

    .line 19018
    move-object/from16 v0, p0

    move-object/from16 v1, v33

    move/from16 v2, v30

    move/from16 v3, p1

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->moveUserToForeground(Lcom/android/server/am/UserStartedState;II)V

    .line 19024
    :cond_b
    :goto_4
    if-eqz v29, :cond_c

    .line 19025
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.intent.action.USER_STARTING"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 19026
    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 19027
    const-string v4, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v7, v4, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 19028
    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    new-instance v9, Lcom/android/server/am/ActivityManagerService$25;

    move-object/from16 v0, p0

    invoke-direct {v9, v0}, Lcom/android/server/am/ActivityManagerService$25;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const-string v13, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v14, -0x1

    const/4 v15, 0x1

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v18, 0x3e8

    const/16 v19, -0x1

    move-object/from16 v4, p0

    invoke-direct/range {v4 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 19039
    .end local v7    # "intent":Landroid/content/Intent;
    :cond_c
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 19041
    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 19044
    const/4 v4, 0x1

    goto/16 :goto_0

    .line 18941
    .end local v33    # "uss":Lcom/android/server/am/UserStartedState;
    :cond_d
    :try_start_5
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v4}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v25

    .line 18942
    .local v25, "currentUserIdInt":Ljava/lang/Integer;
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    .line 18943
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    invoke-virtual {v4, v5}, Lcom/android/server/wm/WindowManagerService;->setCurrentProfileIds([I)V

    .line 18944
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v25

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 18945
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move-object/from16 v0, v25

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto/16 :goto_1

    .line 19039
    .end local v25    # "currentUserIdInt":Ljava/lang/Integer;
    .end local v29    # "needStart":Z
    .end local v30    # "oldUserId":I
    .end local v31    # "userIdInt":Ljava/lang/Integer;
    .end local v32    # "userInfo":Landroid/content/pm/UserInfo;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 19041
    :catchall_1
    move-exception v4

    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 18959
    .restart local v29    # "needStart":Z
    .restart local v30    # "oldUserId":I
    .restart local v31    # "userIdInt":Ljava/lang/Integer;
    .restart local v32    # "userInfo":Landroid/content/pm/UserInfo;
    .restart local v33    # "uss":Lcom/android/server/am/UserStartedState;
    :cond_e
    :try_start_7
    move-object/from16 v0, v33

    iget v4, v0, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v5, 0x3

    if-ne v4, v5, :cond_6

    .line 18962
    const/4 v4, 0x0

    move-object/from16 v0, v33

    iput v4, v0, Lcom/android/server/am/UserStartedState;->mState:I

    .line 18963
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 18964
    const/16 v29, 0x1

    goto/16 :goto_2

    .line 19012
    :cond_f
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v4

    move-object/from16 v0, v32

    iget v5, v0, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {v4, v5}, Lcom/android/server/pm/UserManagerService;->makeInitialized(I)V

    goto/16 :goto_3

    .line 19021
    :cond_10
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move/from16 v0, p1

    move-object/from16 v1, v33

    invoke-virtual {v4, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->startBackgroundUserLocked(ILcom/android/server/am/UserStartedState;)V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    goto/16 :goto_4
.end method

.method private stopGuestUserIfBackground()V
    .locals 7

    .prologue
    .line 19204
    monitor-enter p0

    .line 19205
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 19206
    .local v1, "num":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    if-ge v0, v1, :cond_2

    .line 19207
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    .line 19208
    .local v2, "oldUserId":Ljava/lang/Integer;
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v6

    invoke-virtual {v5, v6}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UserStartedState;

    .line 19209
    .local v3, "oldUss":Lcom/android/server/am/UserStartedState;
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    if-eqz v5, :cond_0

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-eq v5, v6, :cond_0

    iget v5, v3, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v6, 0x2

    if-eq v5, v6, :cond_0

    iget v5, v3, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v6, 0x3

    if-ne v5, v6, :cond_1

    .line 19206
    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 19214
    :cond_1
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v6

    invoke-virtual {v5, v6}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v4

    .line 19215
    .local v4, "userInfo":Landroid/content/pm/UserInfo;
    invoke-virtual {v4}, Landroid/content/pm/UserInfo;->isGuest()Z

    move-result v5

    if-eqz v5, :cond_0

    .line 19217
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    const/4 v6, 0x0

    invoke-direct {p0, v5, v6}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I

    .line 19221
    .end local v2    # "oldUserId":Ljava/lang/Integer;
    .end local v3    # "oldUss":Lcom/android/server/am/UserStartedState;
    .end local v4    # "userInfo":Landroid/content/pm/UserInfo;
    :cond_2
    monitor-exit p0

    .line 19222
    return-void

    .line 19221
    .end local v0    # "i":I
    .end local v1    # "num":I
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5
.end method

.method private stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V
    .locals 4
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "profileType"    # I

    .prologue
    .line 18605
    if-eqz p1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-ne p1, v1, :cond_1

    .line 18606
    :cond_0
    iget-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 18607
    iget p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 18608
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 18610
    :cond_1
    if-nez p1, :cond_2

    .line 18618
    :goto_0
    return-void

    .line 18614
    :cond_2
    :try_start_0
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/4 v2, 0x0

    const/4 v3, 0x0

    invoke-interface {v1, v2, v3, p2}, Landroid/app/IApplicationThread;->profilerControl(ZLandroid/app/ProfilerInfo;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 18615
    :catch_0
    move-exception v0

    .line 18616
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v1, Ljava/lang/IllegalStateException;

    const-string v2, "Process disappeared"

    invoke-direct {v1, v2}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method private stopUserLocked(ILandroid/app/IStopUserCallback;)I
    .locals 28
    .param p1, "userId"    # I
    .param p2, "callback"    # Landroid/app/IStopUserCallback;

    .prologue
    .line 19328
    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v0, p1

    if-ne v5, v0, :cond_0

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v7, -0x2710

    if-ne v5, v7, :cond_0

    .line 19329
    const/4 v5, -0x2

    .line 19409
    :goto_0
    return v5

    .line 19332
    :cond_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, p1

    invoke-virtual {v5, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/UserStartedState;

    .line 19333
    .local v6, "uss":Lcom/android/server/am/UserStartedState;
    if-nez v6, :cond_2

    .line 19336
    if-eqz p2, :cond_1

    .line 19337
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v7, Lcom/android/server/am/ActivityManagerService$27;

    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move/from16 v2, p1

    invoke-direct {v7, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$27;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/app/IStopUserCallback;I)V

    invoke-virtual {v5, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    .line 19347
    :cond_1
    const/4 v5, 0x0

    goto :goto_0

    .line 19350
    :cond_2
    if-eqz p2, :cond_3

    .line 19351
    iget-object v5, v6, Lcom/android/server/am/UserStartedState;->mStopCallbacks:Ljava/util/ArrayList;

    move-object/from16 v0, p2

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 19354
    :cond_3
    iget v5, v6, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v7, 0x2

    if-eq v5, v7, :cond_4

    iget v5, v6, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v7, 0x3

    if-eq v5, v7, :cond_4

    .line 19356
    const/4 v5, 0x2

    iput v5, v6, Lcom/android/server/am/UserStartedState;->mState:I

    .line 19357
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 19359
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v26

    .line 19364
    .local v26, "ident":J
    :try_start_0
    new-instance v13, Landroid/content/Intent;

    const-string v5, "android.intent.action.USER_STOPPING"

    invoke-direct {v13, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 19365
    .local v13, "stoppingIntent":Landroid/content/Intent;
    const/high16 v5, 0x40000000    # 2.0f

    invoke-virtual {v13, v5}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 19366
    const-string v5, "android.intent.extra.user_handle"

    move/from16 v0, p1

    invoke-virtual {v13, v5, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 19367
    const-string v5, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    const/4 v7, 0x1

    invoke-virtual {v13, v5, v7}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    .line 19368
    new-instance v8, Landroid/content/Intent;

    const-string v5, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v8, v5}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 19370
    .local v8, "shutdownIntent":Landroid/content/Intent;
    new-instance v9, Lcom/android/server/am/ActivityManagerService$28;

    move-object/from16 v0, p0

    invoke-direct {v9, v0, v6}, Lcom/android/server/am/ActivityManagerService$28;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserStartedState;)V

    .line 19378
    .local v9, "shutdownReceiver":Landroid/content/IIntentReceiver;
    new-instance v4, Lcom/android/server/am/ActivityManagerService$29;

    move-object/from16 v5, p0

    move/from16 v7, p1

    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService$29;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/UserStartedState;ILandroid/content/Intent;Landroid/content/IIntentReceiver;)V

    .line 19400
    .local v4, "stoppingReceiver":Landroid/content/IIntentReceiver;
    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v14, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const-string v19, "android.permission.INTERACT_ACROSS_USERS"

    const/16 v20, -0x1

    const/16 v21, 0x1

    const/16 v22, 0x0

    sget v23, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v24, 0x3e8

    const/16 v25, -0x1

    move-object/from16 v10, p0

    move-object v15, v4

    invoke-direct/range {v10 .. v25}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19405
    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 19409
    .end local v4    # "stoppingReceiver":Landroid/content/IIntentReceiver;
    .end local v8    # "shutdownIntent":Landroid/content/Intent;
    .end local v9    # "shutdownReceiver":Landroid/content/IIntentReceiver;
    .end local v13    # "stoppingIntent":Landroid/content/Intent;
    .end local v26    # "ident":J
    :cond_4
    const/4 v5, 0x0

    goto/16 :goto_0

    .line 19405
    .restart local v26    # "ident":J
    :catchall_0
    move-exception v5

    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5
.end method

.method private updateCurrentProfileIdsLocked()V
    .locals 9

    .prologue
    const/4 v7, 0x0

    .line 18821
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v5

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v5, v6, v7}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v2

    .line 18823
    .local v2, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v2}, Ljava/util/List;->size()I

    move-result v5

    new-array v0, v5, [I

    .line 18824
    .local v0, "currentProfileIds":[I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    array-length v5, v0

    if-ge v1, v5, :cond_0

    .line 18825
    invoke-interface {v2, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/UserInfo;

    iget v5, v5, Landroid/content/pm/UserInfo;->id:I

    aput v5, v0, v1

    .line 18824
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 18827
    :cond_0
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .line 18829
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v6

    .line 18830
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v5}, Landroid/util/SparseIntArray;->clear()V

    .line 18831
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v5

    const/4 v7, 0x0

    invoke-virtual {v5, v7}, Lcom/android/server/pm/UserManagerService;->getUsers(Z)Ljava/util/List;

    move-result-object v4

    .line 18832
    .local v4, "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    const/4 v1, 0x0

    :goto_1
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v5

    if-ge v1, v5, :cond_2

    .line 18833
    invoke-interface {v4, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/pm/UserInfo;

    .line 18834
    .local v3, "user":Landroid/content/pm/UserInfo;
    iget v5, v3, Landroid/content/pm/UserInfo;->profileGroupId:I

    const/4 v7, -0x1

    if-eq v5, v7, :cond_1

    .line 18835
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    iget v7, v3, Landroid/content/pm/UserInfo;->id:I

    iget v8, v3, Landroid/content/pm/UserInfo;->profileGroupId:I

    invoke-virtual {v5, v7, v8}, Landroid/util/SparseIntArray;->put(II)V

    .line 18832
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 18838
    .end local v3    # "user":Landroid/content/pm/UserInfo;
    :cond_2
    monitor-exit v6

    .line 18839
    return-void

    .line 18838
    .end local v4    # "users":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :catchall_0
    move-exception v5

    monitor-exit v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v5
.end method

.method private updateEventDispatchingLocked()V
    .locals 2

    .prologue
    .line 10146
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-eqz v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService;->setEventDispatching(Z)V

    .line 10147
    return-void

    .line 10146
    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "now"    # J
    .param p4, "index"    # I
    .param p5, "what"    # Ljava/lang/String;
    .param p6, "obj"    # Ljava/lang/Object;
    .param p7, "srcApp"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 2441
    iput-wide p2, p1, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    .line 2443
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_0

    move v0, p4

    .line 2473
    .end local p4    # "index":I
    .local v0, "index":I
    :goto_0
    return v0

    .line 2448
    .end local v0    # "index":I
    .restart local p4    # "index":I
    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v1

    .line 2449
    .local v1, "lrui":I
    if-gez v1, :cond_1

    .line 2450
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Adding dependent process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " not on LRU list: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " from "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    move v0, p4

    .line 2452
    .end local p4    # "index":I
    .restart local v0    # "index":I
    goto :goto_0

    .line 2455
    .end local v0    # "index":I
    .restart local p4    # "index":I
    :cond_1
    if-lt v1, p4, :cond_2

    move v0, p4

    .line 2458
    .end local p4    # "index":I
    .restart local v0    # "index":I
    goto :goto_0

    .line 2461
    .end local v0    # "index":I
    .restart local p4    # "index":I
    :cond_2
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-lt v1, v2, :cond_3

    move v0, p4

    .line 2463
    .end local p4    # "index":I
    .restart local v0    # "index":I
    goto :goto_0

    .line 2466
    .end local v0    # "index":I
    .restart local p4    # "index":I
    :cond_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 2467
    if-lez p4, :cond_4

    .line 2468
    add-int/lit8 p4, p4, -0x1

    .line 2472
    :cond_4
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, p4, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    move v0, p4

    .line 2473
    .end local p4    # "index":I
    .restart local v0    # "index":I
    goto :goto_0
.end method

.method private final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cachedAdj"    # I
    .param p3, "TOP_APP"    # Lcom/android/server/am/ProcessRecord;
    .param p4, "doingAll"    # Z
    .param p5, "now"    # J

    .prologue
    .line 18073
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_0

    .line 18074
    const/4 v0, 0x0

    .line 18079
    :goto_0
    return v0

    .line 18077
    :cond_0
    invoke-direct/range {p0 .. p6}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    move-object v0, p0

    move-object v1, p1

    move-object v2, p3

    move v3, p4

    move-wide v4, p5

    .line 18079
    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;ZJ)Z

    move-result v0

    goto :goto_0
.end method

.method private updateStartedUserArrayLocked()V
    .locals 7

    .prologue
    const/4 v6, 0x3

    const/4 v5, 0x2

    .line 19522
    const/4 v1, 0x0

    .line 19523
    .local v1, "num":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v0, v3, :cond_1

    .line 19524
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UserStartedState;

    .line 19526
    .local v2, "uss":Lcom/android/server/am/UserStartedState;
    iget v3, v2, Lcom/android/server/am/UserStartedState;->mState:I

    if-eq v3, v5, :cond_0

    iget v3, v2, Lcom/android/server/am/UserStartedState;->mState:I

    if-eq v3, v6, :cond_0

    .line 19528
    add-int/lit8 v1, v1, 0x1

    .line 19523
    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 19531
    .end local v2    # "uss":Lcom/android/server/am/UserStartedState;
    :cond_1
    new-array v3, v1, [I

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    .line 19532
    const/4 v1, 0x0

    .line 19533
    const/4 v0, 0x0

    :goto_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    if-ge v0, v3, :cond_3

    .line 19534
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/UserStartedState;

    .line 19535
    .restart local v2    # "uss":Lcom/android/server/am/UserStartedState;
    iget v3, v2, Lcom/android/server/am/UserStartedState;->mState:I

    if-eq v3, v5, :cond_2

    iget v3, v2, Lcom/android/server/am/UserStartedState;->mState:I

    if-eq v3, v6, :cond_2

    .line 19537
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    aput v4, v3, v1

    .line 19538
    add-int/lit8 v1, v1, 0x1

    .line 19533
    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 19541
    .end local v2    # "uss":Lcom/android/server/am/UserStartedState;
    :cond_3
    return-void
.end method

.method private userExists(I)Z
    .locals 4
    .param p1, "userId"    # I

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 19564
    if-nez p1, :cond_1

    .line 19568
    :cond_0
    :goto_0
    return v1

    .line 19567
    :cond_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v0

    .line 19568
    .local v0, "ums":Lcom/android/server/pm/UserManagerService;
    if-eqz v0, :cond_2

    invoke-virtual {v0, p1}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v3

    if-nez v3, :cond_0

    move v1, v2

    goto :goto_0

    :cond_2
    move v1, v2

    goto :goto_0
.end method

.method private writeGrantedUriPermissions()V
    .locals 12

    .prologue
    .line 7711
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v7

    .line 7712
    .local v7, "persist":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/UriPermission$Snapshot;>;"
    monitor-enter p0

    .line 7713
    :try_start_0
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v9}, Landroid/util/SparseArray;->size()I

    move-result v8

    .line 7714
    .local v8, "size":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v8, :cond_2

    .line 7715
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v9, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 7716
    .local v6, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v6}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v9

    invoke-interface {v9}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .local v3, "i$":Ljava/util/Iterator;
    :cond_0
    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 7717
    .local v5, "perm":Lcom/android/server/am/UriPermission;
    iget v9, v5, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v9, :cond_0

    .line 7718
    invoke-virtual {v5}, Lcom/android/server/am/UriPermission;->snapshot()Lcom/android/server/am/UriPermission$Snapshot;

    move-result-object v9

    invoke-virtual {v7, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 7722
    .end local v2    # "i":I
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v5    # "perm":Lcom/android/server/am/UriPermission;
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v8    # "size":I
    :catchall_0
    move-exception v9

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v9

    .line 7714
    .restart local v2    # "i":I
    .restart local v3    # "i$":Ljava/util/Iterator;
    .restart local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .restart local v8    # "size":I
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 7722
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7724
    const/4 v1, 0x0

    .line 7726
    .local v1, "fos":Ljava/io/FileOutputStream;
    :try_start_2
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v9}, Landroid/util/AtomicFile;->startWrite()Ljava/io/FileOutputStream;

    move-result-object v1

    .line 7728
    new-instance v4, Lcom/android/internal/util/FastXmlSerializer;

    invoke-direct {v4}, Lcom/android/internal/util/FastXmlSerializer;-><init>()V

    .line 7729
    .local v4, "out":Lorg/xmlpull/v1/XmlSerializer;
    const-string v9, "utf-8"

    invoke-interface {v4, v1, v9}, Lorg/xmlpull/v1/XmlSerializer;->setOutput(Ljava/io/OutputStream;Ljava/lang/String;)V

    .line 7730
    const/4 v9, 0x0

    const/4 v10, 0x1

    invoke-static {v10}, Ljava/lang/Boolean;->valueOf(Z)Ljava/lang/Boolean;

    move-result-object v10

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->startDocument(Ljava/lang/String;Ljava/lang/Boolean;)V

    .line 7731
    const/4 v9, 0x0

    const-string v10, "uri-grants"

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 7732
    invoke-virtual {v7}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .restart local v3    # "i$":Ljava/util/Iterator;
    :goto_2
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v9

    if-eqz v9, :cond_4

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission$Snapshot;

    .line 7733
    .local v5, "perm":Lcom/android/server/am/UriPermission$Snapshot;
    const/4 v9, 0x0

    const-string v10, "uri-grant"

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->startTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 7734
    const-string v9, "sourceUserId"

    iget-object v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget v10, v10, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-static {v4, v9, v10}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 7735
    const-string v9, "targetUserId"

    iget v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->targetUserId:I

    invoke-static {v4, v9, v10}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 7736
    const/4 v9, 0x0

    const-string v10, "sourcePkg"

    iget-object v11, v5, Lcom/android/server/am/UriPermission$Snapshot;->sourcePkg:Ljava/lang/String;

    invoke-interface {v4, v9, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 7737
    const/4 v9, 0x0

    const-string v10, "targetPkg"

    iget-object v11, v5, Lcom/android/server/am/UriPermission$Snapshot;->targetPkg:Ljava/lang/String;

    invoke-interface {v4, v9, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 7738
    const/4 v9, 0x0

    const-string v10, "uri"

    iget-object v11, v5, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-object v11, v11, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-static {v11}, Ljava/lang/String;->valueOf(Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v11

    invoke-interface {v4, v9, v10, v11}, Lorg/xmlpull/v1/XmlSerializer;->attribute(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 7739
    const-string v9, "prefix"

    iget-object v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    iget-boolean v10, v10, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    invoke-static {v4, v9, v10}, Lcom/android/internal/util/XmlUtils;->writeBooleanAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;Z)V

    .line 7740
    const-string v9, "modeFlags"

    iget v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->persistedModeFlags:I

    invoke-static {v4, v9, v10}, Lcom/android/internal/util/XmlUtils;->writeIntAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;I)V

    .line 7741
    const-string v9, "createdTime"

    iget-wide v10, v5, Lcom/android/server/am/UriPermission$Snapshot;->persistedCreateTime:J

    invoke-static {v4, v9, v10, v11}, Lcom/android/internal/util/XmlUtils;->writeLongAttribute(Lorg/xmlpull/v1/XmlSerializer;Ljava/lang/String;J)V

    .line 7742
    const/4 v9, 0x0

    const-string v10, "uri-grant"

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0

    goto :goto_2

    .line 7748
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v4    # "out":Lorg/xmlpull/v1/XmlSerializer;
    .end local v5    # "perm":Lcom/android/server/am/UriPermission$Snapshot;
    :catch_0
    move-exception v0

    .line 7749
    .local v0, "e":Ljava/io/IOException;
    if-eqz v1, :cond_3

    .line 7750
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v9, v1}, Landroid/util/AtomicFile;->failWrite(Ljava/io/FileOutputStream;)V

    .line 7753
    .end local v0    # "e":Ljava/io/IOException;
    :cond_3
    :goto_3
    return-void

    .line 7744
    .restart local v3    # "i$":Ljava/util/Iterator;
    .restart local v4    # "out":Lorg/xmlpull/v1/XmlSerializer;
    :cond_4
    const/4 v9, 0x0

    :try_start_3
    const-string v10, "uri-grants"

    invoke-interface {v4, v9, v10}, Lorg/xmlpull/v1/XmlSerializer;->endTag(Ljava/lang/String;Ljava/lang/String;)Lorg/xmlpull/v1/XmlSerializer;

    .line 7745
    invoke-interface {v4}, Lorg/xmlpull/v1/XmlSerializer;->endDocument()V

    .line 7747
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mGrantFile:Landroid/util/AtomicFile;

    invoke-virtual {v9, v1}, Landroid/util/AtomicFile;->finishWrite(Ljava/io/FileOutputStream;)V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_3
.end method

.method private static writeLastDonePreBootReceivers(Ljava/util/ArrayList;)V
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Landroid/content/ComponentName;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 11082
    .local p0, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    invoke-static {}, Lcom/android/server/am/ActivityManagerService;->getCalledPreBootReceiversFile()Ljava/io/File;

    move-result-object v3

    .line 11083
    .local v3, "file":Ljava/io/File;
    const/4 v4, 0x0

    .line 11084
    .local v4, "fos":Ljava/io/FileOutputStream;
    const/4 v0, 0x0

    .line 11086
    .local v0, "dos":Ljava/io/DataOutputStream;
    :try_start_0
    new-instance v5, Ljava/io/FileOutputStream;

    invoke-direct {v5, v3}, Ljava/io/FileOutputStream;-><init>(Ljava/io/File;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_1
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11087
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .local v5, "fos":Ljava/io/FileOutputStream;
    :try_start_1
    new-instance v1, Ljava/io/DataOutputStream;

    new-instance v7, Ljava/io/BufferedOutputStream;

    const/16 v8, 0x800

    invoke-direct {v7, v5, v8}, Ljava/io/BufferedOutputStream;-><init>(Ljava/io/OutputStream;I)V

    invoke-direct {v1, v7}, Ljava/io/DataOutputStream;-><init>(Ljava/io/OutputStream;)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_4
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 11088
    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .local v1, "dos":Ljava/io/DataOutputStream;
    const/16 v7, 0x2710

    :try_start_2
    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeInt(I)V

    .line 11089
    sget-object v7, Landroid/os/Build$VERSION;->RELEASE:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 11090
    sget-object v7, Landroid/os/Build$VERSION;->CODENAME:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 11091
    sget-object v7, Landroid/os/Build$VERSION;->INCREMENTAL:Ljava/lang/String;

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 11092
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeInt(I)V

    .line 11093
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    invoke-virtual {p0}, Ljava/util/ArrayList;->size()I

    move-result v7

    if-ge v6, v7, :cond_0

    .line 11094
    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V

    .line 11095
    invoke-virtual {p0, v6}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/content/ComponentName;

    invoke-virtual {v7}, Landroid/content/ComponentName;->getClassName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v1, v7}, Ljava/io/DataOutputStream;->writeUTF(Ljava/lang/String;)V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_5
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    .line 11093
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 11101
    :cond_0
    invoke-static {v5}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 11102
    if-eqz v1, :cond_3

    .line 11104
    :try_start_3
    invoke-virtual {v1}, Ljava/io/DataOutputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_0

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .line 11111
    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .end local v6    # "i":I
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    :cond_1
    :goto_1
    return-void

    .line 11105
    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v6    # "i":I
    :catch_0
    move-exception v2

    .line 11107
    .local v2, "e":Ljava/io/IOException;
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .line 11108
    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_1

    .line 11097
    .end local v2    # "e":Ljava/io/IOException;
    .end local v6    # "i":I
    :catch_1
    move-exception v2

    .line 11098
    .restart local v2    # "e":Ljava/io/IOException;
    :goto_2
    :try_start_4
    const-string v7, "ActivityManager"

    const-string v8, "Failure writing last done pre-boot receivers"

    invoke-static {v7, v8, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 11099
    invoke-virtual {v3}, Ljava/io/File;->delete()Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 11101
    invoke-static {v4}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 11102
    if-eqz v0, :cond_1

    .line 11104
    :try_start_5
    invoke-virtual {v0}, Ljava/io/DataOutputStream;->close()V
    :try_end_5
    .catch Ljava/io/IOException; {:try_start_5 .. :try_end_5} :catch_2

    goto :goto_1

    .line 11105
    :catch_2
    move-exception v2

    .line 11107
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_1

    .line 11101
    .end local v2    # "e":Ljava/io/IOException;
    :catchall_0
    move-exception v7

    :goto_3
    invoke-static {v4}, Landroid/os/FileUtils;->sync(Ljava/io/FileOutputStream;)Z

    .line 11102
    if-eqz v0, :cond_2

    .line 11104
    :try_start_6
    invoke-virtual {v0}, Ljava/io/DataOutputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_3

    .line 11108
    :cond_2
    :goto_4
    throw v7

    .line 11105
    :catch_3
    move-exception v2

    .line 11107
    .restart local v2    # "e":Ljava/io/IOException;
    invoke-virtual {v2}, Ljava/io/IOException;->printStackTrace()V

    goto :goto_4

    .line 11101
    .end local v2    # "e":Ljava/io/IOException;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catchall_1
    move-exception v7

    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_3

    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catchall_2
    move-exception v7

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_3

    .line 11097
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catch_4
    move-exception v2

    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_2

    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    :catch_5
    move-exception v2

    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_2

    .end local v0    # "dos":Ljava/io/DataOutputStream;
    .end local v4    # "fos":Ljava/io/FileOutputStream;
    .restart local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v6    # "i":I
    :cond_3
    move-object v0, v1

    .end local v1    # "dos":Ljava/io/DataOutputStream;
    .restart local v0    # "dos":Ljava/io/DataOutputStream;
    move-object v4, v5

    .end local v5    # "fos":Ljava/io/FileOutputStream;
    .restart local v4    # "fos":Ljava/io/FileOutputStream;
    goto :goto_1
.end method


# virtual methods
.method public final activityDestroyed(Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6349
    monitor-enter p0

    .line 6350
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 6351
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 6352
    const-string v1, "activityDestroyed"

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/ActivityStack;->activityDestroyedLocked(Landroid/os/IBinder;Ljava/lang/String;)V

    .line 6354
    :cond_0
    monitor-exit p0

    .line 6355
    return-void

    .line 6354
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public final activityIdle(Landroid/os/IBinder;Landroid/content/res/Configuration;Z)V
    .locals 6
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "config"    # Landroid/content/res/Configuration;
    .param p3, "stopProfiling"    # Z

    .prologue
    .line 6095
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6096
    .local v0, "origId":J
    monitor-enter p0

    .line 6097
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v3

    .line 6098
    .local v3, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v3, :cond_0

    .line 6099
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    invoke-virtual {v4, p1, v5, p2}, Lcom/android/server/am/ActivityStackSupervisor;->activityIdleInternalLocked(Landroid/os/IBinder;ZLandroid/content/res/Configuration;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 6101
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz p3, :cond_0

    .line 6102
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    iget-object v5, v2, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-ne v4, v5, :cond_0

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v4, :cond_0

    .line 6104
    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6107
    :goto_0
    :try_start_2
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->clearProfilerLocked()V

    .line 6111
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 6112
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6113
    return-void

    .line 6111
    .end local v3    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v4

    .line 6105
    .restart local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v3    # "stack":Lcom/android/server/am/ActivityStack;
    :catch_0
    move-exception v4

    goto :goto_0
.end method

.method public final activityPaused(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6312
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6313
    .local v0, "origId":J
    monitor-enter p0

    .line 6314
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 6315
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    .line 6316
    const/4 v3, 0x0

    invoke-virtual {v2, p1, v3}, Lcom/android/server/am/ActivityStack;->activityPausedLocked(Landroid/os/IBinder;Z)V

    .line 6318
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6319
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6320
    return-void

    .line 6318
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method public final activityResumed(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6300
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6301
    .local v0, "origId":J
    monitor-enter p0

    .line 6302
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 6303
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    .line 6304
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->activityResumedLocked(Landroid/os/IBinder;)V

    .line 6306
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6307
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6308
    return-void

    .line 6306
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method public final activitySlept(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10110
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10112
    .local v0, "origId":J
    monitor-enter p0

    .line 10113
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 10114
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 10115
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityStackSupervisor;->activitySleptLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 10117
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10119
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 10120
    return-void

    .line 10117
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method public final activityStopped(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "icicle"    # Landroid/os/Bundle;
    .param p3, "persistentState"    # Landroid/os/PersistableBundle;
    .param p4, "description"    # Ljava/lang/CharSequence;

    .prologue
    .line 6328
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v3

    if-eqz v3, :cond_0

    .line 6329
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "File descriptors passed in Bundle"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 6332
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6334
    .local v0, "origId":J
    monitor-enter p0

    .line 6335
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 6336
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_1

    .line 6337
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v3, v2, p2, p3, p4}, Lcom/android/server/am/ActivityStack;->activityStoppedLocked(Lcom/android/server/am/ActivityRecord;Landroid/os/Bundle;Landroid/os/PersistableBundle;Ljava/lang/CharSequence;)V

    .line 6339
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6341
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V

    .line 6343
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6344
    return-void

    .line 6339
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method final addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    .locals 8
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "isolated"    # Z
    .param p3, "abiOverride"    # Ljava/lang/String;

    .prologue
    const/4 v6, 0x1

    const/4 v4, 0x0

    const/4 v5, 0x0

    .line 9912
    if-nez p2, :cond_4

    .line 9913
    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v2, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v0, v2, v6}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 9918
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    :goto_0
    if-nez v1, :cond_1

    .line 9919
    invoke-virtual {p0, p1, v5, p2, v4}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 9920
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v3, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v2, v3, v1}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    .line 9921
    if-eqz p2, :cond_0

    .line 9922
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    iget v2, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v2, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 9924
    :cond_0
    invoke-virtual {p0, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    .line 9925
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 9930
    :cond_1
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v3, 0x0

    iget v4, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    invoke-interface {v0, v2, v3, v4}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Ljava/lang/IllegalArgumentException; {:try_start_0 .. :try_end_0} :catch_0

    .line 9938
    :goto_1
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x9

    const/16 v2, 0x9

    if-ne v0, v2, :cond_2

    .line 9940
    iput-boolean v6, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    .line 9941
    const/16 v0, -0xc

    iput v0, v1, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    .line 9943
    :cond_2
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v0, :cond_3

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v0

    if-gez v0, :cond_3

    .line 9944
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9945
    const-string v2, "added application"

    iget-object v3, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object v0, p0

    move-object v4, p3

    move-object v6, v5

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    .line 9949
    :cond_3
    return-object v1

    .line 9915
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_4
    const/4 v1, 0x0

    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    .line 9933
    :catch_0
    move-exception v7

    .line 9934
    .local v7, "e":Ljava/lang/IllegalArgumentException;
    const-string v0, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Failed trying to unstop package "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ": "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 9932
    .end local v7    # "e":Ljava/lang/IllegalArgumentException;
    :catch_1
    move-exception v0

    goto :goto_1
.end method

.method public addAppTask(Landroid/os/IBinder;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;Landroid/graphics/Bitmap;)I
    .locals 16
    .param p1, "activityToken"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "description"    # Landroid/app/ActivityManager$TaskDescription;
    .param p4, "thumbnail"    # Landroid/graphics/Bitmap;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 8248
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v9

    .line 8249
    .local v9, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 8252
    .local v10, "callingIdent":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8253
    :try_start_1
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v13

    .line 8254
    .local v13, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v13, :cond_0

    .line 8255
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Activity does not exist; token="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8323
    .end local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v3
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8325
    :catchall_1
    move-exception v3

    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3

    .line 8258
    .restart local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_3
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v12

    .line 8259
    .local v12, "comp":Landroid/content/ComponentName;
    if-nez v12, :cond_1

    .line 8260
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Intent "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " must specify explicit component"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8263
    :cond_1
    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v3

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    if-ne v3, v4, :cond_2

    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v3

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    if-eq v3, v4, :cond_3

    .line 8265
    :cond_2
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Bad thumbnail size: got "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getWidth()I

    move-result v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "x"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p4 .. p4}, Landroid/graphics/Bitmap;->getHeight()I

    move-result v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ", require "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "x"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8269
    :cond_3
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getSelector()Landroid/content/Intent;

    move-result-object v3

    if-eqz v3, :cond_4

    .line 8270
    const/4 v3, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->setSelector(Landroid/content/Intent;)V

    .line 8272
    :cond_4
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getSourceBounds()Landroid/graphics/Rect;

    move-result-object v3

    if-eqz v3, :cond_5

    .line 8273
    const/4 v3, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->setSourceBounds(Landroid/graphics/Rect;)V

    .line 8275
    :cond_5
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const/high16 v4, 0x80000

    and-int/2addr v3, v4

    if-eqz v3, :cond_9

    .line 8276
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    and-int/lit16 v3, v3, 0x2000

    if-nez v3, :cond_6

    .line 8279
    const/16 v3, 0x2000

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 8285
    :cond_6
    :goto_0
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskComponent:Landroid/content/ComponentName;

    invoke-virtual {v12, v3}, Landroid/content/ComponentName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_7

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskUid:I

    if-eq v9, v3, :cond_8

    .line 8286
    :cond_7
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 8288
    :cond_8
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 8289
    .local v5, "ainfo":Landroid/content/pm/ActivityInfo;
    if-nez v5, :cond_a

    .line 8290
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v3

    const/4 v4, 0x0

    invoke-static {v9}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    invoke-interface {v3, v12, v4, v6}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;

    move-result-object v5

    .end local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    move-object/from16 v0, p0

    iput-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastAddedTaskActivity:Landroid/content/pm/ActivityInfo;

    .line 8292
    .restart local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    iget-object v3, v5, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    if-eq v3, v9, :cond_a

    .line 8293
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Can\'t add task for another application: target uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget-object v6, v5, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ", calling uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v9}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 8281
    .end local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    :cond_9
    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getFlags()I

    move-result v3

    const/high16 v4, 0x10000000

    and-int/2addr v3, v4

    if-eqz v3, :cond_6

    .line 8283
    const/high16 v3, 0x10000000

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    goto :goto_0

    .line 8299
    .restart local v5    # "ainfo":Landroid/content/pm/ActivityInfo;
    :cond_a
    new-instance v2, Lcom/android/server/am/TaskRecord;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->getNextTaskId()I

    move-result v4

    move-object/from16 v3, p0

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    invoke-direct/range {v2 .. v7}, Lcom/android/server/am/TaskRecord;-><init>(Lcom/android/server/am/ActivityManagerService;ILandroid/content/pm/ActivityInfo;Landroid/content/Intent;Landroid/app/ActivityManager$TaskDescription;)V

    .line 8302
    .local v2, "task":Lcom/android/server/am/TaskRecord;
    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->trimRecentsForTaskLocked(Lcom/android/server/am/TaskRecord;Z)I

    move-result v15

    .line 8303
    .local v15, "trimIdx":I
    if-ltz v15, :cond_b

    .line 8306
    const/4 v3, -0x1

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 8325
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_1
    return v3

    .line 8309
    :cond_b
    :try_start_4
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v8

    .line 8310
    .local v8, "N":I
    invoke-static {}, Landroid/app/ActivityManager;->getMaxRecentTasksStatic()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    if-lt v8, v3, :cond_c

    .line 8311
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    add-int/lit8 v4, v8, -0x1

    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v14

    check-cast v14, Lcom/android/server/am/TaskRecord;

    .line 8312
    .local v14, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual {v14}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 8315
    .end local v14    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_c
    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/am/TaskRecord;->inRecents:Z

    .line 8316
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 8317
    iget-object v3, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v4, 0x0

    const/4 v6, 0x0

    invoke-virtual {v3, v2, v4, v6}, Lcom/android/server/am/ActivityStack;->addTask(Lcom/android/server/am/TaskRecord;ZZ)V

    .line 8319
    move-object/from16 v0, p4

    invoke-virtual {v2, v0}, Lcom/android/server/am/TaskRecord;->setLastThumbnail(Landroid/graphics/Bitmap;)Z

    .line 8320
    invoke-virtual {v2}, Lcom/android/server/am/TaskRecord;->freeLastThumbnail()V

    .line 8322
    iget v3, v2, Lcom/android/server/am/TaskRecord;->taskId:I

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 8325
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_1
.end method

.method public addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 9
    .param p1, "eventType"    # Ljava/lang/String;
    .param p2, "process"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p5, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p6, "subject"    # Ljava/lang/String;
    .param p7, "report"    # Ljava/lang/String;
    .param p8, "logFile"    # Ljava/io/File;
    .param p9, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 11926
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {p2}, Lcom/android/server/am/ActivityManagerService;->processClass(Lcom/android/server/am/ProcessRecord;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "_"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    .line 11927
    .local v7, "dropboxTag":Ljava/lang/String;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v2, "dropbox"

    invoke-virtual {v1, v2}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/os/DropBoxManager;

    .line 11931
    .local v8, "dbox":Landroid/os/DropBoxManager;
    if-eqz v8, :cond_0

    invoke-virtual {v8, v7}, Landroid/os/DropBoxManager;->isTagEnabled(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_1

    .line 12011
    :cond_0
    :goto_0
    return-void

    .line 11933
    :cond_1
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v1, 0x400

    invoke-direct {v4, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 11934
    .local v4, "sb":Ljava/lang/StringBuilder;
    invoke-direct {p0, p2, p3, v4}, Lcom/android/server/am/ActivityManagerService;->appendDropBoxProcessHeaders(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/StringBuilder;)V

    .line 11935
    if-eqz p4, :cond_2

    .line 11936
    const-string v1, "Activity: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p4, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11938
    :cond_2
    if-eqz p5, :cond_3

    iget-object v1, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v1, :cond_3

    iget-object v1, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget v2, p2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v1, v2, :cond_3

    .line 11939
    const-string v1, "Parent-Process: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p5, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11941
    :cond_3
    if-eqz p5, :cond_4

    if-eq p5, p4, :cond_4

    .line 11942
    const-string v1, "Parent-Activity: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p5, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11944
    :cond_4
    if-eqz p6, :cond_5

    .line 11945
    const-string v1, "Subject: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11947
    :cond_5
    const-string v1, "Build: "

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    sget-object v2, Landroid/os/Build;->FINGERPRINT:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\n"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11948
    invoke-static {}, Landroid/os/Debug;->isDebuggerConnected()Z

    move-result v1

    if-eqz v1, :cond_6

    .line 11949
    const-string v1, "Debugger: Connected\n"

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11951
    :cond_6
    const-string v1, "\n"

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 11955
    new-instance v0, Lcom/android/server/am/ActivityManagerService$19;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Error dump: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object v1, p0

    move-object/from16 v3, p7

    move-object/from16 v5, p8

    move-object/from16 v6, p9

    invoke-direct/range {v0 .. v8}, Lcom/android/server/am/ActivityManagerService$19;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/String;Ljava/lang/String;Ljava/lang/StringBuilder;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;Ljava/lang/String;Landroid/os/DropBoxManager;)V

    .line 12004
    .local v0, "worker":Ljava/lang/Thread;
    if-nez p2, :cond_7

    .line 12007
    invoke-virtual {v0}, Ljava/lang/Thread;->run()V

    goto/16 :goto_0

    .line 12009
    :cond_7
    invoke-virtual {v0}, Ljava/lang/Thread;->start()V

    goto/16 :goto_0
.end method

.method public addPackageDependency(Ljava/lang/String;)V
    .locals 5
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 5325
    monitor-enter p0

    .line 5326
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 5327
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v2

    if-ne v0, v2, :cond_0

    .line 5329
    monitor-exit p0

    .line 5342
    :goto_0
    return-void

    .line 5332
    :cond_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 5333
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 5334
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 5335
    if-eqz v1, :cond_2

    .line 5336
    :try_start_2
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    if-nez v2, :cond_1

    .line 5337
    new-instance v2, Landroid/util/ArraySet;

    const/4 v3, 0x1

    invoke-direct {v2, v3}, Landroid/util/ArraySet;-><init>(I)V

    iput-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    .line 5339
    :cond_1
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->pkgDeps:Landroid/util/ArraySet;

    invoke-virtual {v2, p1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 5341
    :cond_2
    monitor-exit p0

    goto :goto_0

    .end local v0    # "callingPid":I
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 5334
    .restart local v0    # "callingPid":I
    :catchall_1
    move-exception v2

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    throw v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0
.end method

.method final addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 6
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 17759
    const/4 v0, 0x0

    .line 17760
    .local v0, "added":Z
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v1, v2, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    .line 17761
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    iget-wide v2, v2, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    iget-wide v4, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    cmp-long v2, v2, v4

    if-gez v2, :cond_2

    .line 17763
    const/4 v0, 0x1

    .line 17764
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    add-int/lit8 v3, v1, 0x1

    invoke-virtual {v2, v3, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 17768
    :cond_0
    if-nez v0, :cond_1

    .line 17769
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    const/4 v3, 0x0

    invoke-virtual {v2, v3, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    .line 17771
    :cond_1
    return-void

    .line 17760
    :cond_2
    add-int/lit8 v1, v1, -0x1

    goto :goto_0
.end method

.method final addRecentTaskLocked(Lcom/android/server/am/TaskRecord;)V
    .locals 12
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;

    .prologue
    const/4 v11, -0x1

    const/4 v9, 0x1

    const/4 v8, 0x0

    .line 4032
    iget v7, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    iget v10, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    if-ne v7, v10, :cond_0

    iget v7, p1, Lcom/android/server/am/TaskRecord;->mNextAffiliateTaskId:I

    if-ne v7, v11, :cond_0

    iget v7, p1, Lcom/android/server/am/TaskRecord;->mPrevAffiliateTaskId:I

    if-eq v7, v11, :cond_2

    :cond_0
    move v1, v9

    .line 4036
    .local v1, "isAffiliated":Z
    :goto_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 4038
    .local v0, "N":I
    if-nez v1, :cond_3

    if-lez v0, :cond_3

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    if-ne v7, p1, :cond_3

    .line 4153
    :cond_1
    :goto_1
    return-void

    .end local v0    # "N":I
    .end local v1    # "isAffiliated":Z
    :cond_2
    move v1, v8

    .line 4032
    goto :goto_0

    .line 4044
    .restart local v0    # "N":I
    .restart local v1    # "isAffiliated":Z
    :cond_3
    if-eqz v1, :cond_4

    if-lez v0, :cond_4

    iget-boolean v7, p1, Lcom/android/server/am/TaskRecord;->inRecents:Z

    if-eqz v7, :cond_4

    iget v10, p1, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/TaskRecord;

    iget v7, v7, Lcom/android/server/am/TaskRecord;->mAffiliatedTaskId:I

    if-eq v10, v7, :cond_1

    :cond_4
    iget-object v7, p1, Lcom/android/server/am/TaskRecord;->voiceSession:Landroid/service/voice/IVoiceInteractionSession;

    if-nez v7, :cond_1

    const/4 v2, 0x0

    .local v2, "needAffiliationFix":Z
    iget-boolean v7, p1, Lcom/android/server/am/TaskRecord;->inRecents:Z

    if-eqz v7, :cond_6

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, p1}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v5

    .local v5, "taskIndex":I
    if-ltz v5, :cond_7

    if-nez v1, :cond_5

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, v5}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, v8, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    invoke-virtual {p0, p1, v8}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    invoke-static/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->flymeBroadcaseRecentTasksChanged(Lcom/android/server/am/ActivityManagerService;)V

    goto :goto_1

    :cond_5
    invoke-direct {p0, p1, v5}, Lcom/android/server/am/ActivityManagerService;->moveAffiliatedTasksToFront(Lcom/android/server/am/TaskRecord;I)Z

    move-result v7

    if-nez v7, :cond_flyme_0

    .line 4080
    const/4 v2, 0x1

    .line 4089
    .end local v5    # "taskIndex":I
    :cond_6
    :goto_2
    invoke-virtual {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->trimRecentsForTaskLocked(Lcom/android/server/am/TaskRecord;Z)I

    .line 4091
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 4092
    :goto_3
    invoke-static {}, Landroid/app/ActivityManager;->getMaxRecentTasksStatic()I

    move-result v7

    if-lt v0, v7, :cond_8

    .line 4093
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    add-int/lit8 v10, v0, -0x1

    invoke-virtual {v7, v10}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/TaskRecord;

    .line 4094
    .local v6, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual {v6}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 4095
    add-int/lit8 v0, v0, -0x1

    .line 4096
    goto :goto_3

    .line 4083
    .end local v6    # "tr":Lcom/android/server/am/TaskRecord;
    .restart local v5    # "taskIndex":I
    :cond_7
    const-string v7, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Task with inRecent not in recents: "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v7, v10}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v2, 0x1

    goto :goto_2

    .end local v5    # "taskIndex":I
    :cond_8
    iput-boolean v9, p1, Lcom/android/server/am/TaskRecord;->inRecents:Z

    if-eqz v1, :cond_9

    if-eqz v2, :cond_b

    :cond_9
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, v8, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    :cond_a
    :goto_4
    if-eqz v2, :cond_flyme_0

    iget v7, p1, Lcom/android/server/am/TaskRecord;->userId:I

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->cleanupRecentTasksLocked(I)V

    goto/16 :goto_1

    :cond_b
    if-eqz v1, :cond_a

    iget-object v3, p1, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    .local v3, "other":Lcom/android/server/am/TaskRecord;
    if-nez v3, :cond_c

    iget-object v3, p1, Lcom/android/server/am/TaskRecord;->mPrevAffiliate:Lcom/android/server/am/TaskRecord;

    :cond_c
    if-eqz v3, :cond_f

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, v3}, Ljava/util/ArrayList;->indexOf(Ljava/lang/Object;)I

    move-result v4

    .local v4, "otherIndex":I
    if-ltz v4, :cond_e

    iget-object v7, p1, Lcom/android/server/am/TaskRecord;->mNextAffiliate:Lcom/android/server/am/TaskRecord;

    if-ne v3, v7, :cond_d

    add-int/lit8 v5, v4, 0x1

    .restart local v5    # "taskIndex":I
    :goto_5
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v7, v5, p1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    invoke-direct {p0, p1, v5}, Lcom/android/server/am/ActivityManagerService;->moveAffiliatedTasksToFront(Lcom/android/server/am/TaskRecord;I)Z

    move-result v7

    if-nez v7, :cond_flyme_0

    const/4 v2, 0x1

    goto :goto_4

    .end local v5    # "taskIndex":I
    :cond_d
    move v5, v4

    .restart local v5    # "taskIndex":I
    goto :goto_5

    .line 4139
    .end local v5    # "taskIndex":I
    :cond_e
    const/4 v2, 0x1

    goto :goto_4

    .line 4144
    .end local v4    # "otherIndex":I
    :cond_f
    const/4 v2, 0x1

    goto :goto_4

    :cond_flyme_0
    invoke-static/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->flymeBroadcaseRecentTasksChanged(Lcom/android/server/am/ActivityManagerService;)V

    return-void
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 2
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 4679
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V

    .line 4680
    return-void
.end method

.method final appDiedLocked(Lcom/android/server/am/ProcessRecord;ILandroid/app/IApplicationThread;)V
    .locals 12
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "pid"    # I
    .param p3, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    const/16 v11, 0x753b

    const/4 v10, 0x3

    const/4 v9, 0x2

    const/4 v5, 0x0

    const/4 v4, 0x1

    .line 4684
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v6

    .line 4685
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v7, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 4686
    .local v0, "curProc":Lcom/android/server/am/ProcessRecord;
    if-eq v0, p1, :cond_1

    .line 4687
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Spurious death for "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, ", curProc for "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v7, ": "

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4688
    monitor-exit v6

    .line 4739
    :cond_0
    :goto_0
    return-void

    .line 4690
    :cond_1
    monitor-exit v6
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4692
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v3

    .line 4693
    .local v3, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v3

    .line 4694
    :try_start_1
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v3, v6, p2}, Lcom/android/internal/os/BatteryStatsImpl;->noteProcessDiedLocked(II)V

    .line 4695
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 4697
    iget-boolean v6, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-nez v6, :cond_2

    .line 4698
    invoke-static {p2}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 4699
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v6, p2}, Landroid/os/Process;->killProcessGroup(II)I

    .line 4700
    iput-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    .line 4704
    :cond_2
    iget v6, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v6, p2, :cond_6

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_6

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v6}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v6

    invoke-interface {p3}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v7

    if-ne v6, v7, :cond_6

    .line 4706
    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v6, :cond_4

    move v1, v4

    .line 4707
    .local v1, "doLowMem":Z
    :goto_1
    move v2, v1

    .line 4708
    .local v2, "doOomAdj":Z
    iget-boolean v6, p1, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v6, :cond_5

    .line 4709
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Process "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " (pid "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, ") has died"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4711
    iput-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 4718
    :goto_2
    new-array v6, v10, [Ljava/lang/Object;

    iget v7, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v5

    iget v7, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v4

    iget-object v7, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v7, v6, v9

    invoke-static {v11, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4722
    invoke-direct {p0, p1, v5, v4}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 4724
    if-eqz v2, :cond_3

    .line 4725
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 4727
    :cond_3
    if-eqz v1, :cond_0

    .line 4728
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    goto/16 :goto_0

    .line 4690
    .end local v0    # "curProc":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "doLowMem":Z
    .end local v2    # "doOomAdj":Z
    .end local v3    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_0
    move-exception v4

    :try_start_2
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 4695
    .restart local v0    # "curProc":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_1
    move-exception v4

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v4

    :cond_4
    move v1, v5

    .line 4706
    goto :goto_1

    .line 4715
    .restart local v1    # "doLowMem":Z
    .restart local v2    # "doOomAdj":Z
    :cond_5
    iput-boolean v5, p0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 4716
    const/4 v1, 0x0

    goto :goto_2

    .line 4730
    .end local v1    # "doLowMem":Z
    .end local v2    # "doOomAdj":Z
    :cond_6
    iget v6, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v6, p2, :cond_0

    .line 4732
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Process "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v8, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " (pid "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, ") has died and restarted (pid "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, ")."

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4734
    new-array v6, v10, [Ljava/lang/Object;

    iget v7, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v5

    iget v5, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v6, v4

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v4, v6, v9

    invoke-static {v11, v6}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    goto/16 :goto_0
.end method

.method final appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V
    .locals 27
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p4, "aboveSystem"    # Z
    .param p5, "annotation"    # Ljava/lang/String;

    .prologue
    .line 4934
    new-instance v15, Ljava/util/ArrayList;

    const/4 v2, 0x5

    invoke-direct {v15, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 4935
    .local v15, "firstPids":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljava/lang/Integer;>;"
    new-instance v18, Landroid/util/SparseArray;

    const/16 v2, 0x14

    move-object/from16 v0, v18

    invoke-direct {v0, v2}, Landroid/util/SparseArray;-><init>(I)V

    .line 4937
    .local v18, "lastPids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Boolean;>;"
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_0

    .line 4940
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, p5

    invoke-interface {v2, v3, v4, v0}, Landroid/app/IActivityController;->appEarlyNotResponding(Ljava/lang/String;ILjava/lang/String;)I

    move-result v25

    .line 4941
    .local v25, "res":I
    if-gez v25, :cond_0

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_0

    .line 4942
    const-string v2, "anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 4950
    .end local v25    # "res":I
    :cond_0
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    .line 4952
    .local v12, "anrTime":J
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 4955
    monitor-enter p0

    .line 4957
    :try_start_1
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-eqz v2, :cond_1

    .line 4958
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "During shutdown skipping ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4959
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5093
    :goto_1
    return-void

    .line 4944
    .end local v12    # "anrTime":J
    :catch_0
    move-exception v14

    .line 4945
    .local v14, "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 4946
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    goto :goto_0

    .line 4960
    .end local v14    # "e":Landroid/os/RemoteException;
    .restart local v12    # "anrTime":J
    :cond_1
    :try_start_2
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v2, :cond_2

    .line 4961
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Skipping duplicate ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4962
    monitor-exit p0

    goto :goto_1

    .line 4998
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 4963
    :cond_2
    :try_start_3
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-eqz v2, :cond_3

    .line 4964
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Crashing app skipping ANR: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p5

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4965
    monitor-exit p0

    goto :goto_1

    .line 4970
    :cond_3
    const/4 v2, 0x1

    move-object/from16 v0, p1

    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 4973
    const/16 v2, 0x7538

    const/4 v3, 0x5

    new-array v3, v3, [Ljava/lang/Object;

    const/4 v4, 0x0

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->userId:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v3, v4

    const/4 v4, 0x1

    move-object/from16 v0, p1

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v3, v4

    const/4 v4, 0x2

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aput-object v5, v3, v4

    const/4 v4, 0x3

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v5, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    aput-object v5, v3, v4

    const/4 v4, 0x4

    aput-object p5, v3, v4

    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 4977
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4979
    move-object/from16 v0, p1

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v21, v0

    .line 4980
    .local v21, "parentPid":I
    if-eqz p3, :cond_4

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_4

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v2, :cond_4

    move-object/from16 v0, p3

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v0, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v21, v0

    .line 4981
    :cond_4
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, v21

    if-eq v0, v2, :cond_5

    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4983
    :cond_5
    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eq v2, v3, :cond_6

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, v21

    if-eq v2, v0, :cond_6

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4985
    :cond_6
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v16, v2, -0x1

    .local v16, "i":I
    :goto_2
    if-ltz v16, :cond_9

    .line 4986
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v16

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v24

    check-cast v24, Lcom/android/server/am/ProcessRecord;

    .line 4987
    .local v24, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v24, :cond_7

    move-object/from16 v0, v24

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_7

    .line 4988
    move-object/from16 v0, v24

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v22, v0

    .line 4989
    .local v22, "pid":I
    if-lez v22, :cond_7

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v0, v22

    if-eq v0, v2, :cond_7

    move/from16 v0, v22

    move/from16 v1, v21

    if-eq v0, v1, :cond_7

    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    move/from16 v0, v22

    if-eq v0, v2, :cond_7

    .line 4990
    move-object/from16 v0, v24

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_8

    .line 4991
    invoke-static/range {v22 .. v22}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-virtual {v15, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4985
    .end local v22    # "pid":I
    :cond_7
    :goto_3
    add-int/lit8 v16, v16, -0x1

    goto :goto_2

    .line 4993
    .restart local v22    # "pid":I
    :cond_8
    sget-object v2, Ljava/lang/Boolean;->TRUE:Ljava/lang/Boolean;

    move-object/from16 v0, v18

    move/from16 v1, v22

    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    goto :goto_3

    .line 4998
    .end local v22    # "pid":I
    .end local v24    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_9
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 5001
    new-instance v17, Ljava/lang/StringBuilder;

    invoke-direct/range {v17 .. v17}, Ljava/lang/StringBuilder;-><init>()V

    .line 5002
    .local v17, "info":Ljava/lang/StringBuilder;
    const/4 v2, 0x0

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 5003
    const-string v2, "ANR in "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5004
    if-eqz p2, :cond_a

    move-object/from16 v0, p2

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    if-eqz v2, :cond_a

    .line 5005
    const-string v2, " ("

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p2

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5007
    :cond_a
    const-string v2, "\n"

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5008
    const-string v2, "PID: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p1

    iget v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5009
    if-eqz p5, :cond_b

    .line 5010
    const-string v2, "Reason: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5012
    :cond_b
    if-eqz p3, :cond_c

    move-object/from16 v0, p3

    move-object/from16 v1, p2

    if-eq v0, v1, :cond_c

    .line 5013
    const-string v2, "Parent: "

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p3

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5016
    :cond_c
    new-instance v23, Lcom/android/internal/os/ProcessCpuTracker;

    const/4 v2, 0x1

    move-object/from16 v0, v23

    invoke-direct {v0, v2}, Lcom/android/internal/os/ProcessCpuTracker;-><init>(Z)V

    .line 5018
    .local v23, "processCpuTracker":Lcom/android/internal/os/ProcessCpuTracker;
    const/4 v2, 0x1

    sget-object v3, Lcom/android/server/Watchdog;->NATIVE_STACKS_OF_INTEREST:[Ljava/lang/String;

    move-object/from16 v0, v23

    move-object/from16 v1, v18

    invoke-static {v2, v15, v0, v1, v3}, Lcom/android/server/am/ActivityManagerService;->dumpStackTraces(ZLjava/util/ArrayList;Lcom/android/internal/os/ProcessCpuTracker;Landroid/util/SparseArray;[Ljava/lang/String;)Ljava/io/File;

    move-result-object v10

    .line 5021
    .local v10, "tracesFile":Ljava/io/File;
    const/4 v9, 0x0

    .line 5023
    .local v9, "cpuInfo":Ljava/lang/String;
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 5024
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v3

    .line 5025
    :try_start_4
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v2, v12, v13}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentState(J)Ljava/lang/String;

    move-result-object v9

    .line 5026
    monitor-exit v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 5027
    invoke-virtual/range {v23 .. v23}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentLoad()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5028
    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5031
    move-object/from16 v0, v23

    invoke-virtual {v0, v12, v13}, Lcom/android/internal/os/ProcessCpuTracker;->printCurrentState(J)Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, v17

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 5033
    const-string v2, "ActivityManager"

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 5034
    if-nez v10, :cond_d

    .line 5036
    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/4 v3, 0x3

    invoke-static {v2, v3}, Landroid/os/Process;->sendSignal(II)V

    .line 5039
    :cond_d
    const-string v3, "anr"

    move-object/from16 v0, p1

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    const/4 v11, 0x0

    move-object/from16 v2, p0

    move-object/from16 v4, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move-object/from16 v8, p5

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 5042
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_e

    .line 5045
    :try_start_5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v2, v3, v4, v5}, Landroid/app/IActivityController;->appNotResponding(Ljava/lang/String;ILjava/lang/String;)I

    move-result v25

    .line 5046
    .restart local v25    # "res":I
    if-eqz v25, :cond_e

    .line 5047
    if-gez v25, :cond_f

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_f

    .line 5048
    const-string v2, "anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_1

    goto/16 :goto_1

    .line 5056
    .end local v25    # "res":I
    :catch_1
    move-exception v14

    .line 5057
    .restart local v14    # "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 5058
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    .line 5063
    .end local v14    # "e":Landroid/os/RemoteException;
    :cond_e
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v2

    const-string v3, "anr_show_background"

    const/4 v4, 0x0

    invoke-static {v2, v3, v4}, Landroid/provider/Settings$Secure;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_10

    const/16 v26, 0x1

    .line 5066
    .local v26, "showBackground":Z
    :goto_4
    monitor-enter p0

    .line 5067
    :try_start_6
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v0, p1

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteProcessAnr(Ljava/lang/String;I)V

    .line 5069
    if-nez v26, :cond_11

    invoke-virtual/range {p1 .. p1}, Lcom/android/server/am/ProcessRecord;->isInterestingToUserLocked()Z

    move-result v2

    if-nez v2, :cond_11

    move-object/from16 v0, p1

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v3, :cond_11

    .line 5070
    const-string v2, "bg anr"

    const/4 v3, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 5071
    monitor-exit p0

    goto/16 :goto_1

    .line 5092
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    throw v2

    .line 5026
    .end local v26    # "showBackground":Z
    :catchall_2
    move-exception v2

    :try_start_7
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    throw v2

    .line 5050
    .restart local v25    # "res":I
    :cond_f
    :try_start_8
    monitor-enter p0
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1

    .line 5051
    :try_start_9
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActiveServices;->scheduleServiceTimeoutLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5052
    monitor-exit p0

    goto/16 :goto_1

    :catchall_3
    move-exception v2

    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    :try_start_a
    throw v2
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_1

    .line 5063
    .end local v25    # "res":I
    :cond_10
    const/16 v26, 0x0

    goto :goto_4

    .line 5075
    .restart local v26    # "showBackground":Z
    :cond_11
    if-eqz p2, :cond_13

    :try_start_b
    move-object/from16 v0, p2

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    move-object v3, v2

    :goto_5
    if-eqz p5, :cond_14

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "ANR "

    invoke-virtual {v2, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    :goto_6
    invoke-virtual/range {v17 .. v17}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    invoke-direct {v0, v1, v3, v2, v4}, Lcom/android/server/am/ActivityManagerService;->makeAppNotRespondingLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V

    .line 5081
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v20

    .line 5082
    .local v20, "msg":Landroid/os/Message;
    new-instance v19, Ljava/util/HashMap;

    invoke-direct/range {v19 .. v19}, Ljava/util/HashMap;-><init>()V

    .line 5083
    .local v19, "map":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    const/4 v2, 0x2

    move-object/from16 v0, v20

    iput v2, v0, Landroid/os/Message;->what:I

    .line 5084
    move-object/from16 v0, v19

    move-object/from16 v1, v20

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 5085
    if-eqz p4, :cond_15

    const/4 v2, 0x1

    :goto_7
    move-object/from16 v0, v20

    iput v2, v0, Landroid/os/Message;->arg1:I

    .line 5086
    const-string v2, "app"

    move-object/from16 v0, v19

    move-object/from16 v1, p1

    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5087
    if-eqz p2, :cond_12

    .line 5088
    const-string v2, "activity"

    move-object/from16 v0, v19

    move-object/from16 v1, p2

    invoke-virtual {v0, v2, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5091
    :cond_12
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v20

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 5092
    monitor-exit p0

    goto/16 :goto_1

    .line 5075
    .end local v19    # "map":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    .end local v20    # "msg":Landroid/os/Message;
    :cond_13
    const/4 v2, 0x0

    move-object v3, v2

    goto :goto_5

    :cond_14
    const-string v2, "ANR"
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_1

    goto :goto_6

    .line 5085
    .restart local v19    # "map":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    .restart local v20    # "msg":Landroid/os/Message;
    :cond_15
    const/4 v2, 0x0

    goto :goto_7
.end method

.method public appNotRespondingViaProvider(Landroid/os/IBinder;)V
    .locals 10
    .param p1, "connection"    # Landroid/os/IBinder;

    .prologue
    .line 9760
    const-string v0, "android.permission.REMOVE_TASKS"

    const-string v2, "appNotRespondingViaProvider()"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    move-object v6, p1

    .line 9763
    check-cast v6, Lcom/android/server/am/ContentProviderConnection;

    .line 9764
    .local v6, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v6, :cond_0

    .line 9765
    const-string v0, "ActivityManager"

    const-string v2, "ContentProviderConnection is null"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9781
    :goto_0
    return-void

    .line 9769
    :cond_0
    iget-object v0, v6, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v1, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 9770
    .local v1, "host":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_1

    .line 9771
    const-string v0, "ActivityManager"

    const-string v2, "Failed to find hosting ProcessRecord"

    invoke-static {v0, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 9775
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 9777
    .local v8, "token":J
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    :try_start_0
    const-string v5, "ContentProvider not responding"

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->appNotResponding(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9779
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    :catchall_0
    move-exception v0

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method final applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 6
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 2427
    if-eqz p1, :cond_0

    iget-boolean v3, p1, Lcom/android/server/am/ActivityRecord;->immersive:Z

    if-eqz v3, :cond_0

    move v0, v1

    .line 2428
    .local v0, "nextState":Z
    :goto_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x25

    if-eqz v0, :cond_1

    :goto_1
    invoke-virtual {v4, v5, v1, v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v3, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 2430
    return-void

    .end local v0    # "nextState":Z
    :cond_0
    move v0, v2

    .line 2427
    goto :goto_0

    .restart local v0    # "nextState":Z
    :cond_1
    move v1, v2

    .line 2428
    goto :goto_1
.end method

.method public final attachApplication(Landroid/app/IApplicationThread;)V
    .locals 4
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    .line 6085
    monitor-enter p0

    .line 6086
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 6087
    .local v0, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 6088
    .local v2, "origId":J
    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->attachApplicationLocked(Landroid/app/IApplicationThread;I)Z

    .line 6089
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6090
    monitor-exit p0

    .line 6091
    return-void

    .line 6090
    .end local v0    # "callingPid":I
    .end local v2    # "origId":J
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public final backgroundResourcesReleased(Landroid/os/IBinder;)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6359
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6361
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6362
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 6363
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v2, :cond_0

    .line 6364
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->backgroundResourcesReleased()V

    .line 6366
    :cond_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6368
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6370
    return-void

    .line 6366
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 6368
    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method backgroundServicesFinishedLocked(I)V
    .locals 4
    .param p1, "userId"    # I

    .prologue
    .line 16414
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_0

    aget-object v3, v0, v1

    .line 16415
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->backgroundServicesFinishedLocked(I)V

    .line 16414
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 16417
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method public backupAgentCreated(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 7
    .param p1, "agentPackageName"    # Ljava/lang/String;
    .param p2, "agent"    # Landroid/os/IBinder;

    .prologue
    .line 15465
    monitor-enter p0

    .line 15466
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    invoke-virtual {p1, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_0

    .line 15467
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Backup agent created for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " but not requested!"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 15468
    monitor-exit p0

    .line 15485
    :goto_0
    return-void

    .line 15470
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 15472
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 15474
    .local v2, "oldIdent":J
    :try_start_1
    const-string v4, "backup"

    invoke-static {v4}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v4

    invoke-static {v4}, Landroid/app/backup/IBackupManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/app/backup/IBackupManager;

    move-result-object v0

    .line 15476
    .local v0, "bm":Landroid/app/backup/IBackupManager;
    invoke-interface {v0, p1, p2}, Landroid/app/backup/IBackupManager;->agentConnected(Ljava/lang/String;Landroid/os/IBinder;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 15483
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 15470
    .end local v0    # "bm":Landroid/app/backup/IBackupManager;
    .end local v2    # "oldIdent":J
    :catchall_0
    move-exception v4

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 15477
    .restart local v2    # "oldIdent":J
    :catch_0
    move-exception v4

    .line 15483
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 15479
    :catch_1
    move-exception v1

    .line 15480
    .local v1, "e":Ljava/lang/Exception;
    :try_start_3
    const-string v4, "ActivityManager"

    const-string v5, "Exception trying to deliver BackupAgent binding: "

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15481
    invoke-virtual {v1}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 15483
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .end local v1    # "e":Ljava/lang/Exception;
    :catchall_1
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public batteryNeedsCpuUpdate()V
    .locals 0

    .prologue
    .line 2325
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 2326
    return-void
.end method

.method public batteryPowerChanged(Z)V
    .locals 2
    .param p1, "onBattery"    # Z

    .prologue
    .line 2332
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 2333
    monitor-enter p0

    .line 2334
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 2335
    :try_start_1
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    .line 2336
    monitor-exit v1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 2337
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 2338
    return-void

    .line 2336
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v1
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v0

    .line 2337
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0
.end method

.method public bindBackupAgent(Landroid/content/pm/ApplicationInfo;I)Z
    .locals 17
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "backupMode"    # I

    .prologue
    .line 15388
    const-string v2, "android.permission.CONFIRM_FULL_BACKUP"

    const-string v3, "bindBackupAgent"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15390
    monitor-enter p0

    .line 15392
    const/4 v15, 0x0

    .line 15393
    .local v15, "ss":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v2}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v16

    .line 15394
    .local v16, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v16
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 15395
    :try_start_1
    move-object/from16 v0, p1

    iget v2, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v16

    invoke-virtual {v0, v2, v3, v4}, Lcom/android/internal/os/BatteryStatsImpl;->getServiceStatsLocked(ILjava/lang/String;Ljava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;

    move-result-object v15

    .line 15396
    monitor-exit v16
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15400
    :try_start_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v4, 0x0

    move-object/from16 v0, p1

    iget v5, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v5}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    invoke-interface {v2, v3, v4, v5}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 15408
    :goto_0
    :try_start_3
    new-instance v14, Lcom/android/server/am/BackupRecord;

    move-object/from16 v0, p1

    move/from16 v1, p2

    invoke-direct {v14, v15, v0, v1}, Lcom/android/server/am/BackupRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg$Serv;Landroid/content/pm/ApplicationInfo;I)V

    .line 15409
    .local v14, "r":Lcom/android/server/am/BackupRecord;
    if-nez p2, :cond_0

    new-instance v8, Landroid/content/ComponentName;

    move-object/from16 v0, p1

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/pm/ApplicationInfo;->backupAgentName:Ljava/lang/String;

    invoke-direct {v8, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 15413
    .local v8, "hostingName":Landroid/content/ComponentName;
    :goto_1
    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const-string v7, "backup"

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    move-object/from16 v2, p0

    move-object/from16 v4, p1

    invoke-virtual/range {v2 .. v11}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v13

    .line 15415
    .local v13, "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v13, :cond_1

    .line 15416
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unable to start backup agent process "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v14}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 15417
    const/4 v2, 0x0

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 15446
    :goto_2
    return v2

    .line 15396
    .end local v8    # "hostingName":Landroid/content/ComponentName;
    .end local v13    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "r":Lcom/android/server/am/BackupRecord;
    :catchall_0
    move-exception v2

    :try_start_4
    monitor-exit v16
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v2

    .line 15444
    .end local v16    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v2

    .line 15403
    .restart local v16    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    :catch_0
    move-exception v12

    .line 15404
    .local v12, "e":Ljava/lang/IllegalArgumentException;
    :try_start_6
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Failed trying to unstop package "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, ": "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 15409
    .end local v12    # "e":Ljava/lang/IllegalArgumentException;
    .restart local v14    # "r":Lcom/android/server/am/BackupRecord;
    :cond_0
    new-instance v8, Landroid/content/ComponentName;

    const-string v2, "android"

    const-string v3, "FullBackupAgent"

    invoke-direct {v8, v2, v3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    goto :goto_1

    .line 15420
    .restart local v8    # "hostingName":Landroid/content/ComponentName;
    .restart local v13    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_1
    iput-object v13, v14, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .line 15421
    move-object/from16 v0, p0

    iput-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 15422
    move-object/from16 v0, p1

    iget-object v2, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 15425
    move-object/from16 v0, p0

    invoke-virtual {v0, v13}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    .line 15429
    iget-object v2, v13, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    if-eqz v2, :cond_2

    .line 15432
    :try_start_7
    iget-object v2, v13, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v3

    move-object/from16 v0, p1

    move/from16 v1, p2

    invoke-interface {v2, v0, v3, v1}, Landroid/app/IApplicationThread;->scheduleCreateBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;I)V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_1
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 15444
    :cond_2
    :goto_3
    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 15446
    const/4 v2, 0x1

    goto :goto_2

    .line 15434
    :catch_1
    move-exception v2

    goto :goto_3

    .line 15402
    .end local v8    # "hostingName":Landroid/content/ComponentName;
    .end local v13    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v14    # "r":Lcom/android/server/am/BackupRecord;
    :catch_2
    move-exception v2

    goto/16 :goto_0
.end method

.method public bindService(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;II)I
    .locals 8
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "service"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "connection"    # Landroid/app/IServiceConnection;
    .param p6, "flags"    # I
    .param p7, "userId"    # I

    .prologue
    .line 15325
    const-string v0, "bindService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15328
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 15329
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15332
    :cond_0
    monitor-enter p0

    .line 15333
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move-object v5, p5

    move v6, p6

    move v7, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActiveServices;->bindServiceLocked(Landroid/app/IApplicationThread;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/app/IServiceConnection;II)I

    move-result v0

    monitor-exit p0

    return v0

    .line 15335
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public bootAnimationComplete()V
    .locals 2

    .prologue
    .line 6259
    monitor-enter p0

    .line 6260
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 6261
    .local v0, "callFinishBooting":Z
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    .line 6262
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6263
    if-eqz v0, :cond_0

    .line 6264
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 6266
    :cond_0
    return-void

    .line 6262
    .end local v0    # "callFinishBooting":Z
    :catchall_0
    move-exception v1

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v1
.end method

.method public final broadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZI)I
    .locals 21
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p5, "resultCode"    # I
    .param p6, "resultData"    # Ljava/lang/String;
    .param p7, "map"    # Landroid/os/Bundle;
    .param p8, "requiredPermission"    # Ljava/lang/String;
    .param p9, "appOp"    # I
    .param p10, "serialized"    # Z
    .param p11, "sticky"    # Z
    .param p12, "userId"    # I

    .prologue
    .line 16326
    const-string v2, "broadcastIntent"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 16327
    monitor-enter p0

    .line 16328
    :try_start_0
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object p2

    .line 16330
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 16331
    .local v3, "callerApp":Lcom/android/server/am/ProcessRecord;
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v15

    .line 16332
    .local v15, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v16

    .line 16333
    .local v16, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v18

    .line 16334
    .local v18, "origId":J
    if-eqz v3, :cond_0

    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    :goto_0
    move-object/from16 v2, p0

    move-object/from16 v5, p2

    move-object/from16 v6, p3

    move-object/from16 v7, p4

    move/from16 v8, p5

    move-object/from16 v9, p6

    move-object/from16 v10, p7

    move-object/from16 v11, p8

    move/from16 v12, p9

    move/from16 v13, p10

    move/from16 v14, p11

    move/from16 v17, p12

    invoke-direct/range {v2 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    move-result v20

    .line 16339
    .local v20, "res":I
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16340
    monitor-exit p0

    return v20

    .line 16334
    .end local v20    # "res":I
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 16341
    .end local v3    # "callerApp":Lcom/android/server/am/ProcessRecord;
    .end local v15    # "callingPid":I
    .end local v16    # "callingUid":I
    .end local v18    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZI)I
    .locals 21
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "map"    # Landroid/os/Bundle;
    .param p9, "requiredPermission"    # Ljava/lang/String;
    .param p10, "serialized"    # Z
    .param p11, "sticky"    # Z
    .param p12, "userId"    # I

    .prologue
    .line 16348
    monitor-enter p0

    .line 16349
    :try_start_0
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;

    move-result-object p3

    .line 16351
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v18

    .line 16352
    .local v18, "origId":J
    const/4 v3, 0x0

    const/4 v12, -0x1

    const/4 v15, -0x1

    move-object/from16 v2, p0

    move-object/from16 v4, p1

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v7, p5

    move/from16 v8, p6

    move-object/from16 v9, p7

    move-object/from16 v10, p8

    move-object/from16 v11, p9

    move/from16 v13, p10

    move/from16 v14, p11

    move/from16 v16, p2

    move/from16 v17, p12

    invoke-direct/range {v2 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    move-result v20

    .line 16355
    .local v20, "res":I
    invoke-static/range {v18 .. v19}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16356
    monitor-exit p0

    return v20

    .line 16357
    .end local v18    # "origId":J
    .end local v20    # "res":I
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;
    .locals 3
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    .line 405
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v2, 0x10000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_0

    const/4 v0, 0x1

    .line 411
    .local v0, "isFg":Z
    :goto_0
    if-eqz v0, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    :goto_1
    return-object v1

    .line 405
    .end local v0    # "isFg":Z
    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .line 411
    .restart local v0    # "isFg":Z
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    goto :goto_1
.end method

.method broadcastRecordForReceiverLocked(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;
    .locals 5
    .param p1, "receiver"    # Landroid/os/IBinder;

    .prologue
    .line 415
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_1

    aget-object v3, v0, v1

    .line 416
    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->getMatchingOrderedReceiver(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v4

    .line 417
    .local v4, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v4, :cond_0

    .line 421
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v4    # "r":Lcom/android/server/am/BroadcastRecord;
    :goto_1
    return-object v4

    .line 415
    .restart local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    .restart local v4    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 421
    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v4    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_1
    const/4 v4, 0x0

    goto :goto_1
.end method

.method public cancelIntentSender(Landroid/content/IIntentSender;)V
    .locals 8
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .prologue
    .line 6567
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_0

    .line 6589
    :goto_0
    return-void

    .line 6570
    :cond_0
    monitor-enter p0

    .line 6571
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v3, v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6573
    .local v3, "rec":Lcom/android/server/am/PendingIntentRecord;
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    invoke-interface {v5, v6, v7}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v4

    .line 6575
    .local v4, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    invoke-static {v4, v5}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v5

    if-nez v5, :cond_1

    .line 6576
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: cancelIntentSender() from pid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ", uid="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " is not allowed to cancel packges "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v6, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    .line 6581
    .local v2, "msg":Ljava/lang/String;
    const-string v5, "ActivityManager"

    invoke-static {v5, v2}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6582
    new-instance v5, Ljava/lang/SecurityException;

    invoke-direct {v5, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v5
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6584
    .end local v2    # "msg":Ljava/lang/String;
    .end local v4    # "uid":I
    :catch_0
    move-exception v1

    .line 6585
    .local v1, "e":Landroid/os/RemoteException;
    :try_start_2
    new-instance v5, Ljava/lang/SecurityException;

    invoke-direct {v5, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v5

    .line 6588
    .end local v1    # "e":Landroid/os/RemoteException;
    .end local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v5

    .line 6587
    .restart local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .restart local v4    # "uid":I
    :cond_1
    const/4 v5, 0x1

    :try_start_3
    invoke-virtual {p0, v3, v5}, Lcom/android/server/am/ActivityManagerService;->cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V

    .line 6588
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0
.end method

.method cancelIntentSenderLocked(Lcom/android/server/am/PendingIntentRecord;Z)V
    .locals 2
    .param p1, "rec"    # Lcom/android/server/am/PendingIntentRecord;
    .param p2, "cleanActivity"    # Z

    .prologue
    .line 6592
    const/4 v0, 0x1

    iput-boolean v0, p1, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 6593
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6594
    if-eqz p2, :cond_0

    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    if-eqz v0, :cond_0

    .line 6595
    iget-object v0, p1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v0, v0, Lcom/android/server/am/PendingIntentRecord$Key;->activity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object v1, p1, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v0, v1}, Ljava/util/HashSet;->remove(Ljava/lang/Object;)Z

    .line 6597
    :cond_0
    return-void
.end method

.method checkAppInLaunchingProvidersLocked(Lcom/android/server/am/ProcessRecord;Z)Z
    .locals 5
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "alwaysBad"    # Z

    .prologue
    .line 15056
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 15057
    .local v0, "NL":I
    const/4 v3, 0x0

    .line 15058
    .local v3, "restart":Z
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_2

    .line 15059
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v4, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ContentProviderRecord;

    .line 15060
    .local v1, "cpr":Lcom/android/server/am/ContentProviderRecord;
    iget-object v4, v1, Lcom/android/server/am/ContentProviderRecord;->launchingApp:Lcom/android/server/am/ProcessRecord;

    if-ne v4, p1, :cond_0

    .line 15061
    if-nez p2, :cond_1

    iget-boolean v4, p1, Lcom/android/server/am/ProcessRecord;->bad:Z

    if-nez v4, :cond_1

    .line 15062
    const/4 v3, 0x1

    .line 15058
    :cond_0
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 15064
    :cond_1
    const/4 v4, 0x1

    invoke-direct {p0, p1, v1, v4}, Lcom/android/server/am/ActivityManagerService;->removeDyingProviderLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Z)Z

    .line 15066
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 15067
    add-int/lit8 v2, v2, -0x1

    goto :goto_1

    .line 15071
    .end local v1    # "cpr":Lcom/android/server/am/ContentProviderRecord;
    :cond_2
    return v3
.end method

.method checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z
    .locals 7
    .param p1, "sourcePid"    # I
    .param p2, "sourceUid"    # I
    .param p3, "callingPid"    # I
    .param p4, "callingUid"    # I
    .param p5, "name"    # Ljava/lang/String;

    .prologue
    const/4 v4, -0x1

    const/4 v5, 0x1

    .line 10203
    iget-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    cmp-long v0, v0, v2

    if-gez v0, :cond_1

    .line 10226
    :cond_0
    :goto_0
    return v5

    .line 10207
    :cond_1
    const-string v1, "android.permission.STOP_APP_SWITCHES"

    move-object v0, p0

    move v2, p1

    move v3, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v6

    .line 10210
    .local v6, "perm":I
    if-eqz v6, :cond_0

    .line 10216
    if-eq p4, v4, :cond_2

    if-eq p4, p2, :cond_2

    .line 10217
    const-string v1, "android.permission.STOP_APP_SWITCHES"

    move-object v0, p0

    move v2, p3

    move v3, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v6

    .line 10220
    if-eqz v6, :cond_0

    .line 10225
    :cond_2
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " request from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " stopped"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10226
    const/4 v5, 0x0

    goto :goto_0
.end method

.method checkAuthorityGrants(ILandroid/content/pm/ProviderInfo;IZ)Z
    .locals 4
    .param p1, "callingUid"    # I
    .param p2, "cpi"    # Landroid/content/pm/ProviderInfo;
    .param p3, "userId"    # I
    .param p4, "checkUser"    # Z

    .prologue
    .line 9055
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/ArrayMap;

    .line 9056
    .local v2, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v2, :cond_2

    .line 9057
    invoke-virtual {v2}, Landroid/util/ArrayMap;->size()I

    move-result v3

    add-int/lit8 v1, v3, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_2

    .line 9058
    invoke-virtual {v2, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$GrantUri;

    .line 9059
    .local v0, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    iget v3, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v3, p3, :cond_0

    if-nez p4, :cond_1

    .line 9060
    :cond_0
    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {p0, v3, p2}, Lcom/android/server/am/ActivityManagerService;->matchesProvider(Landroid/net/Uri;Landroid/content/pm/ProviderInfo;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 9061
    const/4 v3, 0x1

    .line 9066
    .end local v0    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v1    # "i":I
    :goto_1
    return v3

    .line 9057
    .restart local v0    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .restart local v1    # "i":I
    :cond_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 9066
    .end local v0    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v1    # "i":I
    :cond_2
    const/4 v3, 0x0

    goto :goto_1
.end method

.method checkCallingPermission(Ljava/lang/String;)I
    .locals 2
    .param p1, "permission"    # Ljava/lang/String;

    .prologue
    .line 6879
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    invoke-virtual {p0, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkPermission(Ljava/lang/String;II)I

    move-result v0

    return v0
.end method

.method checkComponentPermission(Ljava/lang/String;IIIZ)I
    .locals 1
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "owningUid"    # I
    .param p5, "exported"    # Z

    .prologue
    .line 6830
    sget v0, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p2, v0, :cond_0

    .line 6831
    const/4 v0, 0x0

    .line 6833
    :goto_0
    return v0

    :cond_0
    invoke-static {p1, p3, p4, p5}, Landroid/app/ActivityManager;->checkComponentPermission(Ljava/lang/String;IIZ)I

    move-result v0

    goto :goto_0
.end method

.method final checkExcessivePowerUsageLocked(Z)V
    .locals 28
    .param p1, "doKills"    # Z

    .prologue
    .line 17790
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 17792
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v5

    .line 17793
    .local v5, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    move/from16 v24, p1

    .line 17794
    .local v24, "doWakeKills":Z
    move/from16 v12, p1

    .line 17795
    .local v12, "doCpuKills":Z
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    const-wide/16 v14, 0x0

    cmp-long v6, v6, v14

    if-nez v6, :cond_0

    .line 17796
    const/16 v24, 0x0

    .line 17798
    :cond_0
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    const-wide/16 v14, 0x0

    cmp-long v6, v6, v14

    if-nez v6, :cond_1

    .line 17799
    const/4 v12, 0x0

    .line 17801
    :cond_1
    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl;->isScreenOn()Z

    move-result v6

    if-eqz v6, :cond_2

    .line 17802
    const/16 v24, 0x0

    .line 17804
    :cond_2
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v20

    .line 17805
    .local v20, "curRealtime":J
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    sub-long v8, v20, v6

    .line 17806
    .local v8, "realtimeSince":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v22

    .line 17807
    .local v22, "curUptime":J
    move-object/from16 v0, p0

    iget-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    sub-long v16, v22, v6

    .line 17808
    .local v16, "uptimeSince":J
    move-wide/from16 v0, v20

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    .line 17809
    move-wide/from16 v0, v22

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    .line 17810
    const-wide/32 v6, 0x493e0

    cmp-long v6, v8, v6

    if-gez v6, :cond_3

    .line 17811
    const/16 v24, 0x0

    .line 17813
    :cond_3
    const-wide/32 v6, 0x493e0

    cmp-long v6, v16, v6

    if-gez v6, :cond_4

    .line 17814
    const/4 v12, 0x0

    .line 17816
    :cond_4
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v25

    .line 17817
    .local v25, "i":I
    :cond_5
    :goto_0
    if-lez v25, :cond_8

    .line 17818
    add-int/lit8 v25, v25, -0x1

    .line 17819
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v25

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 17820
    .local v4, "app":Lcom/android/server/am/ProcessRecord;
    iget v6, v4, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v7, 0x9

    if-lt v6, v7, :cond_5

    .line 17822
    monitor-enter v5

    .line 17823
    :try_start_0
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v7, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    move-wide/from16 v0, v20

    invoke-virtual {v5, v6, v7, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessWakeTime(IIJ)J

    move-result-wide v26

    .line 17825
    .local v26, "wtime":J
    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 17826
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    sub-long v10, v26, v6

    .line 17827
    .local v10, "wtimeUsed":J
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iget-wide v14, v4, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    sub-long v18, v6, v14

    .line 17855
    .local v18, "cputimeUsed":J
    if-eqz v24, :cond_6

    const-wide/16 v6, 0x0

    cmp-long v6, v8, v6

    if-lez v6, :cond_6

    const-wide/16 v6, 0x64

    mul-long/2addr v6, v10

    div-long/2addr v6, v8

    const-wide/16 v14, 0x32

    cmp-long v6, v6, v14

    if-ltz v6, :cond_6

    .line 17857
    monitor-enter v5

    .line 17858
    :try_start_1
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual/range {v5 .. v11}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveWakeLocked(ILjava/lang/String;JJ)V

    .line 17860
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 17861
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "excessive wake held "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " during "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x1

    invoke-virtual {v4, v6, v7}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 17862
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportExcessiveWake(Landroid/util/ArrayMap;)V

    goto :goto_0

    .line 17825
    .end local v10    # "wtimeUsed":J
    .end local v18    # "cputimeUsed":J
    .end local v26    # "wtime":J
    :catchall_0
    move-exception v6

    :try_start_2
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v6

    .line 17860
    .restart local v10    # "wtimeUsed":J
    .restart local v18    # "cputimeUsed":J
    .restart local v26    # "wtime":J
    :catchall_1
    move-exception v6

    :try_start_3
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v6

    .line 17863
    :cond_6
    if-eqz v12, :cond_7

    const-wide/16 v6, 0x0

    cmp-long v6, v16, v6

    if-lez v6, :cond_7

    const-wide/16 v6, 0x64

    mul-long v6, v6, v18

    div-long v6, v6, v16

    const-wide/16 v14, 0x19

    cmp-long v6, v6, v14

    if-ltz v6, :cond_7

    .line 17865
    monitor-enter v5

    .line 17866
    :try_start_4
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v14, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v15, v4, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object v13, v5

    invoke-virtual/range {v13 .. v19}, Lcom/android/internal/os/BatteryStatsImpl;->reportExcessiveCpuLocked(ILjava/lang/String;JJ)V

    .line 17868
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 17869
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "excessive cpu "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-wide/from16 v0, v18

    invoke-virtual {v6, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " during "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-wide/from16 v0, v16

    invoke-virtual {v6, v0, v1}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    const/4 v7, 0x1

    invoke-virtual {v4, v6, v7}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 17870
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v7, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportExcessiveCpu(Landroid/util/ArrayMap;)V

    goto/16 :goto_0

    .line 17868
    :catchall_2
    move-exception v6

    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v6

    .line 17872
    :cond_7
    move-wide/from16 v0, v26

    iput-wide v0, v4, Lcom/android/server/am/ProcessRecord;->lastWakeTime:J

    .line 17873
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    iput-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastCpuTime:J

    goto/16 :goto_0

    .line 17877
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v10    # "wtimeUsed":J
    .end local v18    # "cputimeUsed":J
    .end local v26    # "wtime":J
    :cond_8
    return-void
.end method

.method public checkGrantUriPermission(ILjava/lang/String;Landroid/net/Uri;II)I
    .locals 6
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "uri"    # Landroid/net/Uri;
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I

    .prologue
    .line 7236
    const-string v0, "checkGrantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7237
    monitor-enter p0

    .line 7238
    :try_start_0
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p5, p3, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    const/4 v5, -0x1

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move v4, p4

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v0

    monitor-exit p0

    return v0

    .line 7240
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .locals 24
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "mode"    # I
    .param p5, "needed"    # Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .param p6, "targetUserId"    # I

    .prologue
    .line 7317
    if-nez p2, :cond_0

    .line 7318
    new-instance v3, Ljava/lang/NullPointerException;

    const-string v4, "targetPkg"

    invoke-direct {v3, v4}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 7321
    :cond_0
    if-nez p3, :cond_1

    .line 7322
    const/4 v3, 0x0

    .line 7389
    :goto_0
    return-object v3

    .line 7324
    :cond_1
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v18

    .line 7325
    .local v18, "data":Landroid/net/Uri;
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getClipData()Landroid/content/ClipData;

    move-result-object v16

    .line 7326
    .local v16, "clip":Landroid/content/ClipData;
    if-nez v18, :cond_2

    if-nez v16, :cond_2

    .line 7327
    const/4 v3, 0x0

    goto :goto_0

    .line 7330
    :cond_2
    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->getContentUserHint()I

    move-result v17

    .line 7331
    .local v17, "contentUserHint":I
    const/4 v3, -0x2

    move/from16 v0, v17

    if-ne v0, v3, :cond_3

    .line 7332
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v17

    .line 7334
    :cond_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v22

    .line 7336
    .local v22, "pm":Landroid/content/pm/IPackageManager;
    if-eqz p5, :cond_9

    .line 7337
    move-object/from16 v0, p5

    iget v8, v0, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetUid:I

    .line 7352
    .local v8, "targetUid":I
    :cond_4
    if-eqz v18, :cond_6

    .line 7353
    invoke-static/range {v17 .. v18}, Lcom/android/server/am/ActivityManagerService$GrantUri;->resolve(ILandroid/net/Uri;)Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-result-object v6

    .local v6, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    move-object/from16 v3, p0

    move/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v7, p4

    .line 7354
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v8

    .line 7356
    if-lez v8, :cond_6

    .line 7357
    if-nez p5, :cond_5

    .line 7358
    new-instance p5, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    .end local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    move-object/from16 v0, p5

    move-object/from16 v1, p2

    move/from16 v2, p4

    invoke-direct {v0, v1, v8, v2}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;-><init>(Ljava/lang/String;II)V

    .line 7360
    .restart local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_5
    move-object/from16 v0, p5

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->add(Ljava/lang/Object;)Z

    .line 7363
    .end local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    :cond_6
    if-eqz v16, :cond_b

    .line 7364
    const/16 v20, 0x0

    .local v20, "i":I
    :goto_1
    invoke-virtual/range {v16 .. v16}, Landroid/content/ClipData;->getItemCount()I

    move-result v3

    move/from16 v0, v20

    if-ge v0, v3, :cond_b

    .line 7365
    move-object/from16 v0, v16

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/content/ClipData;->getItemAt(I)Landroid/content/ClipData$Item;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/ClipData$Item;->getUri()Landroid/net/Uri;

    move-result-object v23

    .line 7366
    .local v23, "uri":Landroid/net/Uri;
    if-eqz v23, :cond_a

    .line 7367
    move/from16 v0, v17

    move-object/from16 v1, v23

    invoke-static {v0, v1}, Lcom/android/server/am/ActivityManagerService$GrantUri;->resolve(ILandroid/net/Uri;)Lcom/android/server/am/ActivityManagerService$GrantUri;

    move-result-object v6

    .restart local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    move-object/from16 v3, p0

    move/from16 v4, p1

    move-object/from16 v5, p2

    move/from16 v7, p4

    .line 7368
    invoke-virtual/range {v3 .. v8}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v8

    .line 7370
    if-lez v8, :cond_8

    .line 7371
    if-nez p5, :cond_7

    .line 7372
    new-instance p5, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    .end local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    move-object/from16 v0, p5

    move-object/from16 v1, p2

    move/from16 v2, p4

    invoke-direct {v0, v1, v8, v2}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;-><init>(Ljava/lang/String;II)V

    .line 7374
    .restart local p5    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_7
    move-object/from16 v0, p5

    invoke-virtual {v0, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->add(Ljava/lang/Object;)Z

    .line 7364
    .end local v6    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    :cond_8
    :goto_2
    add-int/lit8 v20, v20, 0x1

    goto :goto_1

    .line 7340
    .end local v8    # "targetUid":I
    .end local v20    # "i":I
    .end local v23    # "uri":Landroid/net/Uri;
    :cond_9
    :try_start_0
    move-object/from16 v0, v22

    move-object/from16 v1, p2

    move/from16 v2, p6

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v8

    .line 7344
    .restart local v8    # "targetUid":I
    if-gez v8, :cond_4

    .line 7349
    const/4 v3, 0x0

    goto/16 :goto_0

    .line 7341
    .end local v8    # "targetUid":I
    :catch_0
    move-exception v19

    .line 7342
    .local v19, "ex":Landroid/os/RemoteException;
    const/4 v3, 0x0

    goto/16 :goto_0

    .line 7377
    .end local v19    # "ex":Landroid/os/RemoteException;
    .restart local v8    # "targetUid":I
    .restart local v20    # "i":I
    .restart local v23    # "uri":Landroid/net/Uri;
    :cond_a
    move-object/from16 v0, v16

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/content/ClipData;->getItemAt(I)Landroid/content/ClipData$Item;

    move-result-object v3

    invoke-virtual {v3}, Landroid/content/ClipData$Item;->getIntent()Landroid/content/Intent;

    move-result-object v12

    .line 7378
    .local v12, "clipIntent":Landroid/content/Intent;
    if-eqz v12, :cond_8

    move-object/from16 v9, p0

    move/from16 v10, p1

    move-object/from16 v11, p2

    move/from16 v13, p4

    move-object/from16 v14, p5

    move/from16 v15, p6

    .line 7379
    invoke-virtual/range {v9 .. v15}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    move-result-object v21

    .line 7381
    .local v21, "newNeeded":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    if-eqz v21, :cond_8

    .line 7382
    move-object/from16 p5, v21

    goto :goto_2

    .end local v12    # "clipIntent":Landroid/content/Intent;
    .end local v20    # "i":I
    .end local v21    # "newNeeded":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .end local v23    # "uri":Landroid/net/Uri;
    :cond_b
    move-object/from16 v3, p5

    .line 7389
    goto/16 :goto_0
.end method

.method checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I
    .locals 22
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "lastTargetUid"    # I

    .prologue
    .line 7112
    invoke-static/range {p4 .. p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v4

    if-nez v4, :cond_1

    .line 7113
    const/4 v8, -0x1

    .line 7226
    :cond_0
    :goto_0
    return v8

    .line 7116
    :cond_1
    if-eqz p2, :cond_2

    .line 7121
    :cond_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v5

    .line 7124
    .local v5, "pm":Landroid/content/pm/IPackageManager;
    const-string v4, "content"

    move-object/from16 v0, p3

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v7}, Landroid/net/Uri;->getScheme()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v4, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_3

    .line 7127
    const/4 v8, -0x1

    goto :goto_0

    .line 7130
    :cond_3
    move-object/from16 v0, p3

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v4}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v18

    .line 7131
    .local v18, "authority":Ljava/lang/String;
    move-object/from16 v0, p3

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v6

    .line 7132
    .local v6, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v6, :cond_4

    .line 7133
    const-string v4, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "No content provider found for permission check: "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    iget-object v9, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v9}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7135
    const/4 v8, -0x1

    goto :goto_0

    .line 7138
    :cond_4
    move/from16 v8, p5

    .line 7139
    .local v8, "targetUid":I
    if-gez v8, :cond_5

    if-eqz p2, :cond_5

    .line 7141
    :try_start_0
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-interface {v5, v0, v4}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v8

    .line 7142
    if-gez v8, :cond_5

    .line 7145
    const/4 v8, -0x1

    goto :goto_0

    .line 7147
    :catch_0
    move-exception v19

    .line 7148
    .local v19, "ex":Landroid/os/RemoteException;
    const/4 v8, -0x1

    goto :goto_0

    .line 7152
    .end local v19    # "ex":Landroid/os/RemoteException;
    :cond_5
    if-ltz v8, :cond_6

    move-object/from16 v4, p0

    move-object/from16 v7, p3

    move/from16 v9, p4

    .line 7154
    invoke-direct/range {v4 .. v9}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-eqz v4, :cond_9

    .line 7158
    const/4 v8, -0x1

    goto :goto_0

    .line 7162
    :cond_6
    iget-boolean v0, v6, Landroid/content/pm/ProviderInfo;->exported:Z

    move/from16 v17, v0

    .line 7163
    .local v17, "allowed":Z
    and-int/lit8 v4, p4, 0x1

    if-eqz v4, :cond_7

    .line 7164
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->readPermission:Ljava/lang/String;

    if-eqz v4, :cond_7

    .line 7165
    const/16 v17, 0x0

    .line 7168
    :cond_7
    and-int/lit8 v4, p4, 0x2

    if-eqz v4, :cond_8

    .line 7169
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->writePermission:Ljava/lang/String;

    if-eqz v4, :cond_8

    .line 7170
    const/16 v17, 0x0

    .line 7173
    :cond_8
    if-eqz v17, :cond_9

    .line 7174
    const/4 v8, -0x1

    goto/16 :goto_0

    .line 7184
    .end local v17    # "allowed":Z
    :cond_9
    invoke-static {v8}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move-object/from16 v0, p3

    iget v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    if-eq v4, v7, :cond_a

    const/4 v15, 0x0

    move-object/from16 v9, p0

    move-object v10, v5

    move-object v11, v6

    move-object/from16 v12, p3

    move/from16 v13, p1

    move/from16 v14, p4

    invoke-direct/range {v9 .. v15}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsInternalLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;IIZ)Z

    move-result v4

    if-eqz v4, :cond_a

    const/16 v21, 0x1

    .line 7189
    .local v21, "specialCrossUserGrant":Z
    :goto_1
    if-nez v21, :cond_e

    .line 7190
    iget-boolean v4, v6, Landroid/content/pm/ProviderInfo;->grantUriPermissions:Z

    if-nez v4, :cond_b

    .line 7191
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Provider "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, "/"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " does not allow granting of Uri permissions (uri "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, ")"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 7184
    .end local v21    # "specialCrossUserGrant":Z
    :cond_a
    const/16 v21, 0x0

    goto :goto_1

    .line 7196
    .restart local v21    # "specialCrossUserGrant":Z
    :cond_b
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    if-eqz v4, :cond_e

    .line 7197
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    array-length v0, v4

    move/from16 v16, v0

    .line 7198
    .local v16, "N":I
    const/16 v17, 0x0

    .line 7199
    .restart local v17    # "allowed":Z
    const/16 v20, 0x0

    .local v20, "i":I
    :goto_2
    move/from16 v0, v20

    move/from16 v1, v16

    if-ge v0, v1, :cond_c

    .line 7200
    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    aget-object v4, v4, v20

    if-eqz v4, :cond_d

    iget-object v4, v6, Landroid/content/pm/ProviderInfo;->uriPermissionPatterns:[Landroid/os/PatternMatcher;

    aget-object v4, v4, v20

    move-object/from16 v0, p3

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v7}, Landroid/net/Uri;->getPath()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v4, v7}, Landroid/os/PatternMatcher;->match(Ljava/lang/String;)Z

    move-result v4

    if-eqz v4, :cond_d

    .line 7202
    const/16 v17, 0x1

    .line 7206
    :cond_c
    if-nez v17, :cond_e

    .line 7207
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Provider "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, "/"

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v9, v6, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " does not allow granting of permission to path of Uri "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 7199
    :cond_d
    add-int/lit8 v20, v20, 0x1

    goto :goto_2

    .line 7217
    .end local v16    # "N":I
    .end local v17    # "allowed":Z
    .end local v20    # "i":I
    :cond_e
    invoke-static/range {p1 .. p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v4

    const/16 v7, 0x3e8

    if-eq v4, v7, :cond_0

    move-object/from16 v9, p0

    move-object v10, v5

    move-object v11, v6

    move-object/from16 v12, p3

    move/from16 v13, p1

    move/from16 v14, p4

    .line 7218
    invoke-direct/range {v9 .. v14}, Lcom/android/server/am/ActivityManagerService;->checkHoldingPermissionsLocked(Landroid/content/pm/IPackageManager;Landroid/content/pm/ProviderInfo;Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-nez v4, :cond_0

    .line 7220
    move-object/from16 v0, p0

    move-object/from16 v1, p3

    move/from16 v2, p1

    move/from16 v3, p4

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v4

    if-nez v4, :cond_0

    .line 7221
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Uid "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v9, " does not have permission to uri "

    invoke-virtual {v7, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p3

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4
.end method

.method public checkPermission(Ljava/lang/String;II)I
    .locals 6
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I

    .prologue
    const/4 v4, -0x1

    .line 6848
    if-nez p1, :cond_0

    .line 6851
    :goto_0
    return v4

    :cond_0
    invoke-static {p3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    goto :goto_0
.end method

.method public checkPermissionWithToken(Ljava/lang/String;IILandroid/os/IBinder;)I
    .locals 7
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "callerToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v4, -0x1

    .line 6856
    if-nez p1, :cond_0

    .line 6871
    :goto_0
    return v4

    .line 6863
    :cond_0
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 6864
    .local v6, "tlsIdentity":Lcom/android/server/am/ActivityManagerService$Identity;
    if-eqz v6, :cond_1

    iget-object v0, v6, Lcom/android/server/am/ActivityManagerService$Identity;->token:Landroid/os/IBinder;

    if-ne v0, p4, :cond_1

    .line 6865
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "checkComponentPermission() adjusting {pid,uid} to {"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ","

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "}"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    .line 6867
    iget p3, v6, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 6868
    iget p2, v6, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 6871
    :cond_1
    invoke-static {p3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/4 v5, 0x1

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    goto :goto_0
.end method

.method public checkUriPermission(Landroid/net/Uri;IIIILandroid/os/IBinder;)I
    .locals 4
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "pid"    # I
    .param p3, "uid"    # I
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I
    .param p6, "callerToken"    # Landroid/os/IBinder;

    .prologue
    const/4 v1, 0x0

    .line 7080
    const-string v2, "checkUriPermission"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7084
    sget-object v2, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v2}, Ljava/lang/ThreadLocal;->get()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Identity;

    .line 7085
    .local v0, "tlsIdentity":Lcom/android/server/am/ActivityManagerService$Identity;
    if-eqz v0, :cond_0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->token:Landroid/os/IBinder;

    if-ne v2, p6, :cond_0

    .line 7086
    iget p3, v0, Lcom/android/server/am/ActivityManagerService$Identity;->uid:I

    .line 7087
    iget p2, v0, Lcom/android/server/am/ActivityManagerService$Identity;->pid:I

    .line 7091
    :cond_0
    sget v2, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-ne p2, v2, :cond_1

    .line 7095
    :goto_0
    return v1

    .line 7094
    :cond_1
    monitor-enter p0

    .line 7095
    :try_start_0
    new-instance v2, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v3, 0x0

    invoke-direct {v2, p5, p1, v3}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->checkUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;II)Z

    move-result v2

    if-eqz v2, :cond_2

    :goto_1
    monitor-exit p0

    goto :goto_0

    .line 7098
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 7095
    :cond_2
    const/4 v1, -0x1

    goto :goto_1
.end method

.method cleanupRecentTasksLocked(I)V
    .locals 22
    .param p1, "userId"    # I

    .prologue
    .line 3816
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    if-nez v19, :cond_0

    .line 3927
    :goto_0
    return-void

    .line 3821
    :cond_0
    new-instance v7, Ljava/util/HashMap;

    invoke-direct {v7}, Ljava/util/HashMap;-><init>()V

    .line 3822
    .local v7, "availActCache":Ljava/util/HashMap;, "Ljava/util/HashMap<Landroid/content/ComponentName;Landroid/content/pm/ActivityInfo;>;"
    new-instance v8, Ljava/util/HashMap;

    invoke-direct {v8}, Ljava/util/HashMap;-><init>()V

    .line 3823
    .local v8, "availAppCache":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Landroid/content/pm/ApplicationInfo;>;"
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v15

    .line 3824
    .local v15, "pm":Landroid/content/pm/IPackageManager;
    new-instance v9, Landroid/content/pm/ActivityInfo;

    invoke-direct {v9}, Landroid/content/pm/ActivityInfo;-><init>()V

    .line 3825
    .local v9, "dummyAct":Landroid/content/pm/ActivityInfo;
    new-instance v10, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v10}, Landroid/content/pm/ApplicationInfo;-><init>()V

    .line 3827
    .local v10, "dummyApp":Landroid/content/pm/ApplicationInfo;
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 3829
    .local v3, "N":I
    const/16 v19, -0x1

    move/from16 v0, p1

    move/from16 v1, v19

    if-ne v0, v1, :cond_2

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUsersLocked()[I

    move-result-object v18

    .line 3831
    .local v18, "users":[I
    :goto_1
    move-object/from16 v6, v18

    .local v6, "arr$":[I
    array-length v14, v6

    .local v14, "len$":I
    const/4 v13, 0x0

    .local v13, "i$":I
    :goto_2
    if-ge v13, v14, :cond_12

    aget v17, v6, v13

    .line 3832
    .local v17, "user":I
    const/4 v12, 0x0

    .local v12, "i":I
    :goto_3
    if-ge v12, v3, :cond_11

    .line 3833
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v12}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/TaskRecord;

    .line 3834
    .local v16, "task":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, v16

    iget v0, v0, Lcom/android/server/am/TaskRecord;->userId:I

    move/from16 v19, v0

    move/from16 v0, v19

    move/from16 v1, v17

    if-eq v0, v1, :cond_3

    .line 3832
    :cond_1
    :goto_4
    add-int/lit8 v12, v12, 0x1

    goto :goto_3

    .line 3829
    .end local v6    # "arr$":[I
    .end local v12    # "i":I
    .end local v13    # "i$":I
    .end local v14    # "len$":I
    .end local v16    # "task":Lcom/android/server/am/TaskRecord;
    .end local v17    # "user":I
    .end local v18    # "users":[I
    :cond_2
    const/16 v19, 0x1

    move/from16 v0, v19

    new-array v0, v0, [I

    move-object/from16 v18, v0

    const/16 v19, 0x0

    aput p1, v18, v19

    goto :goto_1

    .line 3838
    .restart local v6    # "arr$":[I
    .restart local v12    # "i":I
    .restart local v13    # "i$":I
    .restart local v14    # "len$":I
    .restart local v16    # "task":Lcom/android/server/am/TaskRecord;
    .restart local v17    # "user":I
    .restart local v18    # "users":[I
    :cond_3
    move-object/from16 v0, v16

    iget-boolean v0, v0, Lcom/android/server/am/TaskRecord;->autoRemoveRecents:Z

    move/from16 v19, v0

    if-eqz v19, :cond_4

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v19

    if-nez v19, :cond_4

    .line 3840
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v12}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 3841
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 3842
    add-int/lit8 v12, v12, -0x1

    .line 3843
    add-int/lit8 v3, v3, -0x1

    .line 3844
    const-string v19, "ActivityManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "Removing auto-remove without activity: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 3848
    :cond_4
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    move-object/from16 v19, v0

    if-eqz v19, :cond_1

    .line 3849
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v7, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/pm/ActivityInfo;

    .line 3850
    .local v4, "ai":Landroid/content/pm/ActivityInfo;
    if-nez v4, :cond_6

    .line 3852
    :try_start_0
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    move-object/from16 v19, v0

    const/16 v20, 0x2200

    move-object/from16 v0, v19

    move/from16 v1, v20

    move/from16 v2, v17

    invoke-interface {v15, v0, v1, v2}, Landroid/content/pm/IPackageManager;->getActivityInfo(Landroid/content/ComponentName;II)Landroid/content/pm/ActivityInfo;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v4

    .line 3859
    if-nez v4, :cond_5

    .line 3860
    move-object v4, v9

    .line 3862
    :cond_5
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v7, v0, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3864
    :cond_6
    if-ne v4, v9, :cond_c

    .line 3868
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v19

    move-object/from16 v0, v19

    invoke-virtual {v8, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/ApplicationInfo;

    .line 3869
    .local v5, "app":Landroid/content/pm/ApplicationInfo;
    if-nez v5, :cond_8

    .line 3871
    :try_start_1
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v19

    const/16 v20, 0x2200

    move-object/from16 v0, v19

    move/from16 v1, v20

    move/from16 v2, v17

    invoke-interface {v15, v0, v1, v2}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    move-result-object v5

    .line 3878
    if-nez v5, :cond_7

    .line 3879
    move-object v5, v10

    .line 3881
    :cond_7
    move-object/from16 v0, v16

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v19

    move-object/from16 v0, v19

    invoke-virtual {v8, v0, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 3883
    :cond_8
    if-eq v5, v10, :cond_9

    iget v0, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    move/from16 v19, v0

    const/high16 v20, 0x800000

    and-int v19, v19, v20

    if-nez v19, :cond_a

    .line 3885
    :cond_9
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    invoke-virtual {v0, v12}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 3886
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    .line 3887
    add-int/lit8 v12, v12, -0x1

    .line 3888
    add-int/lit8 v3, v3, -0x1

    .line 3889
    const-string v19, "ActivityManager"

    new-instance v20, Ljava/lang/StringBuilder;

    invoke-direct/range {v20 .. v20}, Ljava/lang/StringBuilder;-><init>()V

    const-string v21, "Removing no longer valid recent: "

    invoke-virtual/range {v20 .. v21}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v20

    move-object/from16 v0, v20

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v20

    invoke-virtual/range {v20 .. v20}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    invoke-static/range {v19 .. v20}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto/16 :goto_4

    .line 3855
    .end local v5    # "app":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v11

    .line 3857
    .local v11, "e":Landroid/os/RemoteException;
    goto/16 :goto_4

    .line 3874
    .end local v11    # "e":Landroid/os/RemoteException;
    .restart local v5    # "app":Landroid/content/pm/ApplicationInfo;
    :catch_1
    move-exception v11

    .line 3876
    .restart local v11    # "e":Landroid/os/RemoteException;
    goto/16 :goto_4

    .line 3893
    .end local v11    # "e":Landroid/os/RemoteException;
    :cond_a
    move-object/from16 v0, v16

    iget-boolean v0, v0, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    move/from16 v19, v0

    if-eqz v19, :cond_b

    .line 3897
    :cond_b
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, v16

    iput-boolean v0, v1, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    goto/16 :goto_4

    .line 3900
    .end local v5    # "app":Landroid/content/pm/ApplicationInfo;
    :cond_c
    iget-boolean v0, v4, Landroid/content/pm/ActivityInfo;->enabled:Z

    move/from16 v19, v0

    if-eqz v19, :cond_d

    iget-object v0, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget-boolean v0, v0, Landroid/content/pm/ApplicationInfo;->enabled:Z

    move/from16 v19, v0

    if-eqz v19, :cond_d

    iget-object v0, v4, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v19, v0

    move-object/from16 v0, v19

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    move/from16 v19, v0

    const/high16 v20, 0x800000

    and-int v19, v19, v20

    if-nez v19, :cond_f

    .line 3902
    :cond_d
    move-object/from16 v0, v16

    iget-boolean v0, v0, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    move/from16 v19, v0

    if-eqz v19, :cond_e

    .line 3908
    :cond_e
    const/16 v19, 0x0

    move/from16 v0, v19

    move-object/from16 v1, v16

    iput-boolean v0, v1, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    goto/16 :goto_4

    .line 3910
    :cond_f
    move-object/from16 v0, v16

    iget-boolean v0, v0, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    move/from16 v19, v0

    if-nez v19, :cond_10

    .line 3914
    :cond_10
    const/16 v19, 0x1

    move/from16 v0, v19

    move-object/from16 v1, v16

    iput-boolean v0, v1, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    goto/16 :goto_4

    .line 3831
    .end local v4    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v16    # "task":Lcom/android/server/am/TaskRecord;
    :cond_11
    add-int/lit8 v13, v13, 0x1

    goto/16 :goto_2

    .line 3922
    .end local v12    # "i":I
    .end local v17    # "user":I
    :cond_12
    const/4 v12, 0x0

    .restart local v12    # "i":I
    :goto_5
    if-ge v12, v3, :cond_13

    move-object/from16 v0, p0

    invoke-direct {v0, v12}, Lcom/android/server/am/ActivityManagerService;->processNextAffiliateChainLocked(I)I

    move-result v12

    goto :goto_5

    .line 3925
    :cond_13
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mTmpRecents:Ljava/util/ArrayList;

    move-object/from16 v19, v0

    invoke-virtual/range {v19 .. v19}, Ljava/util/ArrayList;->clear()V

    goto/16 :goto_0
.end method

.method public clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)Z
    .locals 28
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "observer"    # Landroid/content/pm/IPackageDataObserver;
    .param p3, "userId"    # I

    .prologue
    .line 5122
    const-string v4, "clearApplicationUserData"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5123
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 5124
    .local v6, "uid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 5125
    .local v5, "pid":I
    const/4 v8, 0x0

    const/4 v9, 0x2

    const-string v10, "clearApplicationUserData"

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p3

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 5127
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20

    .line 5129
    .local v20, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v25

    .line 5130
    .local v25, "pm":Landroid/content/pm/IPackageManager;
    const/16 v24, -0x1

    .line 5131
    .local v24, "pkgUid":I
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5133
    :try_start_1
    move-object/from16 v0, v25

    move-object/from16 v1, p1

    move/from16 v2, p3

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_2
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v24

    .line 5136
    :goto_0
    const/4 v4, -0x1

    move/from16 v0, v24

    if-ne v0, v4, :cond_1

    .line 5137
    :try_start_2
    const-string v4, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Invalid packageName: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v4, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 5138
    if-eqz p2, :cond_0

    .line 5140
    const/4 v4, 0x0

    :try_start_3
    move-object/from16 v0, p2

    move-object/from16 v1, p1

    invoke-interface {v0, v1, v4}, Landroid/content/pm/IPackageDataObserver;->onRemoveCompleted(Ljava/lang/String;Z)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 5145
    :cond_0
    :goto_1
    const/4 v4, 0x0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 5186
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5188
    :goto_2
    return v4

    .line 5141
    :catch_0
    move-exception v22

    .line 5142
    .local v22, "e":Landroid/os/RemoteException;
    :try_start_5
    const-string v4, "ActivityManager"

    const-string v7, "Observer no longer exists."

    invoke-static {v4, v7}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1

    .line 5167
    .end local v22    # "e":Landroid/os/RemoteException;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    throw v4
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 5186
    .end local v24    # "pkgUid":I
    .end local v25    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v4

    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 5147
    .restart local v24    # "pkgUid":I
    .restart local v25    # "pm":Landroid/content/pm/IPackageManager;
    :cond_1
    move/from16 v0, v24

    if-eq v6, v0, :cond_2

    :try_start_7
    const-string v8, "android.permission.CLEAR_APP_USER_DATA"

    const/4 v11, -0x1

    const/4 v12, 0x1

    move-object/from16 v7, p0

    move v9, v5

    move v10, v6

    invoke-virtual/range {v7 .. v12}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v4

    if-nez v4, :cond_4

    .line 5151
    :cond_2
    const-string v4, "clear data"

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v24

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    .line 5159
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v23, v4, -0x1

    .local v23, "i":I
    :goto_3
    if-ltz v23, :cond_6

    .line 5160
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    move/from16 v0, v23

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v27

    check-cast v27, Lcom/android/server/am/TaskRecord;

    .line 5161
    .local v27, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual/range {v27 .. v27}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v4

    invoke-virtual {v4}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v26

    .line 5163
    .local v26, "taskPackageName":Ljava/lang/String;
    move-object/from16 v0, v27

    iget v4, v0, Lcom/android/server/am/TaskRecord;->userId:I

    move/from16 v0, p3

    if-eq v4, v0, :cond_5

    .line 5159
    :cond_3
    :goto_4
    add-int/lit8 v23, v23, -0x1

    goto :goto_3

    .line 5153
    .end local v23    # "i":I
    .end local v26    # "taskPackageName":Ljava/lang/String;
    .end local v27    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_4
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "PID "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " does not have permission "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, "android.permission.CLEAR_APP_USER_DATA"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " to clear data"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " of package "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    move-object/from16 v0, p1

    invoke-virtual {v7, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v4, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 5164
    .restart local v23    # "i":I
    .restart local v26    # "taskPackageName":Ljava/lang/String;
    .restart local v27    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_5
    move-object/from16 v0, v26

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3

    .line 5165
    move-object/from16 v0, v27

    iget v4, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v7, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v7}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    goto :goto_4

    .line 5167
    .end local v26    # "taskPackageName":Ljava/lang/String;
    .end local v27    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_6
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 5171
    :try_start_8
    move-object/from16 v0, v25

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    invoke-interface {v0, v1, v2, v3}, Landroid/content/pm/IPackageManager;->clearApplicationUserData(Ljava/lang/String;Landroid/content/pm/IPackageDataObserver;I)V

    .line 5173
    monitor-enter p0
    :try_end_8
    .catch Landroid/os/RemoteException; {:try_start_8 .. :try_end_8} :catch_1
    .catchall {:try_start_8 .. :try_end_8} :catchall_1

    .line 5175
    const/4 v4, 0x1

    :try_start_9
    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p3

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionsForPackageLocked(Ljava/lang/String;IZ)V

    .line 5176
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_2

    .line 5178
    :try_start_a
    new-instance v10, Landroid/content/Intent;

    const-string v4, "android.intent.action.PACKAGE_DATA_CLEARED"

    const-string v7, "package"

    const/4 v8, 0x0

    move-object/from16 v0, p1

    invoke-static {v7, v0, v8}, Landroid/net/Uri;->fromParts(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v7

    invoke-direct {v10, v4, v7}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 5180
    .local v10, "intent":Landroid/content/Intent;
    const-string v4, "android.intent.extra.UID"

    move/from16 v0, v24

    invoke-virtual {v10, v4, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 5181
    const-string v8, "android"

    const/16 v9, 0x3e8

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    move-object/from16 v7, p0

    move/from16 v19, p3

    invoke-virtual/range {v7 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentInPackage(Ljava/lang/String;ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;ZZI)I
    :try_end_a
    .catch Landroid/os/RemoteException; {:try_start_a .. :try_end_a} :catch_1
    .catchall {:try_start_a .. :try_end_a} :catchall_1

    .line 5186
    .end local v10    # "intent":Landroid/content/Intent;
    :goto_5
    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5188
    const/4 v4, 0x1

    goto/16 :goto_2

    .line 5176
    :catchall_2
    move-exception v4

    :try_start_b
    monitor-exit p0
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_2

    :try_start_c
    throw v4
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_1
    .catchall {:try_start_c .. :try_end_c} :catchall_1

    .line 5183
    :catch_1
    move-exception v4

    goto :goto_5

    .line 5134
    .end local v23    # "i":I
    :catch_2
    move-exception v4

    goto/16 :goto_0
.end method

.method final clearFocusedActivity(Lcom/android/server/am/ActivityRecord;)V
    .locals 1
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    .line 2382
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-ne v0, p1, :cond_0

    .line 2383
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    .line 2385
    :cond_0
    return-void
.end method

.method public clearPendingBackup()V
    .locals 2

    .prologue
    .line 15452
    const-string v0, "android.permission.BACKUP"

    const-string v1, "clearPendingBackup"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 15454
    monitor-enter p0

    .line 15455
    const/4 v0, 0x0

    :try_start_0
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    .line 15456
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    .line 15457
    monitor-exit p0

    .line 15458
    return-void

    .line 15457
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public closeSystemDialogs(Ljava/lang/String;)V
    .locals 8
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 5377
    const-string v5, "closeSystemDialogs"

    invoke-virtual {p0, v5}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5379
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    .line 5380
    .local v2, "pid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 5381
    .local v4, "uid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 5383
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    .line 5386
    const/16 v5, 0x2710

    if-lt v4, v5, :cond_0

    .line 5388
    :try_start_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v6
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 5389
    :try_start_2
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v5, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 5390
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v6
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 5391
    :try_start_3
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/4 v6, 0x2

    if-le v5, v6, :cond_0

    .line 5392
    const-string v5, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Ignoring closeSystemDialogs "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " from background process "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5394
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 5400
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5402
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :goto_0
    return-void

    .line 5390
    :catchall_0
    move-exception v5

    :try_start_4
    monitor-exit v6
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v5

    .line 5398
    :catchall_1
    move-exception v5

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    throw v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    .line 5400
    :catchall_2
    move-exception v5

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5

    .line 5397
    :cond_0
    :try_start_7
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->closeSystemDialogsLocked(Ljava/lang/String;)V

    .line 5398
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    .line 5400
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0
.end method

.method closeSystemDialogsLocked(Ljava/lang/String;)V
    .locals 17
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 5405
    new-instance v4, Landroid/content/Intent;

    const-string v1, "android.intent.action.CLOSE_SYSTEM_DIALOGS"

    invoke-direct {v4, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 5406
    .local v4, "intent":Landroid/content/Intent;
    const/high16 v1, 0x50000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 5408
    if-eqz p1, :cond_0

    .line 5409
    const-string v1, "reason"

    move-object/from16 v0, p1

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;

    .line 5411
    :cond_0
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p1

    invoke-virtual {v1, v0}, Lcom/android/server/wm/WindowManagerService;->closeSystemDialogs(Ljava/lang/String;)V

    .line 5413
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->closeSystemDialogsLocked()V

    .line 5415
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, -0x1

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/16 v15, 0x3e8

    const/16 v16, -0x1

    move-object/from16 v1, p0

    invoke-direct/range {v1 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 5418
    return-void
.end method

.method collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;
    .locals 6
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "start"    # I
    .param p3, "allPkgs"    # Z
    .param p4, "args"    # [Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/io/PrintWriter;",
            "IZ[",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessRecord;",
            ">;"
        }
    .end annotation

    .prologue
    .line 13819
    monitor-enter p0

    .line 13820
    if-eqz p4, :cond_4

    :try_start_0
    array-length v4, p4

    if-le v4, p2, :cond_4

    aget-object v4, p4, p2

    const/4 v5, 0x0

    invoke-virtual {v4, v5}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0x2d

    if-eq v4, v5, :cond_4

    .line 13822
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13823
    .local v3, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    const/4 v1, -0x1

    .line 13825
    .local v1, "pid":I
    :try_start_1
    aget-object v4, p4, p2

    invoke-static {v4}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_1
    .catch Ljava/lang/NumberFormatException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v1

    .line 13828
    :goto_0
    :try_start_2
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v0, v4, -0x1

    .local v0, "i":I
    :goto_1
    if-ltz v0, :cond_3

    .line 13829
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 13830
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    iget v4, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v4, v1, :cond_1

    .line 13831
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 13828
    :cond_0
    :goto_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_1

    .line 13832
    :cond_1
    if-eqz p3, :cond_2

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    if-eqz v4, :cond_2

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    aget-object v5, p4, p2

    invoke-virtual {v4, v5}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_2

    .line 13834
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 13845
    .end local v0    # "i":I
    .end local v1    # "pid":I
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 13835
    .restart local v0    # "i":I
    .restart local v1    # "pid":I
    .restart local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_2
    :try_start_3
    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    aget-object v5, p4, p2

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 13836
    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 13839
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-gtz v4, :cond_5

    .line 13840
    const/4 v4, 0x0

    monitor-exit p0

    .line 13846
    .end local v0    # "i":I
    .end local v1    # "pid":I
    :goto_3
    return-object v4

    .line 13843
    .end local v3    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_4
    new-instance v3, Ljava/util/ArrayList;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-direct {v3, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 13845
    .restart local v3    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_5
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-object v4, v3

    .line 13846
    goto :goto_3

    .line 13826
    .restart local v1    # "pid":I
    :catch_0
    move-exception v4

    goto :goto_0
.end method

.method compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;
    .locals 1
    .param p1, "ai"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    .line 3226
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v0

    return-object v0
.end method

.method completeSwitchAndInitalize(Lcom/android/server/am/UserStartedState;IZZ)V
    .locals 5
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;
    .param p2, "newUserId"    # I
    .param p3, "clearInitializing"    # Z
    .param p4, "clearSwitching"    # Z

    .prologue
    .line 19173
    const/4 v2, 0x0

    .line 19174
    .local v2, "unfrozen":Z
    monitor-enter p0

    .line 19175
    if-eqz p3, :cond_0

    .line 19176
    const/4 v3, 0x0

    :try_start_0
    iput-boolean v3, p1, Lcom/android/server/am/UserStartedState;->initializing:Z

    .line 19177
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v3

    iget-object v4, p1, Lcom/android/server/am/UserStartedState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v4}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    invoke-virtual {v3, v4}, Lcom/android/server/pm/UserManagerService;->makeInitialized(I)V

    .line 19179
    :cond_0
    if-eqz p4, :cond_1

    .line 19180
    const/4 v3, 0x0

    iput-boolean v3, p1, Lcom/android/server/am/UserStartedState;->switching:Z

    .line 19182
    :cond_1
    iget-boolean v3, p1, Lcom/android/server/am/UserStartedState;->switching:Z

    if-nez v3, :cond_2

    iget-boolean v3, p1, Lcom/android/server/am/UserStartedState;->initializing:Z

    if-nez v3, :cond_2

    .line 19183
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v3}, Lcom/android/server/wm/WindowManagerService;->stopFreezingScreen()V

    .line 19184
    const/4 v2, 0x1

    .line 19186
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19187
    if-eqz v2, :cond_4

    .line 19188
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v0

    .line 19189
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_3

    .line 19191
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3, v1}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v3

    check-cast v3, Landroid/app/IUserSwitchObserver;

    invoke-interface {v3, p2}, Landroid/app/IUserSwitchObserver;->onUserSwitchComplete(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 19189
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 19186
    .end local v0    # "N":I
    .end local v1    # "i":I
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v3

    .line 19195
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    :cond_3
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v3}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 19197
    .end local v0    # "N":I
    .end local v1    # "i":I
    :cond_4
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->stopGuestUserIfBackground()V

    .line 19198
    return-void

    .line 19192
    .restart local v0    # "N":I
    .restart local v1    # "i":I
    :catch_0
    move-exception v3

    goto :goto_1
.end method

.method continueUserSwitch(Lcom/android/server/am/UserStartedState;II)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 19168
    const/4 v0, 0x0

    const/4 v1, 0x1

    invoke-virtual {p0, p1, p3, v0, v1}, Lcom/android/server/am/ActivityManagerService;->completeSwitchAndInitalize(Lcom/android/server/am/UserStartedState;IZZ)V

    .line 19169
    return-void
.end method

.method public convertFromTranslucent(Landroid/os/IBinder;)Z
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v3, 0x0

    .line 10560
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10562
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10563
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 10564
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    .line 10565
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10576
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_0
    return v3

    .line 10567
    :cond_0
    const/4 v4, 0x1

    :try_start_2
    invoke-virtual {v2, v4}, Lcom/android/server/am/ActivityRecord;->changeWindowTranslucency(Z)Z

    move-result v3

    .line 10568
    .local v3, "translucentChanged":Z
    if-eqz v3, :cond_1

    .line 10569
    iget-object v4, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v4, v4, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStack;->releaseBackgroundResources()V

    .line 10570
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const/4 v6, 0x0

    invoke-virtual {v4, v5, v6}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 10572
    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v5, 0x1

    invoke-virtual {v4, p1, v5}, Lcom/android/server/wm/WindowManagerService;->setAppFullscreen(Landroid/os/IBinder;Z)V

    .line 10573
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10576
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 10574
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "translucentChanged":Z
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 10576
    :catchall_1
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public convertToTranslucent(Landroid/os/IBinder;Landroid/app/ActivityOptions;)Z
    .locals 9
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "options"    # Landroid/app/ActivityOptions;

    .prologue
    const/4 v4, 0x0

    .line 10582
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 10584
    .local v2, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10585
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 10586
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v1, :cond_0

    .line 10587
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10603
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_0
    return v4

    .line 10589
    :cond_0
    :try_start_2
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    invoke-virtual {v6, v1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v0

    .line 10590
    .local v0, "index":I
    if-lez v0, :cond_1

    .line 10591
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->mActivities:Ljava/util/ArrayList;

    add-int/lit8 v7, v0, -0x1

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ActivityRecord;

    .line 10592
    .local v5, "under":Lcom/android/server/am/ActivityRecord;
    iput-object p2, v5, Lcom/android/server/am/ActivityRecord;->returningOptions:Landroid/app/ActivityOptions;

    .line 10594
    .end local v5    # "under":Lcom/android/server/am/ActivityRecord;
    :cond_1
    const/4 v6, 0x0

    invoke-virtual {v1, v6}, Lcom/android/server/am/ActivityRecord;->changeWindowTranslucency(Z)Z

    move-result v4

    .line 10595
    .local v4, "translucentChanged":Z
    if-eqz v4, :cond_2

    .line 10596
    iget-object v6, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v6, v1}, Lcom/android/server/am/ActivityStack;->convertToTranslucent(Lcom/android/server/am/ActivityRecord;)V

    .line 10598
    :cond_2
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual {v6, v7, v8}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    .line 10599
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v7, 0x0

    invoke-virtual {v6, p1, v7}, Lcom/android/server/wm/WindowManagerService;->setAppFullscreen(Landroid/os/IBinder;Z)V

    .line 10600
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10603
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 10601
    .end local v0    # "index":I
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v4    # "translucentChanged":Z
    :catchall_0
    move-exception v6

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v6
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 10603
    :catchall_1
    move-exception v6

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v6
.end method

.method public crashApplication(IILjava/lang/String;Ljava/lang/String;)V
    .locals 9
    .param p1, "uid"    # I
    .param p2, "initialPid"    # I
    .param p3, "packageName"    # Ljava/lang/String;
    .param p4, "message"    # Ljava/lang/String;

    .prologue
    .line 4382
    const-string v6, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v6}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v6

    if-eqz v6, :cond_0

    .line 4384
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Permission Denial: crashApplication() from pid="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ", uid="

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " requires "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 4388
    .local v1, "msg":Ljava/lang/String;
    const-string v6, "ActivityManager"

    invoke-static {v6, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4389
    new-instance v6, Ljava/lang/SecurityException;

    invoke-direct {v6, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6

    .line 4392
    .end local v1    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 4393
    const/4 v5, 0x0

    .line 4398
    .local v5, "proc":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v7
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 4399
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    :try_start_1
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6}, Landroid/util/SparseArray;->size()I

    move-result v6

    if-ge v0, v6, :cond_3

    .line 4400
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v6, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 4401
    .local v4, "p":Lcom/android/server/am/ProcessRecord;
    iget v6, v4, Lcom/android/server/am/ProcessRecord;->uid:I

    if-eq v6, p1, :cond_2

    .line 4399
    :cond_1
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 4404
    :cond_2
    iget v6, v4, Lcom/android/server/am/ProcessRecord;->pid:I

    if-ne v6, p2, :cond_4

    .line 4405
    move-object v5, v4

    .line 4412
    .end local v4    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_3
    monitor-exit v7
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4414
    if-nez v5, :cond_5

    .line 4415
    :try_start_2
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "crashApplication: nothing for uid="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " initialPid="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " packageName="

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4418
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 4434
    :goto_2
    return-void

    .line 4408
    .restart local v4    # "p":Lcom/android/server/am/ProcessRecord;
    :cond_4
    :try_start_3
    iget-object v6, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual {v6, p3}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_1

    .line 4409
    move-object v5, v4

    goto :goto_1

    .line 4412
    .end local v4    # "p":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v6

    monitor-exit v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v6

    .line 4433
    .end local v0    # "i":I
    :catchall_1
    move-exception v6

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v6

    .line 4421
    .restart local v0    # "i":I
    :cond_5
    :try_start_5
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_7

    .line 4422
    iget v6, v5, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v7

    if-ne v6, v7, :cond_6

    .line 4423
    const-string v6, "ActivityManager"

    const-string v7, "crashApplication: trying to crash self!"

    invoke-static {v6, v7}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4424
    monitor-exit p0

    goto :goto_2

    .line 4426
    :cond_6
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    move-result-wide v2

    .line 4428
    .local v2, "ident":J
    :try_start_6
    iget-object v6, v5, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v6, p4}, Landroid/app/IApplicationThread;->scheduleCrash(Ljava/lang/String;)V
    :try_end_6
    .catch Landroid/os/RemoteException; {:try_start_6 .. :try_end_6} :catch_0
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    .line 4431
    :goto_3
    :try_start_7
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4433
    .end local v2    # "ident":J
    :cond_7
    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto :goto_2

    .line 4429
    .restart local v2    # "ident":J
    :catch_0
    move-exception v6

    goto :goto_3
.end method

.method public createActivityContainer(Landroid/os/IBinder;Landroid/app/IActivityContainerCallback;)Landroid/app/IActivityContainer;
    .locals 3
    .param p1, "parentActivityToken"    # Landroid/os/IBinder;
    .param p2, "callback"    # Landroid/app/IActivityContainerCallback;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 8645
    const-string v1, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v2, "createActivityContainer()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8647
    monitor-enter p0

    .line 8648
    if-nez p1, :cond_0

    .line 8649
    :try_start_0
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "parent token must not be null"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8659
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 8651
    :cond_0
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forToken(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 8652
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_1

    .line 8653
    const/4 v1, 0x0

    monitor-exit p0

    .line 8658
    :goto_0
    return-object v1

    .line 8655
    :cond_1
    if-nez p2, :cond_2

    .line 8656
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "callback must not be null"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 8658
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, v0, p2}, Lcom/android/server/am/ActivityStackSupervisor;->createActivityContainer(Lcom/android/server/am/ActivityRecord;Landroid/app/IActivityContainerCallback;)Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    move-result-object v1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method createAppErrorIntentLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/content/Intent;
    .locals 4
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "timeMillis"    # J
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 12128
    invoke-direct {p0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityManagerService;->createAppErrorReportLocked(Lcom/android/server/am/ProcessRecord;JLandroid/app/ApplicationErrorReport$CrashInfo;)Landroid/app/ApplicationErrorReport;

    move-result-object v0

    .line 12129
    .local v0, "report":Landroid/app/ApplicationErrorReport;
    if-nez v0, :cond_0

    .line 12130
    const/4 v1, 0x0

    .line 12136
    :goto_0
    return-object v1

    .line 12132
    :cond_0
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.APP_ERROR"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .line 12133
    .local v1, "result":Landroid/content/Intent;
    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    invoke-virtual {v1, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 12134
    const-string v2, "android.intent.extra.BUG_REPORT"

    invoke-virtual {v1, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Landroid/os/Parcelable;)Landroid/content/Intent;

    .line 12135
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    goto :goto_0
.end method

.method decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z
    .locals 4
    .param p1, "conn"    # Lcom/android/server/am/ContentProviderConnection;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "externalProcessToken"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z

    .prologue
    const/4 v0, 0x0

    .line 9126
    if-eqz p1, :cond_2

    .line 9127
    iget-object p2, p1, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    .line 9133
    if-eqz p4, :cond_1

    .line 9134
    iget v1, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 9138
    :goto_0
    iget v1, p1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    if-nez v1, :cond_0

    iget v1, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    if-nez v1, :cond_0

    .line 9139
    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9140
    iget-object v0, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 9141
    iget-object v0, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v1, p1, Lcom/android/server/am/ContentProviderConnection;->client:Lcom/android/server/am/ProcessRecord;

    iget-object v1, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v2, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v3, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V

    .line 9142
    const/4 v0, 0x1

    .line 9147
    :cond_0
    :goto_1
    return v0

    .line 9136
    :cond_1
    iget v1, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    goto :goto_0

    .line 9146
    :cond_2
    invoke-virtual {p2, p3}, Lcom/android/server/am/ContentProviderRecord;->removeExternalProcessHandleLocked(Landroid/os/IBinder;)Z

    goto :goto_1
.end method

.method public deleteActivityContainer(Landroid/app/IActivityContainer;)V
    .locals 2
    .param p1, "container"    # Landroid/app/IActivityContainer;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 8664
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "deleteActivityContainer()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8666
    monitor-enter p0

    .line 8667
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->deleteActivityContainer(Landroid/app/IActivityContainer;)V

    .line 8668
    monitor-exit p0

    .line 8669
    return-void

    .line 8668
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method dispatchUserSwitch(Lcom/android/server/am/UserStartedState;II)V
    .locals 7
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 19096
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->beginBroadcast()I

    move-result v2

    .line 19097
    .local v2, "N":I
    if-lez v2, :cond_0

    .line 19098
    new-instance v0, Lcom/android/server/am/ActivityManagerService$26;

    move-object v1, p0

    move-object v3, p1

    move v4, p2

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService$26;-><init>(Lcom/android/server/am/ActivityManagerService;ILcom/android/server/am/UserStartedState;II)V

    .line 19112
    .local v0, "callback":Landroid/os/IRemoteCallback;
    monitor-enter p0

    .line 19113
    const/4 v1, 0x1

    :try_start_0
    iput-boolean v1, p1, Lcom/android/server/am/UserStartedState;->switching:Z

    .line 19114
    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurUserSwitchCallback:Ljava/lang/Object;

    .line 19115
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19116
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    if-ge v6, v2, :cond_1

    .line 19118
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1, v6}, Landroid/os/RemoteCallbackList;->getBroadcastItem(I)Landroid/os/IInterface;

    move-result-object v1

    check-cast v1, Landroid/app/IUserSwitchObserver;

    invoke-interface {v1, p3, v0}, Landroid/app/IUserSwitchObserver;->onUserSwitching(ILandroid/os/IRemoteCallback;)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 19116
    :goto_1
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 19115
    .end local v6    # "i":I
    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 19124
    .end local v0    # "callback":Landroid/os/IRemoteCallback;
    :cond_0
    monitor-enter p0

    .line 19125
    :try_start_3
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendContinueUserSwitchLocked(Lcom/android/server/am/UserStartedState;II)V

    .line 19126
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 19128
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1}, Landroid/os/RemoteCallbackList;->finishBroadcast()V

    .line 19129
    return-void

    .line 19126
    :catchall_1
    move-exception v1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v1

    .line 19120
    .restart local v0    # "callback":Landroid/os/IRemoteCallback;
    .restart local v6    # "i":I
    :catch_0
    move-exception v1

    goto :goto_1
.end method

.method final doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 17
    .param p1, "dyingProc"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 4622
    const/4 v10, 0x0

    .line 4623
    .local v10, "haveBg":Z
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v11, v2, -0x1

    .local v11, "i":I
    :goto_0
    if-ltz v11, :cond_0

    .line 4624
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ProcessRecord;

    .line 4625
    .local v16, "rec":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_3

    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0xb

    if-lt v2, v3, :cond_3

    .line 4627
    const/4 v10, 0x1

    .line 4632
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez v10, :cond_b

    .line 4633
    const-string v2, "1"

    const-string v3, "ro.debuggable"

    const-string v4, "0"

    invoke-static {v3, v4}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    .line 4634
    .local v9, "doReport":Z
    if-eqz v9, :cond_1

    .line 4635
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    .line 4636
    .local v14, "now":J
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    const-wide/32 v4, 0x493e0

    add-long/2addr v2, v4

    cmp-long v2, v14, v2

    if-gez v2, :cond_4

    .line 4637
    const/4 v9, 0x0

    .line 4642
    .end local v14    # "now":J
    :cond_1
    :goto_1
    if-eqz v9, :cond_5

    new-instance v12, Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-direct {v12, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 4644
    .local v12, "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    :goto_2
    const/16 v2, 0x7541

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    invoke-static {v2, v3}, Landroid/util/EventLog;->writeEvent(II)I

    .line 4645
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v14

    .line 4646
    .restart local v14    # "now":J
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v11, v2, -0x1

    :goto_3
    if-ltz v11, :cond_9

    .line 4647
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Lcom/android/server/am/ProcessRecord;

    .line 4648
    .restart local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v16

    move-object/from16 v1, p1

    if-eq v0, v1, :cond_2

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_6

    .line 4646
    :cond_2
    :goto_4
    add-int/lit8 v11, v11, -0x1

    goto :goto_3

    .line 4623
    .end local v9    # "doReport":Z
    .end local v12    # "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    .end local v14    # "now":J
    :cond_3
    add-int/lit8 v11, v11, -0x1

    goto/16 :goto_0

    .line 4639
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    .restart local v9    # "doReport":Z
    .restart local v14    # "now":J
    :cond_4
    move-object/from16 v0, p0

    iput-wide v14, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    goto :goto_1

    .line 4642
    .end local v14    # "now":J
    :cond_5
    const/4 v12, 0x0

    goto :goto_2

    .line 4651
    .restart local v12    # "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    .restart local v14    # "now":J
    .restart local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_6
    if-eqz v9, :cond_7

    .line 4652
    new-instance v2, Lcom/android/server/am/ProcessMemInfo;

    move-object/from16 v0, v16

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v0, v16

    iget v4, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move-object/from16 v0, v16

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move-object/from16 v0, v16

    iget v6, v0, Lcom/android/server/am/ProcessRecord;->setProcState:I

    move-object/from16 v0, v16

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->adjType:Ljava/lang/String;

    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/ProcessRecord;->makeAdjReason()Ljava/lang/String;

    move-result-object v8

    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ProcessMemInfo;-><init>(Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v12, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 4655
    :cond_7
    move-object/from16 v0, v16

    iget-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    cmp-long v2, v2, v14

    if-gtz v2, :cond_2

    .line 4659
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->setAdj:I

    const/4 v3, 0x4

    if-gt v2, v3, :cond_8

    .line 4660
    const-wide/16 v2, 0x0

    move-object/from16 v0, v16

    iput-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 4664
    :goto_5
    const/4 v2, 0x1

    move-object/from16 v0, v16

    iput-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    .line 4665
    move-object/from16 v0, v16

    iput-wide v14, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    .line 4666
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    move-object/from16 v0, v16

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 4667
    move-object/from16 v0, p0

    move-object/from16 v1, v16

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    goto :goto_4

    .line 4662
    :cond_8
    move-object/from16 v0, v16

    iget-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    move-object/from16 v0, v16

    iput-wide v2, v0, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    goto :goto_5

    .line 4670
    .end local v16    # "rec":Lcom/android/server/am/ProcessRecord;
    :cond_9
    if-eqz v9, :cond_a

    .line 4671
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x21

    invoke-virtual {v2, v3, v12}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v13

    .line 4672
    .local v13, "msg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v13}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 4674
    .end local v13    # "msg":Landroid/os/Message;
    :cond_a
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    .line 4676
    .end local v9    # "doReport":Z
    .end local v12    # "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    .end local v14    # "now":J
    :cond_b
    return-void
.end method

.method protected dump(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 30
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    .line 12339
    const-string v2, "android.permission.DUMP"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 12341
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Permission Denial: can\'t dump ActivityManager from from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " without permission "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "android.permission.DUMP"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12613
    :goto_0
    return-void

    .line 12349
    :cond_0
    const/16 v24, 0x0

    .line 12350
    .local v24, "dumpAll":Z
    const/4 v8, 0x0

    .line 12351
    .local v8, "dumpClient":Z
    const/4 v9, 0x0

    .line 12353
    .local v9, "dumpPackage":Ljava/lang/String;
    const/4 v6, 0x0

    .line 12354
    .local v6, "opti":I
    :goto_1
    move-object/from16 v0, p3

    array-length v2, v0

    if-ge v6, v2, :cond_1

    .line 12355
    aget-object v27, p3, v6

    .line 12356
    .local v27, "opt":Ljava/lang/String;
    if-eqz v27, :cond_1

    invoke-virtual/range {v27 .. v27}, Ljava/lang/String;->length()I

    move-result v2

    if-lez v2, :cond_1

    const/4 v2, 0x0

    move-object/from16 v0, v27

    invoke-virtual {v0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v2

    const/16 v3, 0x2d

    if-eq v2, v3, :cond_4

    .line 12407
    .end local v27    # "opt":Ljava/lang/String;
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v28

    .line 12408
    .local v28, "origId":J
    const/16 v26, 0x0

    .line 12410
    .local v26, "more":Z
    move-object/from16 v0, p3

    array-length v2, v0

    if-ge v6, v2, :cond_2f

    .line 12411
    aget-object v18, p3, v6

    .line 12412
    .local v18, "cmd":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 12413
    const-string v2, "activities"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    const-string v2, "a"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_a

    .line 12414
    :cond_2
    monitor-enter p0

    .line 12415
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    :try_start_0
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 12416
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 12565
    .end local v18    # "cmd":Ljava/lang/String;
    :cond_3
    :goto_2
    if-nez v26, :cond_2f

    .line 12566
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 12359
    .end local v26    # "more":Z
    .end local v28    # "origId":J
    .restart local v27    # "opt":Ljava/lang/String;
    :cond_4
    add-int/lit8 v6, v6, 0x1

    .line 12360
    const-string v2, "-a"

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_5

    .line 12361
    const/16 v24, 0x1

    goto :goto_1

    .line 12362
    :cond_5
    const-string v2, "-c"

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 12363
    const/4 v8, 0x1

    goto :goto_1

    .line 12364
    :cond_6
    const-string v2, "-p"

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_8

    .line 12365
    move-object/from16 v0, p3

    array-length v2, v0

    if-ge v6, v2, :cond_7

    .line 12366
    aget-object v9, p3, v6

    .line 12367
    add-int/lit8 v6, v6, 0x1

    .line 12372
    const/4 v8, 0x1

    goto :goto_1

    .line 12369
    :cond_7
    const-string v2, "Error: -p option requires package argument"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 12373
    :cond_8
    const-string v2, "-h"

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 12374
    const-string v2, "Activity manager dump options:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12375
    const-string v2, "  [-a] [-c] [-p package] [-h] [cmd] ..."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12376
    const-string v2, "  cmd may be one of:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12377
    const-string v2, "    a[ctivities]: activity stack state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12378
    const-string v2, "    r[recents]: recent activities state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12379
    const-string v2, "    b[roadcasts] [PACKAGE_NAME] [history [-s]]: broadcast state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12380
    const-string v2, "    i[ntents] [PACKAGE_NAME]: pending intent state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12381
    const-string v2, "    p[rocesses] [PACKAGE_NAME]: process state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12382
    const-string v2, "    o[om]: out of memory management"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12383
    const-string v2, "    prov[iders] [COMP_SPEC ...]: content provider state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12384
    const-string v2, "    provider [COMP_SPEC]: provider client-side state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12385
    const-string v2, "    s[ervices] [COMP_SPEC ...]: service state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12386
    const-string v2, "    as[sociations]: tracked app associations"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12387
    const-string v2, "    service [COMP_SPEC]: service client-side state"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12388
    const-string v2, "    package [PACKAGE_NAME]: all state related to given package"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12389
    const-string v2, "    all: dump all activities"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12390
    const-string v2, "    top: dump the top activity"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12391
    const-string v2, "    write: write all pending state to storage"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12392
    const-string v2, "    track-associations: enable association tracking"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12393
    const-string v2, "    untrack-associations: disable and clear association tracking"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12394
    const-string v2, "  cmd may also be a COMP_SPEC to dump activities."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12395
    const-string v2, "  COMP_SPEC may be a component name (com.foo/.myApp),"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12396
    const-string v2, "    a partial substring in a component name, a"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12397
    const-string v2, "    hex object identifier."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12398
    const-string v2, "  -a: include all available server state."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12399
    const-string v2, "  -c: include client state."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12400
    const-string v2, "  -p: limit output to given package."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 12403
    :cond_9
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown argument: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v27

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "; use -h for help"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_1

    .line 12416
    .end local v27    # "opt":Ljava/lang/String;
    .restart local v18    # "cmd":Ljava/lang/String;
    .restart local v26    # "more":Z
    .restart local v28    # "origId":J
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2

    .line 12417
    :cond_a
    const-string v2, "recents"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_b

    const-string v2, "r"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_c

    .line 12418
    :cond_b
    monitor-enter p0

    .line 12419
    const/4 v15, 0x1

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    move-object/from16 v16, v9

    :try_start_2
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12420
    monitor-exit p0

    goto/16 :goto_2

    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2

    .line 12421
    :cond_c
    const-string v2, "broadcasts"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_d

    const-string v2, "b"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_10

    .line 12424
    :cond_d
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_f

    .line 12425
    const/4 v13, 0x0

    .line 12426
    .local v13, "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 12434
    .end local v13    # "name":Ljava/lang/String;
    .local v14, "newArgs":[Ljava/lang/String;
    :cond_e
    :goto_3
    monitor-enter p0

    .line 12435
    const/4 v15, 0x1

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    move-object/from16 v16, v9

    :try_start_3
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12436
    .end local v14    # "newArgs":[Ljava/lang/String;
    monitor-exit p0

    goto/16 :goto_2

    :catchall_2
    move-exception v2

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    throw v2

    .line 12428
    :cond_f
    aget-object v9, p3, v6

    .line 12429
    add-int/lit8 v6, v6, 0x1

    .line 12430
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 12431
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_e

    const/4 v2, 0x0

    move-object/from16 v0, p3

    array-length v3, v0

    sub-int/2addr v3, v6

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_3

    .line 12437
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_10
    const-string v2, "intents"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_11

    const-string v2, "i"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_14

    .line 12440
    :cond_11
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_13

    .line 12441
    const/4 v13, 0x0

    .line 12442
    .restart local v13    # "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 12450
    .end local v13    # "name":Ljava/lang/String;
    .restart local v14    # "newArgs":[Ljava/lang/String;
    :cond_12
    :goto_4
    monitor-enter p0

    .line 12451
    const/4 v15, 0x1

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    move-object/from16 v16, v9

    :try_start_4
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12452
    .end local v14    # "newArgs":[Ljava/lang/String;
    monitor-exit p0

    goto/16 :goto_2

    :catchall_3
    move-exception v2

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_3

    throw v2

    .line 12444
    :cond_13
    aget-object v9, p3, v6

    .line 12445
    add-int/lit8 v6, v6, 0x1

    .line 12446
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 12447
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_12

    const/4 v2, 0x0

    move-object/from16 v0, p3

    array-length v3, v0

    sub-int/2addr v3, v6

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_4

    .line 12453
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_14
    const-string v2, "processes"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_15

    const-string v2, "p"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_18

    .line 12456
    :cond_15
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_17

    .line 12457
    const/4 v13, 0x0

    .line 12458
    .restart local v13    # "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 12466
    .end local v13    # "name":Ljava/lang/String;
    .restart local v14    # "newArgs":[Ljava/lang/String;
    :cond_16
    :goto_5
    monitor-enter p0

    .line 12467
    const/4 v15, 0x1

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move-object/from16 v13, p3

    move v14, v6

    move-object/from16 v16, v9

    :try_start_5
    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12468
    .end local v14    # "newArgs":[Ljava/lang/String;
    monitor-exit p0

    goto/16 :goto_2

    :catchall_4
    move-exception v2

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_4

    throw v2

    .line 12460
    :cond_17
    aget-object v9, p3, v6

    .line 12461
    add-int/lit8 v6, v6, 0x1

    .line 12462
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 12463
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_16

    const/4 v2, 0x0

    move-object/from16 v0, p3

    array-length v3, v0

    sub-int/2addr v3, v6

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_5

    .line 12469
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_18
    const-string v2, "oom"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_19

    const-string v2, "o"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1a

    .line 12470
    :cond_19
    monitor-enter p0

    .line 12471
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    :try_start_6
    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z

    .line 12472
    monitor-exit p0

    goto/16 :goto_2

    :catchall_5
    move-exception v2

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_5

    throw v2

    .line 12473
    :cond_1a
    const-string v2, "provider"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1d

    .line 12476
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_1c

    .line 12477
    const/4 v13, 0x0

    .line 12478
    .restart local v13    # "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 12485
    .restart local v14    # "newArgs":[Ljava/lang/String;
    :cond_1b
    :goto_6
    const/4 v15, 0x0

    move-object/from16 v10, p0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move/from16 v16, v24

    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActivityManagerService;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v2

    if-nez v2, :cond_3

    .line 12486
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "No providers match: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12487
    const-string v2, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 12480
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_1c
    aget-object v13, p3, v6

    .line 12481
    .restart local v13    # "name":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 12482
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 12483
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_1b

    const/4 v2, 0x0

    move-object/from16 v0, p3

    array-length v3, v0

    sub-int/2addr v3, v6

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_6

    .line 12489
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_1d
    const-string v2, "providers"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_1e

    const-string v2, "prov"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1f

    .line 12490
    :cond_1e
    monitor-enter p0

    .line 12491
    const/16 v20, 0x1

    const/16 v21, 0x0

    move-object/from16 v15, p0

    move-object/from16 v16, p1

    move-object/from16 v17, p2

    move-object/from16 v18, p3

    move/from16 v19, v6

    :try_start_7
    invoke-virtual/range {v15 .. v21}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12492
    .end local v18    # "cmd":Ljava/lang/String;
    monitor-exit p0

    goto/16 :goto_2

    :catchall_6
    move-exception v2

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_6

    throw v2

    .line 12493
    .restart local v18    # "cmd":Ljava/lang/String;
    :cond_1f
    const-string v2, "service"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_22

    .line 12496
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_21

    .line 12497
    const/4 v13, 0x0

    .line 12498
    .restart local v13    # "name":Ljava/lang/String;
    sget-object v14, Lcom/android/server/am/ActivityManagerService;->EMPTY_STRING_ARRAY:[Ljava/lang/String;

    .line 12506
    .restart local v14    # "newArgs":[Ljava/lang/String;
    :cond_20
    :goto_7
    move-object/from16 v0, p0

    iget-object v10, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v15, 0x0

    move-object/from16 v11, p1

    move-object/from16 v12, p2

    move/from16 v16, v24

    invoke-virtual/range {v10 .. v16}, Lcom/android/server/am/ActiveServices;->dumpService(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v2

    if-nez v2, :cond_3

    .line 12507
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "No services match: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12508
    const-string v2, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 12500
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_21
    aget-object v13, p3, v6

    .line 12501
    .restart local v13    # "name":Ljava/lang/String;
    add-int/lit8 v6, v6, 0x1

    .line 12502
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 12503
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_20

    const/4 v2, 0x0

    move-object/from16 v0, p3

    array-length v3, v0

    sub-int/2addr v3, v6

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    goto :goto_7

    .line 12510
    .end local v13    # "name":Ljava/lang/String;
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_22
    const-string v2, "package"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_25

    .line 12512
    move-object/from16 v0, p3

    array-length v2, v0

    if-lt v6, v2, :cond_23

    .line 12513
    const-string v2, "package: no package name specified"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12514
    const-string v2, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 12516
    :cond_23
    aget-object v9, p3, v6

    .line 12517
    add-int/lit8 v6, v6, 0x1

    .line 12518
    move-object/from16 v0, p3

    array-length v2, v0

    sub-int/2addr v2, v6

    new-array v14, v2, [Ljava/lang/String;

    .line 12519
    .restart local v14    # "newArgs":[Ljava/lang/String;
    move-object/from16 v0, p3

    array-length v2, v0

    const/4 v3, 0x2

    if-le v2, v3, :cond_24

    const/4 v2, 0x0

    move-object/from16 v0, p3

    array-length v3, v0

    sub-int/2addr v3, v6

    move-object/from16 v0, p3

    invoke-static {v0, v6, v14, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 12521
    :cond_24
    move-object/from16 p3, v14

    .line 12522
    const/4 v6, 0x0

    .line 12523
    const/16 v26, 0x1

    goto/16 :goto_2

    .line 12525
    .end local v14    # "newArgs":[Ljava/lang/String;
    :cond_25
    const-string v2, "associations"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_26

    const-string v2, "as"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_27

    .line 12526
    :cond_26
    monitor-enter p0

    .line 12527
    const/4 v7, 0x1

    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    :try_start_8
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 12528
    monitor-exit p0

    goto/16 :goto_2

    :catchall_7
    move-exception v2

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_7

    throw v2

    .line 12529
    :cond_27
    const-string v2, "services"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_28

    const-string v2, "s"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_29

    .line 12530
    :cond_28
    monitor-enter p0

    .line 12531
    :try_start_9
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v7, 0x1

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 12532
    monitor-exit p0

    goto/16 :goto_2

    :catchall_8
    move-exception v2

    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_8

    throw v2

    .line 12533
    :cond_29
    const-string v2, "write"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2a

    .line 12534
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v2}, Lcom/android/server/am/TaskPersister;->flush()V

    .line 12535
    const-string v2, "All tasks persisted."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 12537
    :cond_2a
    const-string v2, "track-associations"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2c

    .line 12538
    monitor-enter p0

    .line 12539
    :try_start_a
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v2, :cond_2b

    .line 12540
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 12541
    const-string v2, "Association tracking started."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12545
    :goto_8
    monitor-exit p0

    goto/16 :goto_0

    :catchall_9
    move-exception v2

    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_9

    throw v2

    .line 12543
    :cond_2b
    :try_start_b
    const-string v2, "Association tracking already enabled."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_9

    goto :goto_8

    .line 12547
    :cond_2c
    const-string v2, "untrack-associations"

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2e

    .line 12548
    monitor-enter p0

    .line 12549
    :try_start_c
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-eqz v2, :cond_2d

    .line 12550
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    .line 12551
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->clear()V

    .line 12552
    const-string v2, "Association tracking stopped."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12556
    :goto_9
    monitor-exit p0

    goto/16 :goto_0

    :catchall_a
    move-exception v2

    monitor-exit p0
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_a

    throw v2

    .line 12554
    :cond_2d
    :try_start_d
    const-string v2, "Association tracking not running."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_a

    goto :goto_9

    :cond_2e
    move-object/from16 v15, p0

    move-object/from16 v16, p1

    move-object/from16 v17, p2

    move-object/from16 v19, p3

    move/from16 v20, v6

    move/from16 v21, v24

    .line 12560
    invoke-virtual/range {v15 .. v21}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v2

    if-nez v2, :cond_3

    .line 12561
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Bad activity command, or no activities match: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v18

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12562
    const-string v2, "Use -h for help."

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_2

    .line 12572
    .end local v18    # "cmd":Ljava/lang/String;
    :cond_2f
    monitor-enter p0

    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 12573
    :try_start_e
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12574
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12575
    if-eqz v24, :cond_30

    .line 12576
    const-string v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_30
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 12578
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12579
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12580
    if-eqz v24, :cond_31

    .line 12581
    const-string v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_31
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 12583
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12584
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12585
    if-eqz v24, :cond_32

    .line 12586
    const-string v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12588
    :cond_32
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v7, v24

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 12589
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12590
    if-eqz v24, :cond_33

    .line 12591
    const-string v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_33
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 12593
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12594
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12595
    if-eqz v24, :cond_34

    .line 12596
    const-string v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_34
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v7, v24

    .line 12598
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 12599
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    if-lez v2, :cond_36

    .line 12600
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12601
    if-eqz v24, :cond_35

    .line 12602
    const-string v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_35
    move-object/from16 v2, p0

    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v7, v24

    .line 12604
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    .line 12606
    :cond_36
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12607
    if-eqz v24, :cond_37

    .line 12608
    const-string v2, "-------------------------------------------------------------------------------"

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    :cond_37
    move-object/from16 v19, p0

    move-object/from16 v20, p1

    move-object/from16 v21, p2

    move-object/from16 v22, p3

    move/from16 v23, v6

    move-object/from16 v25, v9

    .line 12610
    invoke-virtual/range {v19 .. v25}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    .line 12611
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_b

    .line 12612
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto/16 :goto_0

    .line 12611
    :catchall_b
    move-exception v2

    :try_start_f
    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_b

    throw v2
.end method

.method dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 10
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpClient"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 12617
    const-string v1, "ACTIVITY MANAGER ACTIVITIES (dumpsys activity activities)"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12619
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object v2, p1

    move-object v3, p2

    move v4, p5

    move/from16 v5, p6

    move-object/from16 v6, p7

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityStackSupervisor;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;ZZLjava/lang/String;)Z

    move-result v9

    .line 12621
    .local v9, "printedAnything":Z
    move v7, v9

    .line 12623
    .local v7, "needSep":Z
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    const-string v2, "  mFocusedActivity: "

    move-object/from16 v0, p7

    invoke-static {p2, v1, v0, v7, v2}, Lcom/android/server/am/ActivityStackSupervisor;->printThisActivity(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;ZLjava/lang/String;)Z

    move-result v8

    .line 12625
    .local v8, "printed":Z
    if-eqz v8, :cond_0

    .line 12626
    const/4 v9, 0x1

    .line 12627
    const/4 v7, 0x0

    .line 12630
    :cond_0
    if-nez p7, :cond_2

    .line 12631
    if-eqz v7, :cond_1

    .line 12632
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 12634
    :cond_1
    const/4 v7, 0x1

    .line 12635
    const/4 v9, 0x1

    .line 12636
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v2, "  "

    invoke-virtual {v1, p2, v2}, Lcom/android/server/am/ActivityStackSupervisor;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 12639
    :cond_2
    if-nez v9, :cond_3

    .line 12640
    const-string v1, "  (nothing)"

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12642
    :cond_3
    return-void
.end method

.method protected dumpActivity(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 14
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "opti"    # I
    .param p6, "dumpAll"    # Z

    .prologue
    .line 13352
    monitor-enter p0

    .line 13353
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p3

    invoke-virtual {v2, v0}, Lcom/android/server/am/ActivityStackSupervisor;->getDumpActivitiesLocked(Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v9

    .line 13354
    .local v9, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 13356
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-gtz v2, :cond_0

    .line 13357
    const/4 v2, 0x0

    .line 13383
    :goto_0
    return v2

    .line 13354
    .end local v9    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2

    .line 13360
    .restart local v9    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    :cond_0
    move-object/from16 v0, p4

    array-length v2, v0

    sub-int v2, v2, p5

    new-array v7, v2, [Ljava/lang/String;

    .line 13361
    .local v7, "newArgs":[Ljava/lang/String;
    const/4 v2, 0x0

    move-object/from16 v0, p4

    array-length v3, v0

    sub-int v3, v3, p5

    move-object/from16 v0, p4

    move/from16 v1, p5

    invoke-static {v0, v1, v7, v2, v3}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 13363
    const/4 v11, 0x0

    .line 13364
    .local v11, "lastTask":Lcom/android/server/am/TaskRecord;
    const/4 v12, 0x0

    .line 13365
    .local v12, "needSep":Z
    invoke-virtual {v9}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v10, v2, -0x1

    .local v10, "i":I
    :goto_1
    if-ltz v10, :cond_3

    .line 13366
    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ActivityRecord;

    .line 13367
    .local v13, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v12, :cond_1

    .line 13368
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13370
    :cond_1
    const/4 v12, 0x1

    .line 13371
    monitor-enter p0

    .line 13372
    :try_start_2
    iget-object v2, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eq v11, v2, :cond_2

    .line 13373
    iget-object v11, v13, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .line 13374
    const-string v2, "TASK "

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v2, v11, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13375
    const-string v2, " id="

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget v2, v11, Lcom/android/server/am/TaskRecord;->taskId:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v2}, Ljava/io/PrintWriter;->println(I)V

    .line 13376
    if-eqz p6, :cond_2

    .line 13377
    const-string v2, "  "

    move-object/from16 v0, p2

    invoke-virtual {v11, v0, v2}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 13380
    :cond_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 13381
    const-string v3, "  "

    invoke-virtual {v9, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ActivityRecord;

    move-object v2, p0

    move-object v4, p1

    move-object/from16 v5, p2

    move/from16 v8, p6

    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->dumpActivity(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Lcom/android/server/am/ActivityRecord;[Ljava/lang/String;Z)V

    .line 13365
    add-int/lit8 v10, v10, -0x1

    goto :goto_1

    .line 13380
    :catchall_1
    move-exception v2

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v2

    .line 13383
    .end local v13    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    const/4 v2, 0x1

    goto :goto_0
.end method

.method final dumpApplicationMemoryUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;ZLjava/io/PrintWriter;)V
    .locals 102
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "prefix"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "brief"    # Z
    .param p6, "categoryPw"    # Ljava/io/PrintWriter;

    .prologue
    .line 14079
    const/16 v70, 0x0

    .line 14080
    .local v70, "dumpDetails":Z
    const/16 v18, 0x0

    .line 14081
    .local v18, "dumpFullDetails":Z
    const/16 v19, 0x0

    .line 14082
    .local v19, "dumpDalvik":Z
    const/16 v87, 0x0

    .line 14083
    .local v87, "oomOnly":Z
    const/4 v13, 0x0

    .line 14084
    .local v13, "isCompact":Z
    const/16 v76, 0x0

    .line 14085
    .local v76, "localOnly":Z
    const/16 v94, 0x0

    .line 14087
    .local v94, "packages":Z
    const/16 v91, 0x0

    .line 14088
    .local v91, "opti":I
    :goto_0
    move-object/from16 v0, p4

    array-length v6, v0

    move/from16 v0, v91

    if-ge v0, v6, :cond_0

    .line 14089
    aget-object v90, p4, v91

    .line 14090
    .local v90, "opt":Ljava/lang/String;
    if-eqz v90, :cond_0

    invoke-virtual/range {v90 .. v90}, Ljava/lang/String;->length()I

    move-result v6

    if-lez v6, :cond_0

    const/4 v6, 0x0

    move-object/from16 v0, v90

    invoke-virtual {v0, v6}, Ljava/lang/String;->charAt(I)C

    move-result v6

    const/16 v7, 0x2d

    if-eq v6, v7, :cond_3

    .line 14125
    .end local v90    # "opt":Ljava/lang/String;
    :cond_0
    const-string v6, "--checkin"

    move-object/from16 v0, p4

    invoke-static {v0, v6}, Lcom/android/server/am/ActivityManagerService;->scanArgs([Ljava/lang/String;Ljava/lang/String;)Z

    move-result v12

    .line 14126
    .local v12, "isCheckinRequest":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 14127
    .local v8, "uptime":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v10

    .line 14128
    .local v10, "realtime":J
    const/4 v6, 0x1

    new-array v0, v6, [J

    move-object/from16 v99, v0

    .line 14130
    .local v99, "tmpLong":[J
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move/from16 v2, v91

    move/from16 v3, v94

    move-object/from16 v4, p4

    invoke-virtual {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v96

    .line 14131
    .local v96, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v96, :cond_13

    .line 14133
    if-eqz p4, :cond_12

    move-object/from16 v0, p4

    array-length v6, v0

    move/from16 v0, v91

    if-le v6, v0, :cond_12

    aget-object v6, p4, v91

    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Ljava/lang/String;->charAt(I)C

    move-result v6

    const/16 v7, 0x2d

    if-eq v6, v7, :cond_12

    .line 14135
    new-instance v82, Ljava/util/ArrayList;

    invoke-direct/range {v82 .. v82}, Ljava/util/ArrayList;-><init>()V

    .line 14137
    .local v82, "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 14138
    const/16 v72, -0x1

    .line 14140
    .local v72, "findPid":I
    :try_start_0
    aget-object v6, p4, v91

    invoke-static {v6}, Ljava/lang/Integer;->parseInt(Ljava/lang/String;)I
    :try_end_0
    .catch Ljava/lang/NumberFormatException; {:try_start_0 .. :try_end_0} :catch_1

    move-result v72

    .line 14143
    :goto_1
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v7

    .line 14144
    :try_start_1
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v6}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v14

    .line 14145
    .local v14, "N":I
    const/16 v73, 0x0

    .local v73, "i":I
    :goto_2
    move/from16 v0, v73

    if-ge v0, v14, :cond_c

    .line 14146
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v73

    invoke-virtual {v6, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v98

    .line 14147
    .local v98, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v98

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v0, v72

    if-eq v6, v0, :cond_1

    move-object/from16 v0, v98

    iget-object v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    if-eqz v6, :cond_2

    move-object/from16 v0, v98

    iget-object v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    aget-object v15, p4, v91

    invoke-virtual {v6, v15}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_2

    .line 14149
    :cond_1
    move-object/from16 v0, v82

    move-object/from16 v1, v98

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 14145
    :cond_2
    add-int/lit8 v73, v73, 0x1

    goto :goto_2

    .line 14093
    .end local v8    # "uptime":J
    .end local v10    # "realtime":J
    .end local v12    # "isCheckinRequest":Z
    .end local v14    # "N":I
    .end local v72    # "findPid":I
    .end local v73    # "i":I
    .end local v82    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v96    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .end local v98    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .end local v99    # "tmpLong":[J
    .restart local v90    # "opt":Ljava/lang/String;
    :cond_3
    add-int/lit8 v91, v91, 0x1

    .line 14094
    const-string v6, "-a"

    move-object/from16 v0, v90

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_4

    .line 14095
    const/16 v70, 0x1

    .line 14096
    const/16 v18, 0x1

    .line 14097
    const/16 v19, 0x1

    goto/16 :goto_0

    .line 14098
    :cond_4
    const-string v6, "-d"

    move-object/from16 v0, v90

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_5

    .line 14099
    const/16 v19, 0x1

    goto/16 :goto_0

    .line 14100
    :cond_5
    const-string v6, "-c"

    move-object/from16 v0, v90

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_6

    .line 14101
    const/4 v13, 0x1

    goto/16 :goto_0

    .line 14102
    :cond_6
    const-string v6, "--oom"

    move-object/from16 v0, v90

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_7

    .line 14103
    const/16 v87, 0x1

    goto/16 :goto_0

    .line 14104
    :cond_7
    const-string v6, "--local"

    move-object/from16 v0, v90

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 14105
    const/16 v76, 0x1

    goto/16 :goto_0

    .line 14106
    :cond_8
    const-string v6, "--package"

    move-object/from16 v0, v90

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_9

    .line 14107
    const/16 v94, 0x1

    goto/16 :goto_0

    .line 14108
    :cond_9
    const-string v6, "-h"

    move-object/from16 v0, v90

    invoke-virtual {v6, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_b

    .line 14109
    const-string v6, "meminfo dump options: [-a] [-d] [-c] [--oom] [process]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14110
    const-string v6, "  -a: include all available information for each process."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14111
    const-string v6, "  -d: include dalvik details when dumping process details."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14112
    const-string v6, "  -c: dump in a compact machine-parseable representation."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14113
    const-string v6, "  --oom: only show processes organized by oom adj."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14114
    const-string v6, "  --local: only collect details locally, don\'t call process."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14115
    const-string v6, "  --package: interpret process arg as package, dumping all"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14116
    const-string v6, "             processes that have loaded that package."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14117
    const-string v6, "If [process] is specified it can be the name or "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14118
    const-string v6, "pid of a specific process to dump."

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14507
    .end local v90    # "opt":Ljava/lang/String;
    :cond_a
    :goto_3
    return-void

    .line 14121
    .restart local v90    # "opt":Ljava/lang/String;
    :cond_b
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Unknown argument: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v90

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "; use -h for help"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_0

    .line 14152
    .end local v90    # "opt":Ljava/lang/String;
    .restart local v8    # "uptime":J
    .restart local v10    # "realtime":J
    .restart local v12    # "isCheckinRequest":Z
    .restart local v14    # "N":I
    .restart local v72    # "findPid":I
    .restart local v73    # "i":I
    .restart local v82    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v96    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v99    # "tmpLong":[J
    :cond_c
    :try_start_2
    monitor-exit v7
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 14153
    invoke-virtual/range {v82 .. v82}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_12

    move-object/from16 v6, p0

    move-object/from16 v7, p2

    .line 14154
    invoke-direct/range {v6 .. v13}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 14156
    const/16 v16, 0x0

    .line 14157
    .local v16, "mi":Landroid/os/Debug$MemoryInfo;
    invoke-virtual/range {v82 .. v82}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v73, v6, -0x1

    :goto_4
    if-ltz v73, :cond_a

    .line 14158
    move-object/from16 v0, v82

    move/from16 v1, v73

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v97

    check-cast v97, Lcom/android/internal/os/ProcessCpuTracker$Stats;

    .line 14159
    .local v97, "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v97

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v20, v0

    .line 14160
    .local v20, "pid":I
    if-nez v12, :cond_d

    if-eqz v70, :cond_d

    .line 14161
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "\n** MEMINFO in pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v97

    iget-object v7, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14163
    :cond_d
    if-nez v16, :cond_e

    .line 14164
    new-instance v16, Landroid/os/Debug$MemoryInfo;

    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    invoke-direct/range {v16 .. v16}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 14166
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_e
    if-nez v70, :cond_f

    if-nez p5, :cond_11

    if-nez v87, :cond_11

    .line 14167
    :cond_f
    move/from16 v0, v20

    move-object/from16 v1, v16

    invoke-static {v0, v1}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 14172
    :goto_5
    move-object/from16 v0, v97

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->baseName:Ljava/lang/String;

    move-object/from16 v21, v0

    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    const-wide/16 v30, 0x0

    const-wide/16 v32, 0x0

    move-object/from16 v15, p2

    move/from16 v17, v12

    invoke-static/range {v15 .. v33}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZILjava/lang/String;JJJJJJ)V

    .line 14174
    if-eqz v12, :cond_10

    .line 14175
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14157
    :cond_10
    add-int/lit8 v73, v73, -0x1

    goto :goto_4

    .line 14152
    .end local v14    # "N":I
    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v20    # "pid":I
    .end local v73    # "i":I
    .end local v97    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_0
    move-exception v6

    :try_start_3
    monitor-exit v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    throw v6

    .line 14169
    .restart local v14    # "N":I
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v20    # "pid":I
    .restart local v73    # "i":I
    .restart local v97    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_11
    const/4 v6, 0x0

    move/from16 v0, v20

    move-object/from16 v1, v99

    invoke-static {v0, v1, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v6

    long-to-int v6, v6

    move-object/from16 v0, v16

    iput v6, v0, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 14170
    const/4 v6, 0x0

    aget-wide v6, v99, v6

    long-to-int v6, v6

    move-object/from16 v0, v16

    iput v6, v0, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    goto :goto_5

    .line 14181
    .end local v14    # "N":I
    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v20    # "pid":I
    .end local v72    # "findPid":I
    .end local v73    # "i":I
    .end local v82    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .end local v97    # "r":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_12
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "No process found for: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    aget-object v7, p4, v91

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_3

    .line 14185
    :cond_13
    if-nez p5, :cond_15

    if-nez v87, :cond_15

    invoke-virtual/range {v96 .. v96}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v7, 0x1

    if-eq v6, v7, :cond_14

    if-nez v12, :cond_14

    if-eqz v94, :cond_15

    .line 14186
    :cond_14
    const/16 v70, 0x1

    :cond_15
    move-object/from16 v6, p0

    move-object/from16 v7, p2

    .line 14189
    invoke-direct/range {v6 .. v13}, Lcom/android/server/am/ActivityManagerService;->dumpApplicationMemoryUsageHeader(Ljava/io/PrintWriter;JJZZ)V

    .line 14191
    move-object/from16 v0, p4

    array-length v6, v0

    sub-int v6, v6, v91

    new-array v0, v6, [Ljava/lang/String;

    move-object/from16 v74, v0

    .line 14192
    .local v74, "innerArgs":[Ljava/lang/String;
    const/4 v6, 0x0

    move-object/from16 v0, p4

    array-length v7, v0

    sub-int v7, v7, v91

    move-object/from16 v0, p4

    move/from16 v1, v91

    move-object/from16 v2, v74

    invoke-static {v0, v1, v2, v6, v7}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 14194
    new-instance v46, Ljava/util/ArrayList;

    invoke-direct/range {v46 .. v46}, Ljava/util/ArrayList;-><init>()V

    .line 14195
    .local v46, "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v95, Landroid/util/SparseArray;

    invoke-direct/range {v95 .. v95}, Landroid/util/SparseArray;-><init>()V

    .line 14196
    .local v95, "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v84, 0x0

    .line 14197
    .local v84, "nativePss":J
    const-wide/16 v68, 0x0

    .line 14198
    .local v68, "dalvikPss":J
    const-wide/16 v92, 0x0

    .line 14199
    .local v92, "otherPss":J
    const/16 v6, 0x11

    new-array v0, v6, [J

    move-object/from16 v81, v0

    .line 14201
    .local v81, "miscPss":[J
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v6, v6

    new-array v0, v6, [J

    move-object/from16 v89, v0

    .line 14202
    .local v89, "oomPss":[J
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    array-length v6, v6

    new-array v0, v6, [Ljava/util/ArrayList;

    move-object/from16 v88, v0

    check-cast v88, [Ljava/util/ArrayList;

    .line 14205
    .local v88, "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const-wide/16 v100, 0x0

    .line 14206
    .local v100, "totalPss":J
    const-wide/16 v66, 0x0

    .line 14208
    .local v66, "cachedPss":J
    const/16 v16, 0x0

    .line 14209
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    invoke-virtual/range {v96 .. v96}, Ljava/util/ArrayList;->size()I

    move-result v6

    add-int/lit8 v73, v6, -0x1

    .restart local v73    # "i":I
    :goto_6
    if-ltz v73, :cond_25

    .line 14210
    move-object/from16 v0, v96

    move/from16 v1, v73

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v97

    check-cast v97, Lcom/android/server/am/ProcessRecord;

    .line 14215
    .local v97, "r":Lcom/android/server/am/ProcessRecord;
    monitor-enter p0

    .line 14216
    :try_start_4
    move-object/from16 v0, v97

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v21, v0

    .line 14217
    .local v21, "thread":Landroid/app/IApplicationThread;
    move-object/from16 v0, v97

    iget v0, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    move/from16 v20, v0

    .line 14218
    .restart local v20    # "pid":I
    invoke-virtual/range {v97 .. v97}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v83

    .line 14219
    .local v83, "oomAdj":I
    move-object/from16 v0, v97

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_1b

    const/16 v35, 0x1

    .line 14220
    .local v35, "hasActivities":Z
    :goto_7
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 14221
    if-eqz v21, :cond_23

    .line 14222
    if-nez v12, :cond_16

    if-eqz v70, :cond_16

    .line 14223
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "\n** MEMINFO in pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " ["

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v97

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, "] **"

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14225
    :cond_16
    if-nez v16, :cond_17

    .line 14226
    new-instance v16, Landroid/os/Debug$MemoryInfo;

    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    invoke-direct/range {v16 .. v16}, Landroid/os/Debug$MemoryInfo;-><init>()V

    .line 14228
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_17
    if-nez v70, :cond_18

    if-nez p5, :cond_1c

    if-nez v87, :cond_1c

    .line 14229
    :cond_18
    move/from16 v0, v20

    move-object/from16 v1, v16

    invoke-static {v0, v1}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 14234
    :goto_8
    if-eqz v70, :cond_19

    .line 14235
    if-eqz v76, :cond_1d

    .line 14236
    move-object/from16 v0, v97

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v21, v0

    .end local v21    # "thread":Landroid/app/IApplicationThread;
    const-wide/16 v22, 0x0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    const-wide/16 v28, 0x0

    const-wide/16 v30, 0x0

    const-wide/16 v32, 0x0

    move-object/from16 v15, p2

    move/from16 v17, v12

    invoke-static/range {v15 .. v33}, Landroid/app/ActivityThread;->dumpMemInfoTable(Ljava/io/PrintWriter;Landroid/os/Debug$MemoryInfo;ZZZILjava/lang/String;JJJJJJ)V

    .line 14238
    if-eqz v12, :cond_19

    .line 14239
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14255
    :cond_19
    :goto_9
    invoke-virtual/range {v16 .. v16}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v24, v0

    .line 14256
    .local v24, "myTotalPss":J
    invoke-virtual/range {v16 .. v16}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v26, v0

    .line 14258
    .local v26, "myTotalUss":J
    monitor-enter p0

    .line 14259
    :try_start_5
    move-object/from16 v0, v97

    iget-object v6, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v6, :cond_1a

    invoke-virtual/range {v97 .. v97}, Lcom/android/server/am/ProcessRecord;->getSetAdjWithServices()I

    move-result v6

    move/from16 v0, v83

    if-ne v0, v6, :cond_1a

    .line 14261
    move-object/from16 v0, v97

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    move-object/from16 v23, v0

    const/16 v28, 0x1

    move-object/from16 v0, v97

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v29, v0

    invoke-virtual/range {v23 .. v29}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 14263
    :cond_1a
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    .line 14265
    if-nez v12, :cond_23

    if-eqz v16, :cond_23

    .line 14266
    add-long v100, v100, v24

    .line 14267
    new-instance v29, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v97

    iget-object v7, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, " (pid "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move/from16 v0, v20

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    if-eqz v35, :cond_1e

    const-string v6, " / activities)"

    :goto_a
    invoke-virtual {v7, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v30

    move-object/from16 v0, v97

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v31, v0

    move-wide/from16 v32, v24

    move/from16 v34, v20

    invoke-direct/range {v29 .. v35}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JIZ)V

    .line 14270
    .local v29, "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v46

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14271
    move-object/from16 v0, v95

    move/from16 v1, v20

    move-object/from16 v2, v29

    invoke-virtual {v0, v1, v2}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    .line 14273
    move-object/from16 v0, v16

    iget v6, v0, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v6, v6

    add-long v84, v84, v6

    .line 14274
    move-object/from16 v0, v16

    iget v6, v0, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v6, v6

    add-long v68, v68, v6

    .line 14275
    move-object/from16 v0, v16

    iget v6, v0, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v6, v6

    add-long v92, v92, v6

    .line 14276
    const/16 v42, 0x0

    .local v42, "j":I
    :goto_b
    const/16 v6, 0x11

    move/from16 v0, v42

    if-ge v0, v6, :cond_1f

    .line 14277
    move-object/from16 v0, v16

    move/from16 v1, v42

    invoke-virtual {v0, v1}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v78, v0

    .line 14278
    .local v78, "mem":J
    aget-wide v6, v81, v42

    add-long v6, v6, v78

    aput-wide v6, v81, v42

    .line 14279
    sub-long v92, v92, v78

    .line 14276
    add-int/lit8 v42, v42, 0x1

    goto :goto_b

    .line 14219
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v35    # "hasActivities":Z
    .end local v42    # "j":I
    .end local v78    # "mem":J
    .restart local v21    # "thread":Landroid/app/IApplicationThread;
    :cond_1b
    const/16 v35, 0x0

    goto/16 :goto_7

    .line 14220
    .end local v20    # "pid":I
    .end local v21    # "thread":Landroid/app/IApplicationThread;
    .end local v83    # "oomAdj":I
    :catchall_1
    move-exception v6

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    throw v6

    .line 14231
    .restart local v20    # "pid":I
    .restart local v21    # "thread":Landroid/app/IApplicationThread;
    .restart local v35    # "hasActivities":Z
    .restart local v83    # "oomAdj":I
    :cond_1c
    const/4 v6, 0x0

    move/from16 v0, v20

    move-object/from16 v1, v99

    invoke-static {v0, v1, v6}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v6

    long-to-int v6, v6

    move-object/from16 v0, v16

    iput v6, v0, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    .line 14232
    const/4 v6, 0x0

    aget-wide v6, v99, v6

    long-to-int v6, v6

    move-object/from16 v0, v16

    iput v6, v0, Landroid/os/Debug$MemoryInfo;->dalvikPrivateDirty:I

    goto/16 :goto_8

    .line 14243
    :cond_1d
    :try_start_7
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    move-object/from16 v22, p1

    move-object/from16 v23, v16

    move/from16 v24, v12

    move/from16 v25, v18

    move/from16 v26, v19

    move-object/from16 v27, v74

    .line 14244
    invoke-interface/range {v21 .. v27}, Landroid/app/IApplicationThread;->dumpMemInfo(Ljava/io/FileDescriptor;Landroid/os/Debug$MemoryInfo;ZZZ[Ljava/lang/String;)V
    :try_end_7
    .catch Landroid/os/RemoteException; {:try_start_7 .. :try_end_7} :catch_0

    goto/16 :goto_9

    .line 14246
    :catch_0
    move-exception v71

    .line 14247
    .local v71, "e":Landroid/os/RemoteException;
    if-nez v12, :cond_19

    .line 14248
    const-string v6, "Got RemoteException!"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14249
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->flush()V

    goto/16 :goto_9

    .line 14263
    .end local v21    # "thread":Landroid/app/IApplicationThread;
    .end local v71    # "e":Landroid/os/RemoteException;
    .restart local v24    # "myTotalPss":J
    .restart local v26    # "myTotalUss":J
    :catchall_2
    move-exception v6

    :try_start_8
    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    throw v6

    .line 14267
    :cond_1e
    const-string v6, ")"

    goto/16 :goto_a

    .line 14282
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v42    # "j":I
    :cond_1f
    const/16 v6, 0x9

    move/from16 v0, v83

    if-lt v0, v6, :cond_20

    .line 14283
    add-long v66, v66, v24

    .line 14286
    :cond_20
    const/16 v86, 0x0

    .local v86, "oomIndex":I
    :goto_c
    move-object/from16 v0, v89

    array-length v6, v0

    move/from16 v0, v86

    if-ge v0, v6, :cond_23

    .line 14287
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v6, v6, v86

    move/from16 v0, v83

    if-le v0, v6, :cond_21

    move-object/from16 v0, v89

    array-length v6, v0

    add-int/lit8 v6, v6, -0x1

    move/from16 v0, v86

    if-ne v0, v6, :cond_24

    .line 14289
    :cond_21
    aget-wide v6, v89, v86

    add-long v6, v6, v24

    aput-wide v6, v89, v86

    .line 14290
    aget-object v6, v88, v86

    if-nez v6, :cond_22

    .line 14291
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    aput-object v6, v88, v86

    .line 14293
    :cond_22
    aget-object v6, v88, v86

    move-object/from16 v0, v29

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14209
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v42    # "j":I
    .end local v86    # "oomIndex":I
    :cond_23
    add-int/lit8 v73, v73, -0x1

    goto/16 :goto_6

    .line 14286
    .restart local v24    # "myTotalPss":J
    .restart local v26    # "myTotalUss":J
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v42    # "j":I
    .restart local v86    # "oomIndex":I
    :cond_24
    add-int/lit8 v86, v86, 0x1

    goto :goto_c

    .line 14301
    .end local v20    # "pid":I
    .end local v24    # "myTotalPss":J
    .end local v26    # "myTotalUss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v35    # "hasActivities":Z
    .end local v42    # "j":I
    .end local v83    # "oomAdj":I
    .end local v86    # "oomIndex":I
    .end local v97    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_25
    const-wide/16 v64, 0x0

    .line 14303
    .local v64, "nativeProcTotalPss":J
    if-nez v12, :cond_a

    invoke-virtual/range {v96 .. v96}, Ljava/util/ArrayList;->size()I

    move-result v6

    const/4 v7, 0x1

    if-le v6, v7, :cond_a

    if-nez v94, :cond_a

    .line 14306
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    .line 14307
    const/16 v16, 0x0

    .line 14308
    move-object/from16 v0, p0

    iget-object v7, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v7

    .line 14309
    :try_start_9
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v6}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    move-result v14

    .line 14310
    .restart local v14    # "N":I
    const/16 v73, 0x0

    move-object/from16 v80, v16

    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .local v80, "mi":Landroid/os/Debug$MemoryInfo;
    :goto_d
    move/from16 v0, v73

    if-ge v0, v14, :cond_29

    .line 14311
    :try_start_a
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v73

    invoke-virtual {v6, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v98

    .line 14312
    .restart local v98    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v98

    iget-wide v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    move-wide/from16 v22, v0

    const-wide/16 v30, 0x0

    cmp-long v6, v22, v30

    if-lez v6, :cond_43

    move-object/from16 v0, v98

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v95

    invoke-virtual {v0, v6}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v6

    if-gez v6, :cond_43

    .line 14313
    if-nez v80, :cond_42

    .line 14314
    new-instance v16, Landroid/os/Debug$MemoryInfo;

    invoke-direct/range {v16 .. v16}, Landroid/os/Debug$MemoryInfo;-><init>()V
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_5

    .line 14316
    .end local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    :goto_e
    if-nez p5, :cond_26

    if-nez v87, :cond_26

    .line 14317
    :try_start_b
    move-object/from16 v0, v98

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v16

    invoke-static {v6, v0}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 14323
    :goto_f
    invoke-virtual/range {v16 .. v16}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v24, v0

    .line 14324
    .restart local v24    # "myTotalPss":J
    add-long v100, v100, v24

    .line 14325
    add-long v64, v64, v24

    .line 14327
    new-instance v29, Lcom/android/server/am/ActivityManagerService$MemItem;

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    move-object/from16 v0, v98

    iget-object v15, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    invoke-virtual {v6, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v15, " (pid "

    invoke-virtual {v6, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, v98

    iget v15, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    invoke-virtual {v6, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v15, ")"

    invoke-virtual {v6, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v38

    move-object/from16 v0, v98

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v39, v0

    move-object/from16 v0, v98

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v42, v0

    const/16 v43, 0x0

    move-object/from16 v37, v29

    move-wide/from16 v40, v24

    invoke-direct/range {v37 .. v43}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JIZ)V

    .line 14329
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    move-object/from16 v0, v46

    move-object/from16 v1, v29

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14331
    move-object/from16 v0, v16

    iget v6, v0, Landroid/os/Debug$MemoryInfo;->nativePss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v84, v84, v22

    .line 14332
    move-object/from16 v0, v16

    iget v6, v0, Landroid/os/Debug$MemoryInfo;->dalvikPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v68, v68, v22

    .line 14333
    move-object/from16 v0, v16

    iget v6, v0, Landroid/os/Debug$MemoryInfo;->otherPss:I

    int-to-long v0, v6

    move-wide/from16 v22, v0

    add-long v92, v92, v22

    .line 14334
    const/16 v42, 0x0

    .restart local v42    # "j":I
    :goto_10
    const/16 v6, 0x11

    move/from16 v0, v42

    if-ge v0, v6, :cond_27

    .line 14335
    move-object/from16 v0, v16

    move/from16 v1, v42

    invoke-virtual {v0, v1}, Landroid/os/Debug$MemoryInfo;->getOtherPss(I)I

    move-result v6

    int-to-long v0, v6

    move-wide/from16 v78, v0

    .line 14336
    .restart local v78    # "mem":J
    aget-wide v22, v81, v42

    add-long v22, v22, v78

    aput-wide v22, v81, v42

    .line 14337
    sub-long v92, v92, v78

    .line 14334
    add-int/lit8 v42, v42, 0x1

    goto :goto_10

    .line 14319
    .end local v24    # "myTotalPss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v42    # "j":I
    .end local v78    # "mem":J
    :cond_26
    move-object/from16 v0, v98

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v15, 0x0

    move-object/from16 v0, v99

    invoke-static {v6, v0, v15}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v22

    move-wide/from16 v0, v22

    long-to-int v6, v0

    move-object/from16 v0, v16

    iput v6, v0, Landroid/os/Debug$MemoryInfo;->nativePss:I

    .line 14320
    const/4 v6, 0x0

    aget-wide v22, v99, v6

    move-wide/from16 v0, v22

    long-to-int v6, v0

    move-object/from16 v0, v16

    iput v6, v0, Landroid/os/Debug$MemoryInfo;->nativePrivateDirty:I

    goto/16 :goto_f

    .line 14346
    .end local v14    # "N":I
    .end local v98    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :catchall_3
    move-exception v6

    :goto_11
    monitor-exit v7
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_3

    throw v6

    .line 14339
    .restart local v14    # "N":I
    .restart local v24    # "myTotalPss":J
    .restart local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .restart local v42    # "j":I
    .restart local v98    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_27
    const/4 v6, 0x0

    :try_start_c
    aget-wide v22, v89, v6

    add-long v22, v22, v24

    aput-wide v22, v89, v6

    .line 14340
    const/4 v6, 0x0

    aget-object v6, v88, v6

    if-nez v6, :cond_28

    .line 14341
    const/4 v6, 0x0

    new-instance v15, Ljava/util/ArrayList;

    invoke-direct {v15}, Ljava/util/ArrayList;-><init>()V

    aput-object v15, v88, v6

    .line 14343
    :cond_28
    const/4 v6, 0x0

    aget-object v6, v88, v6

    move-object/from16 v0, v29

    invoke-virtual {v6, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_c
    .catchall {:try_start_c .. :try_end_c} :catchall_3

    .line 14310
    .end local v24    # "myTotalPss":J
    .end local v29    # "pssItem":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v42    # "j":I
    :goto_12
    add-int/lit8 v73, v73, 0x1

    move-object/from16 v80, v16

    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_d

    .line 14346
    .end local v98    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_29
    :try_start_d
    monitor-exit v7
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_5

    .line 14348
    new-instance v54, Ljava/util/ArrayList;

    invoke-direct/range {v54 .. v54}, Ljava/util/ArrayList;-><init>()V

    .line 14350
    .local v54, "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    new-instance v37, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v38, "Native"

    const-string v39, "Native"

    const/16 v42, -0x1

    move-wide/from16 v40, v84

    invoke-direct/range {v37 .. v42}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    move-object/from16 v0, v54

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14351
    new-instance v37, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v38, "Dalvik"

    const-string v39, "Dalvik"

    const/16 v42, -0x2

    move-wide/from16 v40, v68

    invoke-direct/range {v37 .. v42}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    move-object/from16 v0, v54

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14352
    new-instance v37, Lcom/android/server/am/ActivityManagerService$MemItem;

    const-string v38, "Unknown"

    const-string v39, "Unknown"

    const/16 v42, -0x3

    move-wide/from16 v40, v92

    invoke-direct/range {v37 .. v42}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    move-object/from16 v0, v54

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14353
    const/16 v42, 0x0

    .restart local v42    # "j":I
    :goto_13
    const/16 v6, 0x11

    move/from16 v0, v42

    if-ge v0, v6, :cond_2a

    .line 14354
    invoke-static/range {v42 .. v42}, Landroid/os/Debug$MemoryInfo;->getOtherLabel(I)Ljava/lang/String;

    move-result-object v38

    .line 14355
    .local v38, "label":Ljava/lang/String;
    new-instance v37, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v40, v81, v42

    move-object/from16 v39, v38

    invoke-direct/range {v37 .. v42}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    move-object/from16 v0, v54

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14353
    add-int/lit8 v42, v42, 0x1

    goto :goto_13

    .line 14358
    .end local v38    # "label":Ljava/lang/String;
    :cond_2a
    new-instance v50, Ljava/util/ArrayList;

    invoke-direct/range {v50 .. v50}, Ljava/util/ArrayList;-><init>()V

    .line 14359
    .local v50, "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    const/16 v42, 0x0

    :goto_14
    move-object/from16 v0, v89

    array-length v6, v0

    move/from16 v0, v42

    if-ge v0, v6, :cond_2d

    .line 14360
    aget-wide v6, v89, v42

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_2b

    .line 14361
    if-eqz v13, :cond_2c

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_COMPACT_LABEL:[Ljava/lang/String;

    aget-object v38, v6, v42

    .line 14363
    .restart local v38    # "label":Ljava/lang/String;
    :goto_15
    new-instance v36, Lcom/android/server/am/ActivityManagerService$MemItem;

    aget-wide v39, v89, v42

    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v41, v6, v42

    move-object/from16 v37, v38

    invoke-direct/range {v36 .. v41}, Lcom/android/server/am/ActivityManagerService$MemItem;-><init>(Ljava/lang/String;Ljava/lang/String;JI)V

    .line 14365
    .local v36, "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    aget-object v6, v88, v42

    move-object/from16 v0, v36

    iput-object v6, v0, Lcom/android/server/am/ActivityManagerService$MemItem;->subitems:Ljava/util/ArrayList;

    .line 14366
    move-object/from16 v0, v50

    move-object/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14359
    .end local v36    # "item":Lcom/android/server/am/ActivityManagerService$MemItem;
    .end local v38    # "label":Ljava/lang/String;
    :cond_2b
    add-int/lit8 v42, v42, 0x1

    goto :goto_14

    .line 14361
    :cond_2c
    sget-object v6, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v38, v6, v42

    goto :goto_15

    .line 14370
    :cond_2d
    if-nez p5, :cond_2e

    if-nez v87, :cond_2e

    if-nez v13, :cond_2e

    .line 14371
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14372
    const-string v6, "Total PSS by process:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14373
    const-string v44, "  "

    const-string v45, "proc"

    const/16 v47, 0x1

    move-object/from16 v43, p2

    move/from16 v48, v13

    invoke-static/range {v43 .. v48}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 14374
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14376
    :cond_2e
    if-nez v13, :cond_2f

    .line 14377
    const-string v6, "Total PSS by OOM adjustment:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14379
    :cond_2f
    const-string v48, "  "

    const-string v49, "oom"

    const/16 v51, 0x0

    move-object/from16 v47, p2

    move/from16 v52, v13

    invoke-static/range {v47 .. v52}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 14380
    if-nez p5, :cond_31

    if-nez v87, :cond_31

    .line 14381
    if-eqz p6, :cond_3b

    move-object/from16 v51, p6

    .line 14382
    .local v51, "out":Ljava/io/PrintWriter;
    :goto_16
    if-nez v13, :cond_30

    .line 14383
    invoke-virtual/range {v51 .. v51}, Ljava/io/PrintWriter;->println()V

    .line 14384
    const-string v6, "Total PSS by category:"

    move-object/from16 v0, v51

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14386
    :cond_30
    const-string v52, "  "

    const-string v53, "cat"

    const/16 v55, 0x1

    move/from16 v56, v13

    invoke-static/range {v51 .. v56}, Lcom/android/server/am/ActivityManagerService;->dumpMemItems(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;ZZ)V

    .line 14388
    .end local v51    # "out":Ljava/io/PrintWriter;
    :cond_31
    if-nez v13, :cond_32

    .line 14389
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 14391
    :cond_32
    new-instance v77, Lcom/android/internal/util/MemInfoReader;

    invoke-direct/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .line 14392
    .local v77, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    .line 14393
    const-wide/16 v6, 0x0

    cmp-long v6, v64, v6

    if-lez v6, :cond_33

    .line 14394
    monitor-enter p0

    .line 14395
    :try_start_e
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    move-object/from16 v55, v0

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v56

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v58

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v60

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v62

    invoke-virtual/range {v55 .. v65}, Lcom/android/server/am/ProcessStatsService;->addSysMemUsageLocked(JJJJJ)V

    .line 14398
    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_4

    .line 14400
    :cond_33
    if-nez p5, :cond_34

    .line 14401
    if-nez v13, :cond_3c

    .line 14402
    const-string v6, "Total RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14403
    const-string v6, " kB (status "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14404
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    packed-switch v6, :pswitch_data_0

    .line 14418
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 14419
    const-string v6, ")"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14422
    :goto_17
    const-string v6, " Free RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    add-long v6, v6, v66

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14423
    const-string v6, " kB ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14424
    move-object/from16 v0, p2

    move-wide/from16 v1, v66

    invoke-virtual {v0, v1, v2}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " cached pss + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14425
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " cached kernel + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14426
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " free)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14434
    :cond_34
    :goto_18
    if-nez v13, :cond_35

    .line 14435
    const-string v6, " Used RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    sub-long v6, v100, v66

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v22

    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14436
    const-string v6, " kB ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14437
    sub-long v6, v100, v66

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " used pss + "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14438
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " kernel)\n"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14439
    const-string v6, " Lost RAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    sub-long v6, v6, v100

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    sub-long v6, v6, v22

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v22

    sub-long v6, v6, v22

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v22

    sub-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14441
    const-string v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14443
    :cond_35
    if-nez p5, :cond_41

    .line 14444
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_36

    .line 14445
    if-nez v13, :cond_3d

    .line 14446
    const-string v6, "     ZRAM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14447
    const-string v6, " kB physical used for "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14448
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v22

    sub-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14450
    const-string v6, " kB in swap ("

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14451
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14452
    const-string v6, " kB total swap)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14459
    :cond_36
    :goto_19
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v75

    .line 14460
    .local v75, "ksm":[J
    if-nez v13, :cond_3e

    .line 14461
    const/4 v6, 0x1

    aget-wide v6, v75, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-nez v6, :cond_37

    const/4 v6, 0x0

    aget-wide v6, v75, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-nez v6, :cond_37

    const/4 v6, 0x2

    aget-wide v6, v75, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-nez v6, :cond_37

    const/4 v6, 0x3

    aget-wide v6, v75, v6

    const-wide/16 v22, 0x0

    cmp-long v6, v6, v22

    if-eqz v6, :cond_38

    .line 14463
    :cond_37
    const-string v6, "      KSM: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x1

    aget-wide v6, v75, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14464
    const-string v6, " kB saved from shared "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14465
    const/4 v6, 0x0

    aget-wide v6, v75, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14466
    const-string v6, "           "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x2

    aget-wide v6, v75, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14467
    const-string v6, " kB unshared; "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14468
    const/4 v6, 0x3

    aget-wide v6, v75, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, " kB volatile"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 14470
    :cond_38
    const-string v6, "   Tuning: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14471
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 14472
    const-string v6, " (large "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14473
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 14474
    const-string v6, "), oom "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14475
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0xf

    invoke-virtual {v6, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v6

    const-wide/16 v22, 0x400

    div-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14476
    const-string v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14477
    const-string v6, ", restore limit "

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14478
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v6}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14479
    const-string v6, " kB"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14480
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v6

    if-eqz v6, :cond_39

    .line 14481
    const-string v6, " (low-ram)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14483
    :cond_39
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v6

    if-eqz v6, :cond_3a

    .line 14484
    const-string v6, " (high-end-gfx)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14486
    :cond_3a
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    move-object/from16 v16, v80

    .end local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_3

    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v75    # "ksm":[J
    .end local v77    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .restart local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_3b
    move-object/from16 v51, p2

    .line 14381
    goto/16 :goto_16

    .line 14398
    .restart local v77    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    :catchall_4
    move-exception v6

    :try_start_f
    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_4

    throw v6

    .line 14406
    :pswitch_0
    const-string v6, "normal)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_17

    .line 14409
    :pswitch_1
    const-string v6, "moderate)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_17

    .line 14412
    :pswitch_2
    const-string v6, "low)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_17

    .line 14415
    :pswitch_3
    const-string v6, "critical)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto/16 :goto_17

    .line 14428
    :cond_3c
    const-string v6, "ram,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14429
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v6

    add-long v6, v6, v66

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v22

    add-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14430
    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14431
    sub-long v6, v100, v66

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    goto/16 :goto_18

    .line 14454
    :cond_3d
    const-string v6, "zram,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getZramTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14455
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getSwapTotalSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14456
    invoke-virtual/range {v77 .. v77}, Lcom/android/internal/util/MemInfoReader;->getSwapFreeSizeKb()J

    move-result-wide v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    goto/16 :goto_19

    .line 14488
    .restart local v75    # "ksm":[J
    :cond_3e
    const-string v6, "ksm,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x1

    aget-wide v6, v75, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14489
    const/4 v6, 0x0

    aget-wide v6, v75, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x2

    aget-wide v6, v75, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14490
    const-string v6, ","

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const/4 v6, 0x3

    aget-wide v6, v75, v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->println(J)V

    .line 14491
    const-string v6, "tuning,"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14492
    invoke-static {}, Landroid/app/ActivityManager;->staticGetMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 14493
    const/16 v6, 0x2c

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(C)V

    .line 14494
    invoke-static {}, Landroid/app/ActivityManager;->staticGetLargeMemoryClass()I

    move-result v6

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(I)V

    .line 14495
    const/16 v6, 0x2c

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(C)V

    .line 14496
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0xf

    invoke-virtual {v6, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v6

    const-wide/16 v22, 0x400

    div-long v6, v6, v22

    move-object/from16 v0, p2

    invoke-virtual {v0, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 14497
    invoke-static {}, Landroid/app/ActivityManager;->isLowRamDeviceStatic()Z

    move-result v6

    if-eqz v6, :cond_3f

    .line 14498
    const-string v6, ",low-ram"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14500
    :cond_3f
    invoke-static {}, Landroid/app/ActivityManager;->isHighEndGfx()Z

    move-result v6

    if-eqz v6, :cond_40

    .line 14501
    const-string v6, ",high-end-gfx"

    move-object/from16 v0, p2

    invoke-virtual {v0, v6}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 14503
    :cond_40
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .end local v75    # "ksm":[J
    :cond_41
    move-object/from16 v16, v80

    .end local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_3

    .line 14346
    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v42    # "j":I
    .end local v50    # "oomMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v54    # "catMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v77    # "memInfo":Lcom/android/internal/util/MemInfoReader;
    .restart local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    :catchall_5
    move-exception v6

    move-object/from16 v16, v80

    .end local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_11

    .line 14141
    .end local v14    # "N":I
    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .end local v46    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v64    # "nativeProcTotalPss":J
    .end local v66    # "cachedPss":J
    .end local v68    # "dalvikPss":J
    .end local v73    # "i":I
    .end local v74    # "innerArgs":[Ljava/lang/String;
    .end local v81    # "miscPss":[J
    .end local v84    # "nativePss":J
    .end local v88    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v89    # "oomPss":[J
    .end local v92    # "otherPss":J
    .end local v95    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .end local v100    # "totalPss":J
    .restart local v72    # "findPid":I
    .restart local v82    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    :catch_1
    move-exception v6

    goto/16 :goto_1

    .end local v72    # "findPid":I
    .end local v82    # "nativeProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/internal/os/ProcessCpuTracker$Stats;>;"
    .restart local v14    # "N":I
    .restart local v46    # "procMems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v64    # "nativeProcTotalPss":J
    .restart local v66    # "cachedPss":J
    .restart local v68    # "dalvikPss":J
    .restart local v73    # "i":I
    .restart local v74    # "innerArgs":[Ljava/lang/String;
    .restart local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v81    # "miscPss":[J
    .restart local v84    # "nativePss":J
    .restart local v88    # "oomProcs":[Ljava/util/ArrayList;, "[Ljava/util/ArrayList<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v89    # "oomPss":[J
    .restart local v92    # "otherPss":J
    .restart local v95    # "procMemsMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$MemItem;>;"
    .restart local v98    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .restart local v100    # "totalPss":J
    :cond_42
    move-object/from16 v16, v80

    .end local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_e

    .end local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    :cond_43
    move-object/from16 v16, v80

    .end local v80    # "mi":Landroid/os/Debug$MemoryInfo;
    .restart local v16    # "mi":Landroid/os/Debug$MemoryInfo;
    goto/16 :goto_12

    .line 14404
    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
        :pswitch_1
        :pswitch_2
        :pswitch_3
    .end packed-switch
.end method

.method dumpAssociationsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V
    .locals 26
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpClient"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 12682
    const-string v23, "ACTIVITY MANAGER ASSOCIATIONS (dumpsys activity associations)"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12684
    const/4 v9, 0x0

    .line 12685
    .local v9, "dumpUid":I
    if-eqz p7, :cond_0

    .line 12686
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v18

    .line 12688
    .local v18, "pm":Landroid/content/pm/IPackageManager;
    const/16 v23, 0x0

    :try_start_0
    move-object/from16 v0, v18

    move-object/from16 v1, p7

    move/from16 v2, v23

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v9

    .line 12693
    .end local v18    # "pm":Landroid/content/pm/IPackageManager;
    :cond_0
    :goto_0
    const/16 v19, 0x0

    .line 12695
    .local v19, "printedAnything":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v16

    .line 12697
    .local v16, "now":J
    const/4 v12, 0x0

    .local v12, "i1":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Landroid/util/SparseArray;->size()I

    move-result v4

    .local v4, "N1":I
    :goto_1
    if-ge v12, v4, :cond_7

    .line 12698
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    move-object/from16 v23, v0

    move-object/from16 v0, v23

    invoke-virtual {v0, v12}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v22

    check-cast v22, Landroid/util/ArrayMap;

    .line 12700
    .local v22, "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    const/4 v13, 0x0

    .local v13, "i2":I
    invoke-virtual/range {v22 .. v22}, Landroid/util/ArrayMap;->size()I

    move-result v5

    .local v5, "N2":I
    :goto_2
    if-ge v13, v5, :cond_6

    .line 12701
    move-object/from16 v0, v22

    invoke-virtual {v0, v13}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v21

    check-cast v21, Landroid/util/SparseArray;

    .line 12703
    .local v21, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    const/4 v14, 0x0

    .local v14, "i3":I
    invoke-virtual/range {v21 .. v21}, Landroid/util/SparseArray;->size()I

    move-result v6

    .local v6, "N3":I
    :goto_3
    if-ge v14, v6, :cond_5

    .line 12704
    move-object/from16 v0, v21

    invoke-virtual {v0, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Landroid/util/ArrayMap;

    .line 12705
    .local v20, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    const/4 v15, 0x0

    .local v15, "i4":I
    invoke-virtual/range {v20 .. v20}, Landroid/util/ArrayMap;->size()I

    move-result v7

    .local v7, "N4":I
    :goto_4
    if-ge v15, v7, :cond_4

    .line 12706
    move-object/from16 v0, v20

    invoke-virtual {v0, v15}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ActivityManagerService$Association;

    .line 12707
    .local v8, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-eqz p7, :cond_2

    .line 12708
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v23

    move-object/from16 v0, v23

    move-object/from16 v1, p7

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v23

    if-nez v23, :cond_2

    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    move/from16 v23, v0

    invoke-static/range {v23 .. v23}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v23

    move/from16 v0, v23

    if-eq v0, v9, :cond_2

    .line 12705
    :cond_1
    :goto_5
    add-int/lit8 v15, v15, 0x1

    goto :goto_4

    .line 12713
    :cond_2
    const/16 v19, 0x1

    .line 12714
    const-string v23, "  "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12715
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetProcess:Ljava/lang/String;

    move-object/from16 v23, v0

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12716
    const-string v23, "/"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12717
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetUid:I

    move/from16 v23, v0

    move-object/from16 v0, p2

    move/from16 v1, v23

    invoke-static {v0, v1}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 12718
    const-string v23, " <- "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12719
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceProcess:Ljava/lang/String;

    move-object/from16 v23, v0

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12720
    const-string v23, "/"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12721
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mSourceUid:I

    move/from16 v23, v0

    move-object/from16 v0, p2

    move/from16 v1, v23

    invoke-static {v0, v1}, Landroid/os/UserHandle;->formatUid(Ljava/io/PrintWriter;I)V

    .line 12722
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12723
    const-string v23, "    via "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12724
    iget-object v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTargetComponent:Landroid/content/ComponentName;

    move-object/from16 v23, v0

    invoke-virtual/range {v23 .. v23}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v23

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12725
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12726
    const-string v23, "    "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12727
    iget-wide v10, v8, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    .line 12728
    .local v10, "dur":J
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    move/from16 v23, v0

    if-lez v23, :cond_3

    .line 12729
    iget-wide v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    move-wide/from16 v24, v0

    sub-long v24, v16, v24

    add-long v10, v10, v24

    .line 12731
    :cond_3
    move-object/from16 v0, p2

    invoke-static {v10, v11, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 12732
    const-string v23, " ("

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12733
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    move/from16 v23, v0

    move-object/from16 v0, p2

    move/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 12734
    const-string v23, " times)"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12735
    iget v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    move/from16 v23, v0

    if-lez v23, :cond_1

    .line 12736
    const-string v23, "    "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12737
    const-string v23, " Currently active: "

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12738
    iget-wide v0, v8, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    move-wide/from16 v24, v0

    sub-long v24, v16, v24

    move-wide/from16 v0, v24

    move-object/from16 v2, p2

    invoke-static {v0, v1, v2}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 12739
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto/16 :goto_5

    .line 12703
    .end local v8    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    .end local v10    # "dur":J
    :cond_4
    add-int/lit8 v14, v14, 0x1

    goto/16 :goto_3

    .line 12700
    .end local v7    # "N4":I
    .end local v15    # "i4":I
    .end local v20    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    :cond_5
    add-int/lit8 v13, v13, 0x1

    goto/16 :goto_2

    .line 12697
    .end local v6    # "N3":I
    .end local v14    # "i3":I
    .end local v21    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    :cond_6
    add-int/lit8 v12, v12, 0x1

    goto/16 :goto_1

    .line 12747
    .end local v5    # "N2":I
    .end local v13    # "i2":I
    .end local v22    # "targetComponents":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    :cond_7
    if-nez v19, :cond_8

    .line 12748
    const-string v23, "  (nothing)"

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12750
    :cond_8
    return-void

    .line 12689
    .end local v4    # "N1":I
    .end local v12    # "i1":I
    .end local v16    # "now":J
    .end local v19    # "printedAnything":Z
    .restart local v18    # "pm":Landroid/content/pm/IPackageManager;
    :catch_0
    move-exception v23

    goto/16 :goto_0
.end method

.method dumpBroadcastsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 25
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13426
    const/4 v9, 0x0

    .line 13427
    .local v9, "needSep":Z
    const/16 v19, 0x0

    .line 13428
    .local v19, "onlyHistory":Z
    const/16 v21, 0x0

    .line 13430
    .local v21, "printedAnything":Z
    const-string v3, "history"

    move-object/from16 v0, p6

    invoke-virtual {v3, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 13431
    move-object/from16 v0, p3

    array-length v3, v0

    move/from16 v0, p4

    if-ge v0, v3, :cond_0

    const-string v3, "-s"

    aget-object v5, p3, p4

    invoke-virtual {v3, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 13432
    const/16 p5, 0x0

    .line 13434
    :cond_0
    const/16 v19, 0x1

    .line 13435
    const/16 p6, 0x0

    .line 13438
    :cond_1
    const-string v3, "ACTIVITY MANAGER BROADCAST STATE (dumpsys activity broadcasts)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13439
    if-nez v19, :cond_6

    if-eqz p5, :cond_6

    .line 13440
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->size()I

    move-result v3

    if-lez v3, :cond_5

    .line 13441
    const/16 v20, 0x0

    .line 13442
    .local v20, "printed":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-virtual {v3}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v17

    .line 13443
    .local v17, "it":Ljava/util/Iterator;
    :cond_2
    :goto_0
    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 13444
    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v23

    check-cast v23, Lcom/android/server/am/ReceiverList;

    .line 13445
    .local v23, "r":Lcom/android/server/am/ReceiverList;
    if-eqz p6, :cond_3

    move-object/from16 v0, v23

    iget-object v3, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_2

    move-object/from16 v0, v23

    iget-object v3, v0, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_2

    .line 13449
    :cond_3
    if-nez v20, :cond_4

    .line 13450
    const-string v3, "  Registered Receivers:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13451
    const/4 v9, 0x1

    .line 13452
    const/16 v20, 0x1

    .line 13453
    const/16 v21, 0x1

    .line 13455
    :cond_4
    const-string v3, "  * "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v23

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13456
    const-string v3, "    "

    move-object/from16 v0, v23

    move-object/from16 v1, p2

    invoke-virtual {v0, v1, v3}, Lcom/android/server/am/ReceiverList;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_0

    .line 13460
    .end local v17    # "it":Ljava/util/Iterator;
    .end local v20    # "printed":Z
    .end local v23    # "r":Lcom/android/server/am/ReceiverList;
    :cond_5
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    if-eqz v9, :cond_7

    const-string v4, "\n  Receiver Resolver Table:"

    :goto_1
    const-string v5, "    "

    const/4 v7, 0x0

    const/4 v8, 0x0

    move-object/from16 v3, p2

    move-object/from16 v6, p6

    invoke-virtual/range {v2 .. v8}, Lcom/android/server/IntentResolver;->dump(Ljava/io/PrintWriter;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZZ)Z

    move-result v3

    if-eqz v3, :cond_6

    .line 13463
    const/4 v9, 0x1

    .line 13464
    const/16 v21, 0x1

    .line 13468
    :cond_6
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v11, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v0, v11

    move/from16 v18, v0

    .local v18, "len$":I
    const/4 v15, 0x0

    .local v15, "i$":I
    :goto_2
    move/from16 v0, v18

    if-ge v15, v0, :cond_8

    aget-object v2, v11, v15

    .local v2, "q":Lcom/android/server/am/BroadcastQueue;
    move-object/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move/from16 v6, p4

    move/from16 v7, p5

    move-object/from16 v8, p6

    .line 13469
    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/BroadcastQueue;->dumpLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;Z)Z

    move-result v9

    .line 13470
    or-int v21, v21, v9

    .line 13468
    add-int/lit8 v15, v15, 0x1

    goto :goto_2

    .line 13460
    .end local v2    # "q":Lcom/android/server/am/BroadcastQueue;
    .end local v11    # "arr$":[Lcom/android/server/am/BroadcastQueue;
    .end local v15    # "i$":I
    .end local v18    # "len$":I
    :cond_7
    const-string v4, "  Receiver Resolver Table:"

    goto :goto_1

    .line 13473
    .restart local v11    # "arr$":[Lcom/android/server/am/BroadcastQueue;
    .restart local v15    # "i$":I
    .restart local v18    # "len$":I
    :cond_8
    const/4 v9, 0x1

    .line 13475
    if-nez v19, :cond_e

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    if-eqz v3, :cond_e

    if-nez p6, :cond_e

    .line 13476
    const/16 v24, 0x0

    .end local v15    # "i$":I
    .local v24, "user":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    invoke-virtual {v3}, Landroid/util/SparseArray;->size()I

    move-result v3

    move/from16 v0, v24

    if-ge v0, v3, :cond_e

    .line 13477
    if-eqz v9, :cond_9

    .line 13478
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13480
    :cond_9
    const/4 v9, 0x1

    .line 13481
    const/16 v21, 0x1

    .line 13482
    const-string v3, "  Sticky broadcasts for user "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13483
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(I)V

    const-string v3, ":"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13484
    new-instance v4, Ljava/lang/StringBuilder;

    const/16 v3, 0x80

    invoke-direct {v4, v3}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 13486
    .local v4, "sb":Ljava/lang/StringBuilder;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, v24

    invoke-virtual {v3, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/ArrayMap;

    invoke-virtual {v3}, Landroid/util/ArrayMap;->entrySet()Ljava/util/Set;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v15

    .local v15, "i$":Ljava/util/Iterator;
    :cond_a
    :goto_4
    invoke-interface {v15}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_d

    invoke-interface {v15}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Ljava/util/Map$Entry;

    .line 13487
    .local v13, "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    const-string v3, "  * Sticky action "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-interface {v13}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13488
    if-eqz p5, :cond_c

    .line 13489
    const-string v3, ":"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13490
    invoke-interface {v13}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Ljava/util/ArrayList;

    .line 13491
    .local v16, "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    invoke-virtual/range {v16 .. v16}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 13492
    .local v10, "N":I
    const/4 v14, 0x0

    .local v14, "i":I
    :goto_5
    if-ge v14, v10, :cond_a

    .line 13493
    const/4 v3, 0x0

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->setLength(I)V

    .line 13494
    const-string v3, "    Intent: "

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13495
    move-object/from16 v0, v16

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual/range {v3 .. v8}, Landroid/content/Intent;->toShortString(Ljava/lang/StringBuilder;ZZZZ)V

    .line 13496
    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13497
    move-object/from16 v0, v16

    invoke-virtual {v0, v14}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getExtras()Landroid/os/Bundle;

    move-result-object v12

    .line 13498
    .local v12, "bundle":Landroid/os/Bundle;
    if-eqz v12, :cond_b

    .line 13499
    const-string v3, "      "

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13500
    invoke-virtual {v12}, Landroid/os/Bundle;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13492
    :cond_b
    add-int/lit8 v14, v14, 0x1

    goto :goto_5

    .line 13504
    .end local v10    # "N":I
    .end local v12    # "bundle":Landroid/os/Bundle;
    .end local v14    # "i":I
    .end local v16    # "intents":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_c
    const-string v3, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_4

    .line 13476
    .end local v13    # "ent":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    :cond_d
    add-int/lit8 v24, v24, 0x1

    goto/16 :goto_3

    .line 13510
    .end local v4    # "sb":Ljava/lang/StringBuilder;
    .end local v15    # "i$":Ljava/util/Iterator;
    .end local v24    # "user":I
    :cond_e
    if-nez v19, :cond_10

    if-eqz p5, :cond_10

    .line 13511
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13512
    move-object/from16 v0, p0

    iget-object v11, v0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    array-length v0, v11

    move/from16 v18, v0

    const/4 v15, 0x0

    .local v15, "i$":I
    :goto_6
    move/from16 v0, v18

    if-ge v15, v0, :cond_f

    aget-object v22, v11, v15

    .line 13513
    .local v22, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mBroadcastsScheduled ["

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v22

    iget-object v5, v0, Lcom/android/server/am/BroadcastQueue;->mQueueName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "]="

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v22

    iget-boolean v5, v0, Lcom/android/server/am/BroadcastQueue;->mBroadcastsScheduled:Z

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13512
    add-int/lit8 v15, v15, 0x1

    goto :goto_6

    .line 13516
    .end local v22    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_f
    const-string v3, "  mHandler:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13517
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v5, Landroid/util/PrintWriterPrinter;

    move-object/from16 v0, p2

    invoke-direct {v5, v0}, Landroid/util/PrintWriterPrinter;-><init>(Ljava/io/PrintWriter;)V

    const-string v6, "    "

    invoke-virtual {v3, v5, v6}, Lcom/android/server/am/ActivityManagerService$MainHandler;->dump(Landroid/util/Printer;Ljava/lang/String;)V

    .line 13518
    const/4 v9, 0x1

    .line 13519
    const/16 v21, 0x1

    .line 13522
    .end local v15    # "i$":I
    :cond_10
    if-nez v21, :cond_11

    .line 13523
    const-string v3, "  (nothing)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13525
    :cond_11
    return-void
.end method

.method final dumpDbInfo(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    const/4 v7, 0x0

    .line 13887
    invoke-virtual {p0, p2, v7, v7, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v2

    .line 13888
    .local v2, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v2, :cond_1

    .line 13889
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "No process found for: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    aget-object v6, p3, v7

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13917
    :cond_0
    return-void

    .line 13893
    :cond_1
    const-string v5, "Applications Database Info:"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13895
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v5

    add-int/lit8 v1, v5, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    .line 13896
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 13897
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v5, :cond_2

    .line 13898
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "\n** Database info for pid "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget v6, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " ["

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, "] **"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13899
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 13901
    :try_start_0
    new-instance v4, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v4}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 13903
    .local v4, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    iget-object v5, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v4}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v6

    invoke-virtual {v6}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v6

    invoke-interface {v5, v6, p3}, Landroid/app/IApplicationThread;->dumpDbInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V

    .line 13904
    invoke-virtual {v4, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13906
    :try_start_2
    invoke-virtual {v4}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 13895
    .end local v4    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_2
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 13906
    .restart local v4    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_0
    move-exception v5

    invoke-virtual {v4}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v5
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 13908
    .end local v4    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v0

    .line 13909
    .local v0, "e":Ljava/io/IOException;
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Failure while dumping the app: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13910
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 13911
    .end local v0    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 13912
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Got a RemoteException while dumping the app "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13913
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1
.end method

.method final dumpGraphicsHardwareUsage(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V
    .locals 12
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;

    .prologue
    const/4 v11, 0x0

    .line 13851
    invoke-virtual {p0, p2, v11, v11, p3}, Lcom/android/server/am/ActivityManagerService;->collectProcesses(Ljava/io/PrintWriter;IZ[Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v2

    .line 13852
    .local v2, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v2, :cond_1

    .line 13853
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "No process found for: "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    aget-object v10, p3, v11

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13884
    :cond_0
    return-void

    .line 13857
    :cond_1
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .line 13858
    .local v8, "uptime":J
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v4

    .line 13859
    .local v4, "realtime":J
    const-string v7, "Applications Graphics Acceleration Info:"

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13860
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Uptime: "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v10, " Realtime: "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13862
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v7

    add-int/lit8 v1, v7, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_0

    .line 13863
    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 13864
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v7, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_2

    .line 13865
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "\n** Graphics info for pid "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget v10, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v10, " ["

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    iget-object v10, v3, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v10, "] **"

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13866
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    .line 13868
    :try_start_0
    new-instance v6, Lcom/android/internal/os/TransferPipe;

    invoke-direct {v6}, Lcom/android/internal/os/TransferPipe;-><init>()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 13870
    .local v6, "tp":Lcom/android/internal/os/TransferPipe;
    :try_start_1
    iget-object v7, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {v6}, Lcom/android/internal/os/TransferPipe;->getWriteFd()Landroid/os/ParcelFileDescriptor;

    move-result-object v10

    invoke-virtual {v10}, Landroid/os/ParcelFileDescriptor;->getFileDescriptor()Ljava/io/FileDescriptor;

    move-result-object v10

    invoke-interface {v7, v10, p3}, Landroid/app/IApplicationThread;->dumpGfxInfo(Ljava/io/FileDescriptor;[Ljava/lang/String;)V

    .line 13871
    invoke-virtual {v6, p1}, Lcom/android/internal/os/TransferPipe;->go(Ljava/io/FileDescriptor;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 13873
    :try_start_2
    invoke-virtual {v6}, Lcom/android/internal/os/TransferPipe;->kill()V

    .line 13862
    .end local v6    # "tp":Lcom/android/internal/os/TransferPipe;
    :cond_2
    :goto_1
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 13873
    .restart local v6    # "tp":Lcom/android/internal/os/TransferPipe;
    :catchall_0
    move-exception v7

    invoke-virtual {v6}, Lcom/android/internal/os/TransferPipe;->kill()V

    throw v7
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1

    .line 13875
    .end local v6    # "tp":Lcom/android/internal/os/TransferPipe;
    :catch_0
    move-exception v0

    .line 13876
    .local v0, "e":Ljava/io/IOException;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Failure while dumping the app: "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13877
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1

    .line 13878
    .end local v0    # "e":Ljava/io/IOException;
    :catch_1
    move-exception v0

    .line 13879
    .local v0, "e":Landroid/os/RemoteException;
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "Got a RemoteException while dumping the app "

    invoke-virtual {v7, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {p2, v7}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13880
    invoke-virtual {p2}, Ljava/io/PrintWriter;->flush()V

    goto :goto_1
.end method

.method public dumpHeap(Ljava/lang/String;IZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)Z
    .locals 6
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "managed"    # Z
    .param p4, "path"    # Ljava/lang/String;
    .param p5, "fd"    # Landroid/os/ParcelFileDescriptor;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 18737
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 18740
    :try_start_1
    const-string v3, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_1

    .line 18742
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 18765
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v3
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 18766
    :catch_0
    move-exception v0

    .line 18767
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_3
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Process disappeared"

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 18769
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_1
    move-exception v3

    if-eqz p5, :cond_0

    .line 18771
    :try_start_4
    invoke-virtual {p5}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_2

    .line 18773
    :cond_0
    :goto_0
    throw v3

    .line 18746
    :cond_1
    if-nez p5, :cond_2

    .line 18747
    :try_start_5
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "null fd"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 18750
    :cond_2
    const-string v3, "dumpHeap"

    invoke-direct {p0, p1, p2, v3}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 18751
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_3

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_4

    .line 18752
    :cond_3
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 18755
    :cond_4
    const-string v3, "1"

    const-string v4, "ro.debuggable"

    const-string v5, "0"

    invoke-static {v4, v5}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 18756
    .local v1, "isDebuggable":Z
    if-nez v1, :cond_5

    .line 18757
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x2

    if-nez v3, :cond_5

    .line 18758
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Process not debuggable: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 18762
    :cond_5
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p3, p4, p5}, Landroid/app/IApplicationThread;->dumpHeap(ZLjava/lang/String;Landroid/os/ParcelFileDescriptor;)V

    .line 18763
    const/4 p5, 0x0

    .line 18764
    const/4 v3, 0x1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 18769
    if-eqz p5, :cond_6

    .line 18771
    :try_start_6
    invoke-virtual {p5}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1

    .line 18773
    :cond_6
    :goto_1
    return v3

    .line 18772
    :catch_1
    move-exception v4

    goto :goto_1

    .end local v1    # "isDebuggable":Z
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_2
    move-exception v4

    goto :goto_0
.end method

.method dumpOomLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZ)Z
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z

    .prologue
    .line 13204
    const/4 v5, 0x0

    .line 13206
    .local v5, "needSep":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lez v0, :cond_2

    .line 13207
    if-eqz v5, :cond_0

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 13208
    :cond_0
    const/4 v5, 0x1

    .line 13209
    const-string v0, "  OOM levels:"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13210
    const-string v0, "SYSTEM_ADJ"

    const/16 v1, -0x10

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13211
    const-string v0, "PERSISTENT_PROC_ADJ"

    const/16 v1, -0xc

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13212
    const-string v0, "PERSISTENT_SERVICE_ADJ"

    const/16 v1, -0xb

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13213
    const-string v0, "FOREGROUND_APP_ADJ"

    const/4 v1, 0x0

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13214
    const-string v0, "VISIBLE_APP_ADJ"

    const/4 v1, 0x1

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13215
    const-string v0, "PERCEPTIBLE_APP_ADJ"

    const/4 v1, 0x2

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13216
    const-string v0, "BACKUP_APP_ADJ"

    const/4 v1, 0x3

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13217
    const-string v0, "HEAVY_WEIGHT_APP_ADJ"

    const/4 v1, 0x4

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13218
    const-string v0, "SERVICE_ADJ"

    const/4 v1, 0x5

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13219
    const-string v0, "HOME_APP_ADJ"

    const/4 v1, 0x6

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13220
    const-string v0, "PREVIOUS_APP_ADJ"

    const/4 v1, 0x7

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13221
    const-string v0, "SERVICE_B_ADJ"

    const/16 v1, 0x8

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13222
    const-string v0, "CACHED_APP_MIN_ADJ"

    const/16 v1, 0x9

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13223
    const-string v0, "CACHED_APP_MAX_ADJ"

    const/16 v1, 0xf

    invoke-virtual {p0, p2, v0, v1}, Lcom/android/server/am/ActivityManagerService;->printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V

    .line 13225
    if-eqz v5, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 13226
    :cond_1
    const-string v0, "  Process OOM control ("

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13227
    const-string v0, " total, non-act at "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13228
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr v0, v1

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13229
    const-string v0, ", non-svc at "

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13230
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v0, v1

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->print(I)V

    .line 13231
    const-string v0, "):"

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13232
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const-string v3, "    "

    const-string v4, "Proc"

    const-string v5, "PERS"

    .end local v5    # "needSep":Z
    const/4 v6, 0x1

    const/4 v7, 0x0

    move-object v0, p2

    move-object v1, p0

    invoke-static/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 13233
    const/4 v5, 0x1

    .line 13236
    .restart local v5    # "needSep":Z
    :cond_2
    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v4, p4

    move v6, p5

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z

    .line 13238
    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 13239
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  mHomeProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13240
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  mPreviousProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13241
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_3

    .line 13242
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "  mHeavyWeightProcess: "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p2, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13245
    :cond_3
    const/4 v0, 0x1

    return v0
.end method

.method dumpPendingIntentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 5
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13599
    const/4 v1, 0x0

    .line 13601
    .local v1, "printed":Z
    const-string v4, "ACTIVITY MANAGER PENDING INTENTS (dumpsys activity intents)"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13603
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    move-result v4

    if-lez v4, :cond_4

    .line 13604
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v4}, Ljava/util/HashMap;->values()Ljava/util/Collection;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v0

    .line 13606
    .local v0, "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    :cond_0
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_4

    .line 13607
    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/lang/ref/WeakReference;

    .line 13608
    .local v3, "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-eqz v3, :cond_2

    invoke-virtual {v3}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/PendingIntentRecord;

    move-object v2, v4

    .line 13609
    .local v2, "rec":Lcom/android/server/am/PendingIntentRecord;
    :goto_1
    if-eqz p6, :cond_1

    if-eqz v2, :cond_0

    iget-object v4, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;

    invoke-virtual {p6, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 13613
    :cond_1
    const/4 v1, 0x1

    .line 13614
    if-eqz v2, :cond_3

    .line 13615
    const-string v4, "  * "

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v2}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13616
    if-eqz p5, :cond_0

    .line 13617
    const-string v4, "    "

    invoke-virtual {v2, p2, v4}, Lcom/android/server/am/PendingIntentRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_0

    .line 13608
    .end local v2    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_2
    const/4 v2, 0x0

    goto :goto_1

    .line 13620
    .restart local v2    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_3
    const-string v4, "  * "

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v3}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_0

    .line 13625
    .end local v0    # "it":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;>;"
    .end local v2    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v3    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    :cond_4
    if-nez v1, :cond_5

    .line 13626
    const-string v4, "  (nothing)"

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13628
    :cond_5
    return-void
.end method

.method dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 41
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 12754
    const/4 v9, 0x0

    .line 12755
    .local v9, "needSep":Z
    const/16 v33, 0x0

    .line 12756
    .local v33, "printedAnything":Z
    const/16 v26, 0x0

    .line 12758
    .local v26, "numPers":I
    const-string v4, "ACTIVITY MANAGER RUNNING PROCESSES (dumpsys activity processes)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12760
    if-eqz p5, :cond_5

    .line 12761
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 12762
    .local v14, "NP":I
    const/16 v20, 0x0

    .local v20, "ip":I
    :goto_0
    move/from16 v0, v20

    if-ge v0, v14, :cond_5

    .line 12763
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    move/from16 v0, v20

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v34

    check-cast v34, Landroid/util/SparseArray;

    .line 12764
    .local v34, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual/range {v34 .. v34}, Landroid/util/SparseArray;->size()I

    move-result v13

    .line 12765
    .local v13, "NA":I
    const/16 v18, 0x0

    .local v18, "ia":I
    :goto_1
    move/from16 v0, v18

    if-ge v0, v13, :cond_4

    .line 12766
    move-object/from16 v0, v34

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v36

    check-cast v36, Lcom/android/server/am/ProcessRecord;

    .line 12767
    .local v36, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_1

    move-object/from16 v0, v36

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1

    .line 12765
    :cond_0
    :goto_2
    add-int/lit8 v18, v18, 0x1

    goto :goto_1

    .line 12770
    :cond_1
    if-nez v9, :cond_2

    .line 12771
    const-string v4, "  All known processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12772
    const/4 v9, 0x1

    .line 12773
    const/16 v33, 0x1

    .line 12775
    :cond_2
    move-object/from16 v0, v36

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_3

    const-string v4, "  *PERS*"

    :goto_3
    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12776
    const-string v4, " UID "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v34

    move/from16 v1, v18

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 12777
    const-string v4, " "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12778
    const-string v4, "    "

    move-object/from16 v0, v36

    move-object/from16 v1, p2

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ProcessRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    .line 12779
    move-object/from16 v0, v36

    iget-boolean v4, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v4, :cond_0

    .line 12780
    add-int/lit8 v26, v26, 0x1

    goto :goto_2

    .line 12775
    :cond_3
    const-string v4, "  *APP*"

    goto :goto_3

    .line 12762
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_4
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_0

    .line 12786
    .end local v13    # "NA":I
    .end local v14    # "NP":I
    .end local v18    # "ia":I
    .end local v20    # "ip":I
    .end local v34    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_5
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_9

    .line 12787
    const/16 v32, 0x0

    .line 12788
    .local v32, "printed":Z
    const/16 v16, 0x0

    .local v16, "i":I
    :goto_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_9

    .line 12789
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v36

    check-cast v36, Lcom/android/server/am/ProcessRecord;

    .line 12790
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_6

    move-object/from16 v0, v36

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_6

    .line 12788
    :goto_5
    add-int/lit8 v16, v16, 0x1

    goto :goto_4

    .line 12793
    :cond_6
    if-nez v32, :cond_8

    .line 12794
    if-eqz v9, :cond_7

    .line 12795
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12797
    :cond_7
    const-string v4, "  Isolated process list (sorted by uid):"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12798
    const/16 v33, 0x1

    .line 12799
    const/16 v32, 0x1

    .line 12800
    const/4 v9, 0x1

    .line 12802
    :cond_8
    const-string v4, "%sIsolated #%2d: %s"

    const/4 v5, 0x3

    new-array v5, v5, [Ljava/lang/Object;

    const/4 v6, 0x0

    const-string v7, "    "

    aput-object v7, v5, v6

    const/4 v6, 0x1

    invoke-static/range {v16 .. v16}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v5, v6

    const/4 v6, 0x2

    invoke-virtual/range {v36 .. v36}, Lcom/android/server/am/ProcessRecord;->toString()Ljava/lang/String;

    move-result-object v7

    aput-object v7, v5, v6

    invoke-static {v4, v5}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_5

    .line 12807
    .end local v16    # "i":I
    .end local v32    # "printed":Z
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_b

    .line 12808
    if-eqz v9, :cond_a

    .line 12809
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12811
    :cond_a
    const-string v4, "  Process LRU list (sorted by oom_adj, "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 12812
    const-string v4, " total, non-act at "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12813
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    sub-int/2addr v4, v5

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 12814
    const-string v4, ", non-svc at "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12815
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    sub-int/2addr v4, v5

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 12816
    const-string v4, "):"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12817
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    const-string v7, "    "

    const-string v8, "Proc"

    const-string v9, "PERS"

    .end local v9    # "needSep":Z
    const/4 v10, 0x0

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v11, p6

    invoke-static/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpProcessOomList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Z

    .line 12818
    const/4 v9, 0x1

    .line 12819
    .restart local v9    # "needSep":Z
    const/16 v33, 0x1

    .line 12822
    :cond_b
    if-nez p5, :cond_c

    if-eqz p6, :cond_11

    .line 12823
    :cond_c
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 12824
    const/16 v32, 0x0

    .line 12825
    .restart local v32    # "printed":Z
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_6
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_10

    .line 12826
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v36

    check-cast v36, Lcom/android/server/am/ProcessRecord;

    .line 12827
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_d

    move-object/from16 v0, v36

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_d

    .line 12825
    :goto_7
    add-int/lit8 v16, v16, 0x1

    goto :goto_6

    .line 12830
    :cond_d
    if-nez v32, :cond_f

    .line 12831
    if-eqz v9, :cond_e

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12832
    :cond_e
    const/4 v9, 0x1

    .line 12833
    const-string v4, "  PID mappings:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12834
    const/16 v32, 0x1

    .line 12835
    const/16 v33, 0x1

    .line 12837
    :cond_f
    const-string v4, "    PID #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 12838
    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_7

    .line 12840
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    monitor-exit v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    :cond_10
    :try_start_1
    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12843
    .end local v16    # "i":I
    .end local v32    # "printed":Z
    :cond_11
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    if-lez v4, :cond_17

    .line 12844
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    .line 12845
    const/16 v32, 0x0

    .line 12846
    .restart local v32    # "printed":Z
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_8
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_16

    .line 12847
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    iget v4, v4, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v36

    check-cast v36, Lcom/android/server/am/ProcessRecord;

    .line 12849
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_13

    if-eqz v36, :cond_12

    move-object/from16 v0, v36

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_13

    .line 12846
    :cond_12
    :goto_9
    add-int/lit8 v16, v16, 0x1

    goto :goto_8

    .line 12853
    :cond_13
    if-nez v32, :cond_15

    .line 12854
    if-eqz v9, :cond_14

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12855
    :cond_14
    const/4 v9, 0x1

    .line 12856
    const-string v4, "  Foreground Processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12857
    const/16 v32, 0x1

    .line 12858
    const/16 v33, 0x1

    .line 12860
    :cond_15
    const-string v4, "    PID #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 12861
    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_9

    .line 12863
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v4

    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v4

    :cond_16
    :try_start_3
    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 12866
    .end local v16    # "i":I
    .end local v32    # "printed":Z
    :cond_17
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_19

    .line 12867
    if-eqz v9, :cond_18

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12868
    :cond_18
    const/16 v23, 0x1

    .line 12869
    .end local v9    # "needSep":Z
    .local v23, "needSep":Z
    const/16 v33, 0x1

    .line 12870
    const-string v4, "  Persisent processes that are starting:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12871
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mPersistentStartingProcesses:Ljava/util/ArrayList;

    const-string v7, "    "

    const-string v8, "Starting Norm"

    const-string v9, "Restarting PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v23

    .line 12875
    .end local v23    # "needSep":Z
    .restart local v9    # "needSep":Z
    :cond_19
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_1b

    .line 12876
    if-eqz v9, :cond_1a

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12877
    :cond_1a
    const/16 v23, 0x1

    .line 12878
    .end local v9    # "needSep":Z
    .restart local v23    # "needSep":Z
    const/16 v33, 0x1

    .line 12879
    const-string v4, "  Processes that are being removed:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12880
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    const-string v7, "    "

    const-string v8, "Removed Norm"

    const-string v9, "Removed PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v23

    .line 12884
    .end local v23    # "needSep":Z
    .restart local v9    # "needSep":Z
    :cond_1b
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-lez v4, :cond_1d

    .line 12885
    if-eqz v9, :cond_1c

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12886
    :cond_1c
    const/16 v23, 0x1

    .line 12887
    .end local v9    # "needSep":Z
    .restart local v23    # "needSep":Z
    const/16 v33, 0x1

    .line 12888
    const-string v4, "  Processes that are on old until the system is ready:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12889
    move-object/from16 v0, p0

    iget-object v6, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    const-string v7, "    "

    const-string v8, "OnHold Norm"

    const-string v9, "OnHold PERS"

    move-object/from16 v4, p2

    move-object/from16 v5, p0

    move-object/from16 v10, p6

    invoke-static/range {v4 .. v10}, Lcom/android/server/am/ActivityManagerService;->dumpProcessList(Ljava/io/PrintWriter;Lcom/android/server/am/ActivityManagerService;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I

    move/from16 v9, v23

    .end local v23    # "needSep":Z
    .restart local v9    # "needSep":Z
    :cond_1d
    move-object/from16 v4, p0

    move-object/from16 v5, p1

    move-object/from16 v6, p2

    move-object/from16 v7, p3

    move/from16 v8, p4

    move/from16 v10, p5

    move-object/from16 v11, p6

    .line 12893
    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z

    move-result v9

    .line 12895
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-lez v4, :cond_23

    .line 12896
    const/16 v32, 0x0

    .line 12897
    .restart local v32    # "printed":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v24

    .line 12898
    .local v24, "now":J
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v29

    .line 12899
    .local v29, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    invoke-virtual/range {v29 .. v29}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 12900
    .restart local v14    # "NP":I
    const/16 v20, 0x0

    .restart local v20    # "ip":I
    :goto_a
    move/from16 v0, v20

    if-ge v0, v14, :cond_23

    .line 12901
    move-object/from16 v0, v29

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v30

    check-cast v30, Ljava/lang/String;

    .line 12902
    .local v30, "pname":Ljava/lang/String;
    move-object/from16 v0, v29

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v39

    check-cast v39, Landroid/util/SparseArray;

    .line 12903
    .local v39, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    invoke-virtual/range {v39 .. v39}, Landroid/util/SparseArray;->size()I

    move-result v12

    .line 12904
    .local v12, "N":I
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_b
    move/from16 v0, v16

    if-ge v0, v12, :cond_22

    .line 12905
    move-object/from16 v0, v39

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v35

    .line 12906
    .local v35, "puid":I
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, v30

    move/from16 v1, v35

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v36

    check-cast v36, Lcom/android/server/am/ProcessRecord;

    .line 12907
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_1f

    if-eqz v36, :cond_1e

    move-object/from16 v0, v36

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1f

    .line 12904
    :cond_1e
    :goto_c
    add-int/lit8 v16, v16, 0x1

    goto :goto_b

    .line 12911
    :cond_1f
    if-nez v32, :cond_21

    .line 12912
    if-eqz v9, :cond_20

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12913
    :cond_20
    const/4 v9, 0x1

    .line 12914
    const-string v4, "  Time since processes crashed:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12915
    const/16 v32, 0x1

    .line 12916
    const/16 v33, 0x1

    .line 12918
    :cond_21
    const-string v4, "    Process "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12919
    const-string v4, " uid "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 12920
    const-string v4, ": last crashed "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12921
    move-object/from16 v0, v39

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Long;

    invoke-virtual {v4}, Ljava/lang/Long;->longValue()J

    move-result-wide v4

    sub-long v4, v24, v4

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 12922
    const-string v4, " ago"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_c

    .line 12900
    .end local v35    # "puid":I
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_22
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_a

    .line 12927
    .end local v12    # "N":I
    .end local v14    # "NP":I
    .end local v16    # "i":I
    .end local v20    # "ip":I
    .end local v24    # "now":J
    .end local v29    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Ljava/lang/Long;>;>;"
    .end local v30    # "pname":Ljava/lang/String;
    .end local v32    # "printed":Z
    .end local v39    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Ljava/lang/Long;>;"
    :cond_23
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v4

    invoke-virtual {v4}, Landroid/util/ArrayMap;->size()I

    move-result v4

    if-lez v4, :cond_2d

    .line 12928
    const/16 v32, 0x0

    .line 12929
    .restart local v32    # "printed":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v4}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v28

    .line 12930
    .local v28, "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;>;"
    invoke-virtual/range {v28 .. v28}, Landroid/util/ArrayMap;->size()I

    move-result v14

    .line 12931
    .restart local v14    # "NP":I
    const/16 v20, 0x0

    .restart local v20    # "ip":I
    :goto_d
    move/from16 v0, v20

    if-ge v0, v14, :cond_2d

    .line 12932
    move-object/from16 v0, v28

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->keyAt(I)Ljava/lang/Object;

    move-result-object v30

    check-cast v30, Ljava/lang/String;

    .line 12933
    .restart local v30    # "pname":Ljava/lang/String;
    move-object/from16 v0, v28

    move/from16 v1, v20

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v38

    check-cast v38, Landroid/util/SparseArray;

    .line 12934
    .local v38, "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;"
    invoke-virtual/range {v38 .. v38}, Landroid/util/SparseArray;->size()I

    move-result v12

    .line 12935
    .restart local v12    # "N":I
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_e
    move/from16 v0, v16

    if-ge v0, v12, :cond_2c

    .line 12936
    move-object/from16 v0, v38

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v35

    .line 12937
    .restart local v35    # "puid":I
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v0, v30

    move/from16 v1, v35

    invoke-virtual {v4, v0, v1}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v36

    check-cast v36, Lcom/android/server/am/ProcessRecord;

    .line 12938
    .restart local v36    # "r":Lcom/android/server/am/ProcessRecord;
    if-eqz p6, :cond_25

    if-eqz v36, :cond_24

    move-object/from16 v0, v36

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_25

    .line 12935
    :cond_24
    :goto_f
    add-int/lit8 v16, v16, 0x1

    goto :goto_e

    .line 12942
    :cond_25
    if-nez v32, :cond_27

    .line 12943
    if-eqz v9, :cond_26

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12944
    :cond_26
    const/4 v9, 0x1

    .line 12945
    const-string v4, "  Bad processes:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12946
    const/16 v33, 0x1

    .line 12948
    :cond_27
    move-object/from16 v0, v38

    move/from16 v1, v16

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v19

    check-cast v19, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;

    .line 12949
    .local v19, "info":Lcom/android/server/am/ActivityManagerService$BadProcessInfo;
    const-string v4, "    Bad process "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v30

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12950
    const-string v4, " uid "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    .line 12951
    const-string v4, ": crashed at time "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->time:J

    move-object/from16 v0, p2

    invoke-virtual {v0, v4, v5}, Ljava/io/PrintWriter;->println(J)V

    .line 12952
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->shortMsg:Ljava/lang/String;

    if-eqz v4, :cond_28

    .line 12953
    const-string v4, "      Short msg: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->shortMsg:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12955
    :cond_28
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->longMsg:Ljava/lang/String;

    if-eqz v4, :cond_29

    .line 12956
    const-string v4, "      Long msg: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->longMsg:Ljava/lang/String;

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12958
    :cond_29
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    if-eqz v4, :cond_24

    .line 12959
    const-string v4, "      Stack:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12960
    const/16 v21, 0x0

    .line 12961
    .local v21, "lastPos":I
    const/16 v31, 0x0

    .local v31, "pos":I
    :goto_10
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    move/from16 v0, v31

    if-ge v0, v4, :cond_2b

    .line 12962
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    move/from16 v0, v31

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v4

    const/16 v5, 0xa

    if-ne v4, v5, :cond_2a

    .line 12963
    const-string v4, "        "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12964
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    sub-int v5, v31, v21

    move-object/from16 v0, p2

    move/from16 v1, v21

    invoke-virtual {v0, v4, v1, v5}, Ljava/io/PrintWriter;->write(Ljava/lang/String;II)V

    .line 12965
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12966
    add-int/lit8 v21, v31, 0x1

    .line 12961
    :cond_2a
    add-int/lit8 v31, v31, 0x1

    goto :goto_10

    .line 12969
    :cond_2b
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v4

    move/from16 v0, v21

    if-ge v0, v4, :cond_24

    .line 12970
    const-string v4, "        "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12971
    move-object/from16 v0, v19

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    move-object/from16 v0, v19

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService$BadProcessInfo;->stack:Ljava/lang/String;

    invoke-virtual {v5}, Ljava/lang/String;->length()I

    move-result v5

    sub-int v5, v5, v21

    move-object/from16 v0, p2

    move/from16 v1, v21

    invoke-virtual {v0, v4, v1, v5}, Ljava/io/PrintWriter;->write(Ljava/lang/String;II)V

    .line 12972
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto/16 :goto_f

    .line 12931
    .end local v19    # "info":Lcom/android/server/am/ActivityManagerService$BadProcessInfo;
    .end local v21    # "lastPos":I
    .end local v31    # "pos":I
    .end local v35    # "puid":I
    .end local v36    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_2c
    add-int/lit8 v20, v20, 0x1

    goto/16 :goto_d

    .line 12979
    .end local v12    # "N":I
    .end local v14    # "NP":I
    .end local v16    # "i":I
    .end local v20    # "ip":I
    .end local v28    # "pmap":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;>;"
    .end local v30    # "pname":Ljava/lang/String;
    .end local v32    # "printed":Z
    .end local v38    # "uids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ActivityManagerService$BadProcessInfo;>;"
    :cond_2d
    if-nez p6, :cond_35

    .line 12980
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 12981
    const/4 v9, 0x0

    .line 12982
    const-string v4, "  mStartedUsers:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12983
    const/16 v16, 0x0

    .restart local v16    # "i":I
    :goto_11
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_2e

    .line 12984
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v40

    check-cast v40, Lcom/android/server/am/UserStartedState;

    .line 12985
    .local v40, "uss":Lcom/android/server/am/UserStartedState;
    const-string v4, "    User #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, v40

    iget-object v4, v0, Lcom/android/server/am/UserStartedState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v4}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 12986
    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v4, ""

    move-object/from16 v0, v40

    move-object/from16 v1, p2

    invoke-virtual {v0, v4, v1}, Lcom/android/server/am/UserStartedState;->dump(Ljava/lang/String;Ljava/io/PrintWriter;)V

    .line 12983
    add-int/lit8 v16, v16, 0x1

    goto :goto_11

    .line 12988
    .end local v40    # "uss":Lcom/android/server/am/UserStartedState;
    :cond_2e
    const-string v4, "  mStartedUserArray: ["

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12989
    const/16 v16, 0x0

    :goto_12
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    array-length v4, v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_30

    .line 12990
    if-lez v16, :cond_2f

    const-string v4, ", "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12991
    :cond_2f
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    aget v4, v4, v16

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 12989
    add-int/lit8 v16, v16, 0x1

    goto :goto_12

    .line 12993
    :cond_30
    const-string v4, "]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12994
    const-string v4, "  mUserLru: ["

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12995
    const/16 v16, 0x0

    :goto_13
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_32

    .line 12996
    if-lez v16, :cond_31

    const-string v4, ", "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12997
    :cond_31
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/Object;)V

    .line 12995
    add-int/lit8 v16, v16, 0x1

    goto :goto_13

    .line 12999
    :cond_32
    const-string v4, "]"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13000
    if-eqz p5, :cond_33

    .line 13001
    const-string v4, "  mStartedUserArray: "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    invoke-static {v4}, Ljava/util/Arrays;->toString([I)Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13003
    :cond_33
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v5

    .line 13004
    :try_start_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    if-lez v4, :cond_34

    .line 13005
    const-string v4, "  mUserProfileGroupIds:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13006
    const/16 v16, 0x0

    :goto_14
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    invoke-virtual {v4}, Landroid/util/SparseIntArray;->size()I

    move-result v4

    move/from16 v0, v16

    if-ge v0, v4, :cond_34

    .line 13007
    const-string v4, "    User #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13008
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseIntArray;->keyAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(I)V

    .line 13009
    const-string v4, " -> profile #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13010
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    move/from16 v0, v16

    invoke-virtual {v4, v0}, Landroid/util/SparseIntArray;->valueAt(I)I

    move-result v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(I)V

    .line 13006
    add-int/lit8 v16, v16, 0x1

    goto :goto_14

    .line 13013
    :cond_34
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 13015
    .end local v16    # "i":I
    :cond_35
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_38

    if-eqz p6, :cond_36

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_38

    .line 13017
    :cond_36
    if-eqz v9, :cond_37

    .line 13018
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13019
    const/4 v9, 0x0

    .line 13021
    :cond_37
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mHomeProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13023
    :cond_38
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_3b

    if-eqz p6, :cond_39

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3b

    .line 13025
    :cond_39
    if-eqz v9, :cond_3a

    .line 13026
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13027
    const/4 v9, 0x0

    .line 13029
    :cond_3a
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mPreviousProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13031
    :cond_3b
    if-eqz p5, :cond_3c

    .line 13032
    new-instance v37, Ljava/lang/StringBuilder;

    const/16 v4, 0x80

    move-object/from16 v0, v37

    invoke-direct {v0, v4}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 13033
    .local v37, "sb":Ljava/lang/StringBuilder;
    const-string v4, "  mPreviousProcessVisibleTime: "

    move-object/from16 v0, v37

    invoke-virtual {v0, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 13034
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcessVisibleTime:J

    move-object/from16 v0, v37

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 13035
    move-object/from16 v0, p2

    move-object/from16 v1, v37

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13037
    .end local v37    # "sb":Ljava/lang/StringBuilder;
    :cond_3c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_3f

    if-eqz p6, :cond_3d

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p6

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3f

    .line 13039
    :cond_3d
    if-eqz v9, :cond_3e

    .line 13040
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13041
    const/4 v9, 0x0

    .line 13043
    :cond_3e
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mHeavyWeightProcess: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13045
    :cond_3f
    if-nez p6, :cond_40

    .line 13046
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mConfiguration: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13048
    :cond_40
    if-eqz p5, :cond_44

    .line 13049
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mConfigWillChange: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v5

    iget-boolean v5, v5, Lcom/android/server/am/ActivityStack;->mConfigWillChange:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13050
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v4}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/HashMap;->size()I

    move-result v4

    if-lez v4, :cond_44

    .line 13051
    const/16 v32, 0x0

    .line 13053
    .restart local v32    # "printed":Z
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v4}, Lcom/android/server/am/CompatModePackages;->getPackages()Ljava/util/HashMap;

    move-result-object v4

    invoke-virtual {v4}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v4

    invoke-interface {v4}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v17

    .local v17, "i$":Ljava/util/Iterator;
    :cond_41
    :goto_15
    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_44

    invoke-interface/range {v17 .. v17}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v15

    check-cast v15, Ljava/util/Map$Entry;

    .line 13054
    .local v15, "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Integer;>;"
    invoke-interface {v15}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v27

    check-cast v27, Ljava/lang/String;

    .line 13055
    .local v27, "pkg":Ljava/lang/String;
    invoke-interface {v15}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v22

    .line 13056
    .local v22, "mode":I
    if-eqz p6, :cond_42

    move-object/from16 v0, p6

    move-object/from16 v1, v27

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_41

    .line 13059
    :cond_42
    if-nez v32, :cond_43

    .line 13060
    const-string v4, "  mScreenCompatPackages:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13061
    const/16 v32, 0x1

    .line 13063
    :cond_43
    const-string v4, "    "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    move-object/from16 v1, v27

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    const-string v4, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13064
    move-object/from16 v0, p2

    move/from16 v1, v22

    invoke-virtual {v0, v1}, Ljava/io/PrintWriter;->print(I)V

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    goto :goto_15

    .line 13013
    .end local v15    # "entry":Ljava/util/Map$Entry;, "Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Integer;>;"
    .end local v17    # "i$":Ljava/util/Iterator;
    .end local v22    # "mode":I
    .end local v27    # "pkg":Ljava/lang/String;
    .end local v32    # "printed":Z
    .restart local v16    # "i":I
    :catchall_2
    move-exception v4

    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v4

    .line 13068
    .end local v16    # "i":I
    :cond_44
    if-nez p6, :cond_45

    .line 13069
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mWakefulness="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    invoke-static {v5}, Landroid/os/PowerManagerInternal;->wakefulnessToString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13071
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mSleeping="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mLockScreenShown="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->lockScreenShownToString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13073
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mShuttingDown="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mRunningVoice="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mTestPssMode="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13076
    :cond_45
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    if-nez v4, :cond_46

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    if-nez v4, :cond_46

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-nez v4, :cond_46

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    if-eqz v4, :cond_49

    .line 13078
    :cond_46
    if-eqz p6, :cond_47

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_47

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_49

    .line 13080
    :cond_47
    if-eqz v9, :cond_48

    .line 13081
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13082
    const/4 v9, 0x0

    .line 13084
    :cond_48
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mDebugApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, "/orig="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mDebugTransient="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mOrigWaitForDebugger="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13089
    :cond_49
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    if-eqz v4, :cond_4c

    .line 13090
    if-eqz p6, :cond_4a

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_4c

    .line 13091
    :cond_4a
    if-eqz v9, :cond_4b

    .line 13092
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13093
    const/4 v9, 0x0

    .line 13095
    :cond_4b
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mOpenGlTraceApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13098
    :cond_4c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    if-nez v4, :cond_4d

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    if-nez v4, :cond_4d

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    if-nez v4, :cond_4d

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v4, :cond_50

    .line 13100
    :cond_4d
    if-eqz p6, :cond_4e

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    move-object/from16 v0, p6

    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_50

    .line 13101
    :cond_4e
    if-eqz v9, :cond_4f

    .line 13102
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13103
    const/4 v9, 0x0

    .line 13105
    :cond_4f
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProfileApp="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mProfileProc="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13106
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProfileFile="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mProfileFd="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13107
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mSamplingInterval="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mAutoStopProfiler="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13109
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProfileType="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13112
    :cond_50
    if-nez p6, :cond_53

    .line 13113
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-nez v4, :cond_51

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v4, :cond_52

    .line 13114
    :cond_51
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mAlwaysFinishActivities="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mController="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13117
    :cond_52
    if-eqz p5, :cond_53

    .line 13118
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  Total persistent processes: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, v26

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13119
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mProcessesReady="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mSystemReady="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mBooted="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mFactoryTest="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13123
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mBooting="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mCallFinishBooting="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mBootAnimationComplete="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13126
    const-string v4, "  mLastPowerCheckRealtime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13127
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckRealtime:J

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13128
    const-string v4, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13129
    const-string v4, "  mLastPowerCheckUptime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13130
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastPowerCheckUptime:J

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13131
    const-string v4, ""

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13132
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mGoingToSleep="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v5, v5, Lcom/android/server/am/ActivityStackSupervisor;->mGoingToSleep:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13133
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mLaunchingActivity="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v5, v5, Lcom/android/server/am/ActivityStackSupervisor;->mLaunchingActivity:Landroid/os/PowerManager$WakeLock;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13134
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mAdjSeq="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mLruSeq="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13135
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mNumNonCachedProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " ("

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " total)"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mNumCachedHiddenProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mNumServiceProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mNewNumServiceProcs="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13140
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "  mAllowLowerMemLevel="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget-boolean v5, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mLastMemoryLevel"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " mLastNumProcesses"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13143
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v24

    .line 13144
    .restart local v24    # "now":J
    const-string v4, "  mLastIdleTime="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13145
    move-object/from16 v0, p0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    move-wide/from16 v0, v24

    move-object/from16 v2, p2

    invoke-static {v0, v1, v4, v5, v2}, Landroid/util/TimeUtils;->formatDuration(JJLjava/io/PrintWriter;)V

    .line 13146
    const-string v4, " mLowRamSinceLastIdle="

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13147
    move-object/from16 v0, p0

    move-wide/from16 v1, v24

    invoke-direct {v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v4

    move-object/from16 v0, p2

    invoke-static {v4, v5, v0}, Landroid/util/TimeUtils;->formatDuration(JLjava/io/PrintWriter;)V

    .line 13148
    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13152
    .end local v24    # "now":J
    :cond_53
    if-nez v33, :cond_54

    .line 13153
    const-string v4, "  (nothing)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13155
    :cond_54
    return-void
.end method

.method dumpProcessesToGc(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)Z
    .locals 8
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "needSep"    # Z
    .param p6, "dumpAll"    # Z
    .param p7, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13159
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-lez v5, :cond_3

    .line 13160
    const/4 v1, 0x0

    .line 13161
    .local v1, "printed":Z
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .line 13162
    .local v2, "now":J
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v0, v5, :cond_3

    .line 13163
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v5, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 13164
    .local v4, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz p7, :cond_0

    iget-object v5, v4, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {p7, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_0

    .line 13162
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 13167
    :cond_0
    if-nez v1, :cond_2

    .line 13168
    if-eqz p5, :cond_1

    invoke-virtual {p2}, Ljava/io/PrintWriter;->println()V

    .line 13169
    :cond_1
    const/4 p5, 0x1

    .line 13170
    const-string v5, "  Processes that are waiting to GC:"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13171
    const/4 v1, 0x1

    .line 13173
    :cond_2
    const-string v5, "    Process "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13174
    const-string v5, "      lowMem="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    iget-boolean v5, v4, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Z)V

    .line 13175
    const-string v5, ", last gced="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13176
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    sub-long v6, v2, v6

    invoke-virtual {p2, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 13177
    const-string v5, " ms ago, last lowMem="

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13178
    iget-wide v6, v4, Lcom/android/server/am/ProcessRecord;->lastLowMemory:J

    sub-long v6, v2, v6

    invoke-virtual {p2, v6, v7}, Ljava/io/PrintWriter;->print(J)V

    .line 13179
    const-string v5, " ms ago"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    goto :goto_1

    .line 13183
    .end local v0    # "i":I
    .end local v1    # "printed":Z
    .end local v2    # "now":J
    .end local v4    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    return p5
.end method

.method protected dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z
    .locals 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "name"    # Ljava/lang/String;
    .param p4, "args"    # [Ljava/lang/String;
    .param p5, "opti"    # I
    .param p6, "dumpAll"    # Z

    .prologue
    .line 13258
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    move v6, p6

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ProviderMap;->dumpProvider(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;Ljava/lang/String;[Ljava/lang/String;IZ)Z

    move-result v0

    return v0
.end method

.method dumpProvidersLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 17
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 13530
    const/4 v12, 0x0

    .line 13532
    .local v12, "printedAnything":Z
    new-instance v7, Lcom/android/server/am/ActivityManagerService$ItemMatcher;

    invoke-direct {v7}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;-><init>()V

    .line 13533
    .local v7, "matcher":Lcom/android/server/am/ActivityManagerService$ItemMatcher;
    move-object/from16 v0, p3

    move/from16 v1, p4

    invoke-virtual {v7, v0, v1}, Lcom/android/server/am/ActivityManagerService$ItemMatcher;->build([Ljava/lang/String;I)I

    .line 13535
    const-string v15, "ACTIVITY MANAGER CONTENT PROVIDERS (dumpsys activity providers)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13537
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    move-object/from16 v0, p2

    move/from16 v1, p5

    move-object/from16 v2, p6

    invoke-virtual {v15, v0, v1, v2}, Lcom/android/server/am/ProviderMap;->dumpProvidersLocked(Ljava/io/PrintWriter;ZLjava/lang/String;)Z

    move-result v8

    .line 13538
    .local v8, "needSep":Z
    or-int/2addr v12, v8

    .line 13540
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v15

    if-lez v15, :cond_3

    .line 13541
    const/4 v11, 0x0

    .line 13542
    .local v11, "printed":Z
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v15}, Ljava/util/ArrayList;->size()I

    move-result v15

    add-int/lit8 v5, v15, -0x1

    .local v5, "i":I
    :goto_0
    if-ltz v5, :cond_3

    .line 13543
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v15, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Lcom/android/server/am/ContentProviderRecord;

    .line 13544
    .local v13, "r":Lcom/android/server/am/ContentProviderRecord;
    if-eqz p6, :cond_0

    iget-object v15, v13, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    invoke-virtual {v15}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v15

    move-object/from16 v0, p6

    invoke-virtual {v0, v15}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v15

    if-nez v15, :cond_0

    .line 13542
    :goto_1
    add-int/lit8 v5, v5, -0x1

    goto :goto_0

    .line 13547
    :cond_0
    if-nez v11, :cond_2

    .line 13548
    if-eqz v8, :cond_1

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13549
    :cond_1
    const/4 v8, 0x1

    .line 13550
    const-string v15, "  Launching content providers:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13551
    const/4 v11, 0x1

    .line 13552
    const/4 v12, 0x1

    .line 13554
    :cond_2
    const-string v15, "  Launching #"

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    invoke-virtual {v0, v5}, Ljava/io/PrintWriter;->print(I)V

    const-string v15, ": "

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13555
    move-object/from16 v0, p2

    invoke-virtual {v0, v13}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    goto :goto_1

    .line 13559
    .end local v5    # "i":I
    .end local v11    # "printed":Z
    .end local v13    # "r":Lcom/android/server/am/ContentProviderRecord;
    :cond_3
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v15}, Landroid/util/SparseArray;->size()I

    move-result v15

    if-lez v15, :cond_a

    .line 13560
    const/4 v11, 0x0

    .line 13561
    .restart local v11    # "printed":Z
    const/4 v3, -0x2

    .line 13562
    .local v3, "dumpUid":I
    if-eqz p6, :cond_4

    .line 13564
    :try_start_0
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v15}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v15

    const/16 v16, 0x0

    move-object/from16 v0, p6

    move/from16 v1, v16

    invoke-virtual {v15, v0, v1}, Landroid/content/pm/PackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v3

    .line 13569
    :cond_4
    :goto_2
    const/4 v5, 0x0

    .restart local v5    # "i":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v15}, Landroid/util/SparseArray;->size()I

    move-result v15

    if-ge v5, v15, :cond_a

    .line 13570
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v15, v5}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v14

    .line 13571
    .local v14, "uid":I
    const/4 v15, -0x1

    if-lt v3, v15, :cond_6

    invoke-static {v14}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v15

    if-eq v15, v3, :cond_6

    .line 13569
    :cond_5
    add-int/lit8 v5, v5, 0x1

    goto :goto_3

    .line 13565
    .end local v5    # "i":I
    .end local v14    # "uid":I
    :catch_0
    move-exception v4

    .line 13566
    .local v4, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    const/4 v3, -0x1

    goto :goto_2

    .line 13574
    .end local v4    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    .restart local v5    # "i":I
    .restart local v14    # "uid":I
    :cond_6
    move-object/from16 v0, p0

    iget-object v15, v0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v15, v5}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/ArrayMap;

    .line 13575
    .local v10, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v11, :cond_8

    .line 13576
    if-eqz v8, :cond_7

    invoke-virtual/range {p2 .. p2}, Ljava/io/PrintWriter;->println()V

    .line 13577
    :cond_7
    const/4 v8, 0x1

    .line 13578
    const-string v15, "  Granted Uri Permissions:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13579
    const/4 v11, 0x1

    .line 13580
    const/4 v12, 0x1

    .line 13582
    :cond_8
    const-string v15, "  * UID "

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    invoke-virtual {v0, v14}, Ljava/io/PrintWriter;->print(I)V

    const-string v15, " holds:"

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13583
    invoke-virtual {v10}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v15

    invoke-interface {v15}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v6

    .local v6, "i$":Ljava/util/Iterator;
    :cond_9
    :goto_4
    invoke-interface {v6}, Ljava/util/Iterator;->hasNext()Z

    move-result v15

    if-eqz v15, :cond_5

    invoke-interface {v6}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/UriPermission;

    .line 13584
    .local v9, "perm":Lcom/android/server/am/UriPermission;
    const-string v15, "    "

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    move-object/from16 v0, p2

    invoke-virtual {v0, v9}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 13585
    if-eqz p5, :cond_9

    .line 13586
    const-string v15, "      "

    move-object/from16 v0, p2

    invoke-virtual {v9, v0, v15}, Lcom/android/server/am/UriPermission;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_4

    .line 13592
    .end local v3    # "dumpUid":I
    .end local v5    # "i":I
    .end local v6    # "i$":Ljava/util/Iterator;
    .end local v9    # "perm":Lcom/android/server/am/UriPermission;
    .end local v10    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    .end local v11    # "printed":Z
    .end local v14    # "uid":I
    :cond_a
    if-nez v12, :cond_b

    .line 13593
    const-string v15, "  (nothing)"

    move-object/from16 v0, p2

    invoke-virtual {v0, v15}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13595
    :cond_b
    return-void
.end method

.method dumpRecentsLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V
    .locals 7
    .param p1, "fd"    # Ljava/io/FileDescriptor;
    .param p2, "pw"    # Ljava/io/PrintWriter;
    .param p3, "args"    # [Ljava/lang/String;
    .param p4, "opti"    # I
    .param p5, "dumpAll"    # Z
    .param p6, "dumpPackage"    # Ljava/lang/String;

    .prologue
    .line 12646
    const-string v5, "ACTIVITY MANAGER RECENT TASKS (dumpsys activity recents)"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12648
    const/4 v2, 0x0

    .line 12650
    .local v2, "printedAnything":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    if-eqz v5, :cond_3

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-lez v5, :cond_3

    .line 12651
    const/4 v3, 0x0

    .line 12653
    .local v3, "printedHeader":Z
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v5}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 12654
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_3

    .line 12655
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/TaskRecord;

    .line 12656
    .local v4, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz p6, :cond_1

    .line 12657
    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    if-eqz v5, :cond_0

    iget-object v5, v4, Lcom/android/server/am/TaskRecord;->realActivity:Landroid/content/ComponentName;

    invoke-virtual {p6, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-nez v5, :cond_1

    .line 12654
    :cond_0
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 12662
    :cond_1
    if-nez v3, :cond_2

    .line 12663
    const-string v5, "  Recent tasks:"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12664
    const/4 v3, 0x1

    .line 12665
    const/4 v2, 0x1

    .line 12667
    :cond_2
    const-string v5, "  * Recent #"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    invoke-virtual {p2, v1}, Ljava/io/PrintWriter;->print(I)V

    const-string v5, ": "

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 12668
    invoke-virtual {p2, v4}, Ljava/io/PrintWriter;->println(Ljava/lang/Object;)V

    .line 12669
    if-eqz p5, :cond_0

    .line 12670
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v5, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/TaskRecord;

    const-string v6, "    "

    invoke-virtual {v5, p2, v6}, Lcom/android/server/am/TaskRecord;->dump(Ljava/io/PrintWriter;Ljava/lang/String;)V

    goto :goto_1

    .line 12675
    .end local v0    # "N":I
    .end local v1    # "i":I
    .end local v3    # "printedHeader":Z
    .end local v4    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_3
    if-nez v2, :cond_4

    .line 12676
    const-string v5, "  (nothing)"

    invoke-virtual {p2, v5}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 12678
    :cond_4
    return-void
.end method

.method enableScreenAfterBoot()V
    .locals 4

    .prologue
    .line 6121
    const/16 v0, 0xbea

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    invoke-static {v0, v2, v3}, Landroid/util/EventLog;->writeEvent(IJ)I

    .line 6123
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->enableScreenAfterBoot()V

    .line 6125
    monitor-enter p0

    .line 6126
    :try_start_0
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateEventDispatchingLocked()V

    .line 6127
    monitor-exit p0

    .line 6128
    return-void

    .line 6127
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V
    .locals 3
    .param p1, "permission"    # Ljava/lang/String;
    .param p2, "func"    # Ljava/lang/String;

    .prologue
    .line 6888
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-nez v1, :cond_0

    .line 6890
    return-void

    .line 6893
    :cond_0
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 6897
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6898
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method enforceNotIsolatedCaller(Ljava/lang/String;)V
    .locals 3
    .param p1, "caller"    # Ljava/lang/String;

    .prologue
    .line 3230
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {v0}, Landroid/os/UserHandle;->isIsolated(I)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 3231
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Isolated process not allowed to call "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3233
    :cond_0
    return-void
.end method

.method enforceShellRestriction(Ljava/lang/String;I)V
    .locals 3
    .param p1, "restriction"    # Ljava/lang/String;
    .param p2, "userHandle"    # I

    .prologue
    .line 3236
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x7d0

    if-ne v0, v1, :cond_1

    .line 3237
    if-ltz p2, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3239
    :cond_0
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Shell does not have permission to access user "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 3243
    :cond_1
    return-void
.end method

.method final ensureBootCompleted()V
    .locals 4

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 6282
    monitor-enter p0

    .line 6283
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 6284
    .local v0, "booting":Z
    const/4 v3, 0x0

    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    .line 6285
    iget-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    if-nez v3, :cond_2

    .line 6286
    .local v1, "enableScreen":Z
    :goto_0
    const/4 v2, 0x1

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mBooted:Z

    .line 6287
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6289
    if-eqz v0, :cond_0

    .line 6290
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishBooting()V

    .line 6293
    :cond_0
    if-eqz v1, :cond_1

    .line 6294
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->enableScreenAfterBoot()V

    .line 6296
    :cond_1
    return-void

    .end local v1    # "enableScreen":Z
    :cond_2
    move v1, v2

    .line 6285
    goto :goto_0

    .line 6287
    .end local v0    # "booting":Z
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2
.end method

.method ensurePackageDexOpt(Ljava/lang/String;)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 2728
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    .line 2730
    .local v0, "pm":Landroid/content/pm/IPackageManager;
    const/4 v1, 0x0

    :try_start_0
    invoke-interface {v0, p1, v1}, Landroid/content/pm/IPackageManager;->performDexOptIfNeeded(Ljava/lang/String;Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 2731
    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 2735
    :cond_0
    :goto_0
    return-void

    .line 2733
    :catch_0
    move-exception v1

    goto :goto_0
.end method

.method public final enterSafeMode()V
    .locals 1

    .prologue
    .line 10707
    monitor-enter p0

    .line 10710
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v0, :cond_0

    .line 10712
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v0

    invoke-interface {v0}, Landroid/content/pm/IPackageManager;->enterSafeMode()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10717
    :cond_0
    :goto_0
    const/4 v0, 0x1

    :try_start_2
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSafeMode:Z

    .line 10718
    monitor-exit p0

    .line 10719
    return-void

    .line 10718
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v0

    .line 10713
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method public final finishActivity(Landroid/os/IBinder;ILandroid/content/Intent;Z)Z
    .locals 17
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Landroid/content/Intent;
    .param p4, "finishTask"    # Z

    .prologue
    .line 4279
    if-eqz p3, :cond_0

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_0

    .line 4280
    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 4283
    :cond_0
    monitor-enter p0

    .line 4284
    :try_start_0
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v12

    .line 4285
    .local v12, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v12, :cond_1

    .line 4286
    const/4 v13, 0x1

    monitor-exit p0

    .line 4341
    :goto_0
    return v13

    .line 4289
    :cond_1
    iget-object v0, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    move-object/from16 v16, v0

    .line 4290
    .local v16, "tr":Lcom/android/server/am/TaskRecord;
    invoke-virtual/range {v16 .. v16}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v15

    .line 4291
    .local v15, "rootR":Lcom/android/server/am/ActivityRecord;
    if-nez v15, :cond_2

    .line 4292
    const-string v2, "ActivityManager"

    const-string v3, "Finishing task with all activities already finished"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4295
    :cond_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v2, v2, Lcom/android/server/am/ActivityStackSupervisor;->mLockTaskModeTask:Lcom/android/server/am/TaskRecord;

    move-object/from16 v0, v16

    if-ne v0, v2, :cond_3

    .line 4296
    if-ne v15, v12, :cond_3

    .line 4297
    const-string v2, "ActivityManager"

    const-string v3, "Not finishing task in lock task mode"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4298
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V

    .line 4299
    const/4 v13, 0x0

    monitor-exit p0

    goto :goto_0

    .line 4343
    .end local v12    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v15    # "rootR":Lcom/android/server/am/ActivityRecord;
    .end local v16    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 4302
    .restart local v12    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v15    # "rootR":Lcom/android/server/am/ActivityRecord;
    .restart local v16    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_3
    :try_start_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v2, :cond_4

    .line 4304
    iget-object v2, v12, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v2, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v3, 0x0

    move-object/from16 v0, p1

    invoke-virtual {v2, v0, v3}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Landroid/os/IBinder;I)Lcom/android/server/am/ActivityRecord;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-object v9

    .line 4305
    .local v9, "next":Lcom/android/server/am/ActivityRecord;
    if-eqz v9, :cond_4

    .line 4307
    const/4 v14, 0x1

    .line 4309
    .local v14, "resumeOK":Z
    :try_start_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    iget-object v3, v9, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-interface {v2, v3}, Landroid/app/IActivityController;->activityResuming(Ljava/lang/String;)Z
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v14

    .line 4315
    :goto_1
    if-nez v14, :cond_4

    .line 4316
    :try_start_3
    const-string v2, "ActivityManager"

    const-string v3, "Not finishing activity because controller resumed"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 4317
    const/4 v13, 0x0

    monitor-exit p0

    goto :goto_0

    .line 4310
    :catch_0
    move-exception v8

    .line 4311
    .local v8, "e":Landroid/os/RemoteException;
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    .line 4312
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    goto :goto_1

    .line 4321
    .end local v8    # "e":Landroid/os/RemoteException;
    .end local v9    # "next":Lcom/android/server/am/ActivityRecord;
    .end local v14    # "resumeOK":Z
    :cond_4
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result-wide v10

    .line 4324
    .local v10, "origId":J
    if-eqz p4, :cond_6

    if-ne v12, v15, :cond_6

    .line 4328
    :try_start_4
    move-object/from16 v0, v16

    iget v2, v0, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v3, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    move-result v13

    .line 4329
    .local v13, "res":Z
    if-nez v13, :cond_5

    .line 4330
    const-string v2, "ActivityManager"

    const-string v3, "Removing task failed to finish activity"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 4341
    :cond_5
    :goto_2
    :try_start_5
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto/16 :goto_0

    .line 4333
    .end local v13    # "res":Z
    :cond_6
    :try_start_6
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const-string v6, "app-request"

    const/4 v7, 0x1

    move-object/from16 v3, p1

    move/from16 v4, p2

    move-object/from16 v5, p3

    invoke-virtual/range {v2 .. v7}, Lcom/android/server/am/ActivityStack;->requestFinishActivityLocked(Landroid/os/IBinder;ILandroid/content/Intent;Ljava/lang/String;Z)Z

    move-result v13

    .line 4335
    .restart local v13    # "res":Z
    if-nez v13, :cond_5

    .line 4336
    const-string v2, "ActivityManager"

    const-string v3, "Failed to finish by app-request"

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    goto :goto_2

    .line 4341
    .end local v13    # "res":Z
    :catchall_1
    move-exception v2

    :try_start_7
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0
.end method

.method public finishActivityAffinity(Landroid/os/IBinder;)Z
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4451
    monitor-enter p0

    .line 4452
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    .line 4454
    .local v0, "origId":J
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 4456
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    iget-object v5, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v5}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v4

    .line 4458
    .local v4, "rootR":Lcom/android/server/am/ActivityRecord;
    iget-object v5, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v6, v6, Lcom/android/server/am/ActivityStackSupervisor;->mLockTaskModeTask:Lcom/android/server/am/TaskRecord;

    if-ne v5, v6, :cond_0

    .line 4459
    if-ne v4, v2, :cond_0

    .line 4460
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 4461
    const/4 v3, 0x0

    .line 4470
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :goto_0
    return v3

    .line 4464
    :cond_0
    const/4 v3, 0x0

    .line 4465
    .local v3, "res":Z
    if-eqz v2, :cond_1

    .line 4466
    :try_start_3
    iget-object v5, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v5, v5, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v5, v2}, Lcom/android/server/am/ActivityStack;->finishActivityAffinityLocked(Lcom/android/server/am/ActivityRecord;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-result v3

    .line 4470
    :cond_1
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_0

    .line 4472
    .end local v0    # "origId":J
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "res":Z
    .end local v4    # "rootR":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v5

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v5

    .line 4470
    .restart local v0    # "origId":J
    :catchall_1
    move-exception v5

    :try_start_5
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0
.end method

.method final finishBooting()V
    .locals 31

    .prologue
    .line 6155
    monitor-enter p0

    .line 6156
    :try_start_0
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mBootAnimationComplete:Z

    if-nez v2, :cond_0

    .line 6157
    const/4 v2, 0x1

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 6158
    monitor-exit p0

    .line 6254
    :goto_0
    return-void

    .line 6160
    :cond_0
    const/4 v2, 0x0

    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCallFinishBooting:Z

    .line 6161
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6163
    new-instance v21, Landroid/util/ArraySet;

    invoke-direct/range {v21 .. v21}, Landroid/util/ArraySet;-><init>()V

    .line 6164
    .local v21, "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    sget-object v20, Landroid/os/Build;->SUPPORTED_ABIS:[Ljava/lang/String;

    .local v20, "arr$":[Ljava/lang/String;
    move-object/from16 v0, v20

    array-length v0, v0

    move/from16 v26, v0

    .local v26, "len$":I
    const/16 v23, 0x0

    .local v23, "i$":I
    :goto_1
    move/from16 v0, v23

    move/from16 v1, v26

    if-ge v0, v1, :cond_3

    aget-object v19, v20, v23

    .line 6165
    .local v19, "abi":Ljava/lang/String;
    invoke-static/range {v19 .. v19}, Landroid/os/Process;->establishZygoteConnectionForAbi(Ljava/lang/String;)V

    .line 6166
    invoke-static/range {v19 .. v19}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v24

    .line 6167
    .local v24, "instructionSet":Ljava/lang/String;
    move-object/from16 v0, v21

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    .line 6168
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    invoke-static/range {v19 .. v19}, Ldalvik/system/VMRuntime;->getInstructionSet(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/android/server/pm/Installer;->markBootComplete(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_1

    .line 6169
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unable to mark boot complete for abi: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v19

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    .line 6171
    :cond_1
    move-object/from16 v0, v21

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 6164
    :cond_2
    add-int/lit8 v23, v23, 0x1

    goto :goto_1

    .line 6161
    .end local v19    # "abi":Ljava/lang/String;
    .end local v20    # "arr$":[Ljava/lang/String;
    .end local v21    # "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .end local v23    # "i$":I
    .end local v24    # "instructionSet":Ljava/lang/String;
    .end local v26    # "len$":I
    :catchall_0
    move-exception v2

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2

    .line 6175
    .restart local v20    # "arr$":[Ljava/lang/String;
    .restart local v21    # "completedIsas":Landroid/util/ArraySet;, "Landroid/util/ArraySet<Ljava/lang/String;>;"
    .restart local v23    # "i$":I
    .restart local v26    # "len$":I
    :cond_3
    new-instance v28, Landroid/content/IntentFilter;

    invoke-direct/range {v28 .. v28}, Landroid/content/IntentFilter;-><init>()V

    .line 6176
    .local v28, "pkgFilter":Landroid/content/IntentFilter;
    const-string v2, "android.intent.action.QUERY_PACKAGE_RESTART"

    move-object/from16 v0, v28

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addAction(Ljava/lang/String;)V

    .line 6177
    const-string v2, "package"

    move-object/from16 v0, v28

    invoke-virtual {v0, v2}, Landroid/content/IntentFilter;->addDataScheme(Ljava/lang/String;)V

    .line 6178
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    new-instance v3, Lcom/android/server/am/ActivityManagerService$7;

    move-object/from16 v0, p0

    invoke-direct {v3, v0}, Lcom/android/server/am/ActivityManagerService$7;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, v28

    invoke-virtual {v2, v3, v0}, Landroid/content/Context;->registerReceiver(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;

    .line 6197
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    const/16 v3, 0x3e8

    invoke-virtual {v2, v3}, Lcom/android/server/SystemServiceManager;->startBootPhase(I)V

    .line 6199
    monitor-enter p0

    .line 6202
    :try_start_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v18

    .line 6203
    .local v18, "NP":I
    if-lez v18, :cond_4

    .line 6204
    new-instance v29, Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    move-object/from16 v0, v29

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 6206
    .local v29, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    const/16 v25, 0x0

    .local v25, "ip":I
    :goto_2
    move/from16 v0, v25

    move/from16 v1, v18

    if-ge v0, v1, :cond_4

    .line 6209
    move-object/from16 v0, v29

    move/from16 v1, v25

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    const-string v3, "on-hold"

    const/4 v4, 0x0

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;)V

    .line 6206
    add-int/lit8 v25, v25, 0x1

    goto :goto_2

    .line 6213
    .end local v25    # "ip":I
    .end local v29    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_4
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v3, 0x1

    if-eq v2, v3, :cond_9

    .line 6215
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x1b

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v27

    .line 6216
    .local v27, "nmsg":Landroid/os/Message;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/32 v6, 0xdbba0

    move-object/from16 v0, v27

    invoke-virtual {v2, v0, v6, v7}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 6218
    const-string v2, "sys.boot_completed"

    const-string v3, "1"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 6221
    const-string v2, "trigger_restart_min_framework"

    const-string v3, "vold.decrypt"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_5

    const-string v2, ""

    const-string v3, "vold.encrypt_progress"

    invoke-static {v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 6223
    :cond_5
    const-string v2, "dev.bootcomplete"

    const-string v3, "1"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    .line 6225
    :cond_6
    const/16 v22, 0x0

    .local v22, "i":I
    :goto_3
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Landroid/util/SparseArray;->size()I

    move-result v2

    move/from16 v0, v22

    if-ge v0, v2, :cond_8

    .line 6226
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v30

    check-cast v30, Lcom/android/server/am/UserStartedState;

    .line 6227
    .local v30, "uss":Lcom/android/server/am/UserStartedState;
    move-object/from16 v0, v30

    iget v2, v0, Lcom/android/server/am/UserStartedState;->mState:I

    if-nez v2, :cond_7

    .line 6228
    const/4 v2, 0x1

    move-object/from16 v0, v30

    iput v2, v0, Lcom/android/server/am/UserStartedState;->mState:I

    .line 6229
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v17

    .line 6230
    .local v17, "userId":I
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.BOOT_COMPLETED"

    const/4 v3, 0x0

    invoke-direct {v5, v2, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 6231
    .local v5, "intent":Landroid/content/Intent;
    const-string v2, "android.intent.extra.user_handle"

    move/from16 v0, v17

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 6232
    const/high16 v2, 0x8000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 6233
    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    new-instance v7, Lcom/android/server/am/ActivityManagerService$8;

    move-object/from16 v0, p0

    invoke-direct {v7, v0}, Lcom/android/server/am/ActivityManagerService$8;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const-string v11, "android.permission.RECEIVE_BOOT_COMPLETED"

    const/4 v12, -0x1

    const/4 v13, 0x1

    const/4 v14, 0x0

    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 6225
    .end local v5    # "intent":Landroid/content/Intent;
    .end local v17    # "userId":I
    :cond_7
    add-int/lit8 v22, v22, 0x1

    goto :goto_3

    .line 6251
    .end local v30    # "uss":Lcom/android/server/am/UserStartedState;
    :cond_8
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->scheduleStartProfilesLocked()V

    .line 6253
    .end local v22    # "i":I
    .end local v27    # "nmsg":Landroid/os/Message;
    :cond_9
    monitor-exit p0

    goto/16 :goto_0

    .end local v18    # "NP":I
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method public final finishHeavyWeightApp()V
    .locals 9

    .prologue
    .line 4348
    const-string v0, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 4350
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: finishHeavyWeightApp() from pid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, ", uid="

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, " requires "

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v2, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v0, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    .line 4354
    .local v8, "msg":Ljava/lang/String;
    const-string v0, "ActivityManager"

    invoke-static {v0, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 4355
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 4358
    .end local v8    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 4359
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    if-nez v0, :cond_1

    .line 4360
    monitor-exit p0

    .line 4377
    :goto_0
    return-void

    .line 4363
    :cond_1
    new-instance v6, Ljava/util/ArrayList;

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-direct {v6, v0}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 4365
    .local v6, "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_1
    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v7, v0, :cond_3

    .line 4366
    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ActivityRecord;

    .line 4367
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    iget-boolean v0, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-nez v0, :cond_2

    .line 4368
    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const/4 v2, 0x0

    const/4 v3, 0x0

    const-string v4, "finish-heavy"

    const/4 v5, 0x1

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityStack;->finishActivityLocked(Lcom/android/server/am/ActivityRecord;ILandroid/content/Intent;Ljava/lang/String;Z)Z

    .line 4365
    :cond_2
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    .line 4373
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x19

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    iget v4, v4, Lcom/android/server/am/ProcessRecord;->userId:I

    const/4 v5, 0x0

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 4375
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHeavyWeightProcess:Lcom/android/server/am/ProcessRecord;

    .line 4376
    monitor-exit p0

    goto :goto_0

    .end local v6    # "activities":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ActivityRecord;>;"
    .end local v7    # "i":I
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public finishInstrumentation(Landroid/app/IApplicationThread;ILandroid/os/Bundle;)V
    .locals 7
    .param p1, "target"    # Landroid/app/IApplicationThread;
    .param p2, "resultCode"    # I
    .param p3, "results"    # Landroid/os/Bundle;

    .prologue
    .line 16578
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v1

    .line 16580
    .local v1, "userId":I
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 16581
    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v5, "File descriptors passed in Intent"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 16584
    :cond_0
    monitor-enter p0

    .line 16585
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 16586
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_1

    .line 16587
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "finishInstrumentation: no app for "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 16588
    monitor-exit p0

    .line 16594
    :goto_0
    return-void

    .line 16590
    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 16591
    .local v2, "origId":J
    invoke-virtual {p0, v0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 16592
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16593
    monitor-exit p0

    goto :goto_0

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "origId":J
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4
.end method

.method finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V
    .locals 10
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "resultCode"    # I
    .param p3, "results"    # Landroid/os/Bundle;

    .prologue
    const/4 v5, 0x1

    const/4 v3, 0x0

    const/4 v2, 0x0

    .line 16545
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    if-eqz v0, :cond_0

    .line 16548
    :try_start_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    invoke-interface {v0, v1, p2, p3}, Landroid/app/IInstrumentationWatcher;->instrumentationFinished(Landroid/content/ComponentName;ILandroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 16555
    :cond_0
    :goto_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-eqz v0, :cond_1

    .line 16557
    :try_start_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    invoke-interface {v0}, Landroid/app/IUiAutomationConnection;->shutdown()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 16563
    :goto_1
    iput-boolean v3, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    .line 16565
    :cond_1
    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    .line 16566
    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    .line 16567
    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    .line 16568
    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    .line 16569
    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    .line 16570
    iput-object v2, p1, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    .line 16572
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v1, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v2, -0x1

    iget v8, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    const-string v9, "finished inst"

    move-object v0, p0

    move v4, v3

    move v6, v5

    move v7, v3

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    .line 16574
    return-void

    .line 16558
    :catch_0
    move-exception v0

    goto :goto_1

    .line 16552
    :catch_1
    move-exception v0

    goto :goto_0
.end method

.method public finishReceiver(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;Z)V
    .locals 10
    .param p1, "who"    # Landroid/os/IBinder;
    .param p2, "resultCode"    # I
    .param p3, "resultData"    # Ljava/lang/String;
    .param p4, "resultExtras"    # Landroid/os/Bundle;
    .param p5, "resultAbort"    # Z

    .prologue
    .line 16424
    if-eqz p4, :cond_0

    invoke-virtual {p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 16425
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Bundle"

    invoke-direct {v0, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 16428
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .line 16430
    .local v8, "origId":J
    const/4 v7, 0x0

    .line 16433
    .local v7, "doNext":Z
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 16434
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->broadcastRecordForReceiverLocked(Landroid/os/IBinder;)Lcom/android/server/am/BroadcastRecord;

    move-result-object v1

    .line 16435
    .local v1, "r":Lcom/android/server/am/BroadcastRecord;
    if-eqz v1, :cond_1

    .line 16436
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v6, 0x1

    move v2, p2

    move-object v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/BroadcastQueue;->finishReceiverLocked(Lcom/android/server/am/BroadcastRecord;ILjava/lang/String;Landroid/os/Bundle;ZZ)Z

    move-result v7

    .line 16439
    :cond_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 16441
    if-eqz v7, :cond_2

    .line 16442
    :try_start_2
    iget-object v0, v1, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v2, 0x0

    invoke-virtual {v0, v2}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcast(Z)V

    .line 16444
    :cond_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 16446
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 16448
    return-void

    .line 16439
    .end local v1    # "r":Lcom/android/server/am/BroadcastRecord;
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 16446
    :catchall_1
    move-exception v0

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method finishRunningVoiceLocked()V
    .locals 1

    .prologue
    .line 10018
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Z

    if-eqz v0, :cond_0

    .line 10019
    const/4 v0, 0x0

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Z

    .line 10020
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 10022
    :cond_0
    return-void
.end method

.method public final finishSubActivity(Landroid/os/IBinder;Ljava/lang/String;I)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "resultWho"    # Ljava/lang/String;
    .param p3, "requestCode"    # I

    .prologue
    .line 4439
    monitor-enter p0

    .line 4440
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4441
    .local v0, "origId":J
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 4442
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    .line 4443
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v3, v2, p2, p3}, Lcom/android/server/am/ActivityStack;->finishSubActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V

    .line 4445
    :cond_0
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4446
    monitor-exit p0

    .line 4447
    return-void

    .line 4446
    .end local v0    # "origId":J
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3
.end method

.method finishUserBoot(Lcom/android/server/am/UserStartedState;)V
    .locals 17
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;

    .prologue
    .line 19253
    monitor-enter p0

    .line 19254
    :try_start_0
    move-object/from16 v0, p1

    iget v1, v0, Lcom/android/server/am/UserStartedState;->mState:I

    if-nez v1, :cond_0

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/UserStartedState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v2}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v2

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    move-object/from16 v0, p1

    if-ne v1, v0, :cond_0

    .line 19256
    const/4 v1, 0x1

    move-object/from16 v0, p1

    iput v1, v0, Lcom/android/server/am/UserStartedState;->mState:I

    .line 19257
    move-object/from16 v0, p1

    iget-object v1, v0, Lcom/android/server/am/UserStartedState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v1}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v16

    .line 19258
    .local v16, "userId":I
    new-instance v4, Landroid/content/Intent;

    const-string v1, "android.intent.action.BOOT_COMPLETED"

    const/4 v2, 0x0

    invoke-direct {v4, v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 19259
    .local v4, "intent":Landroid/content/Intent;
    const-string v1, "android.intent.extra.user_handle"

    move/from16 v0, v16

    invoke-virtual {v4, v1, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    .line 19260
    const/high16 v1, 0x8000000

    invoke-virtual {v4, v1}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    .line 19261
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const-string v10, "android.permission.RECEIVE_BOOT_COMPLETED"

    const/4 v11, -0x1

    const/4 v12, 0x1

    const/4 v13, 0x0

    sget v14, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v15, 0x3e8

    move-object/from16 v1, p0

    invoke-direct/range {v1 .. v16}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .line 19266
    .end local v4    # "intent":Landroid/content/Intent;
    .end local v16    # "userId":I
    :cond_0
    monitor-exit p0

    .line 19267
    return-void

    .line 19266
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method finishUserStop(Lcom/android/server/am/UserStartedState;)V
    .locals 6
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;

    .prologue
    .line 19413
    iget-object v4, p1, Lcom/android/server/am/UserStartedState;->mHandle:Landroid/os/UserHandle;

    invoke-virtual {v4}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v3

    .line 19416
    .local v3, "userId":I
    monitor-enter p0

    .line 19417
    :try_start_0
    new-instance v0, Ljava/util/ArrayList;

    iget-object v4, p1, Lcom/android/server/am/UserStartedState;->mStopCallbacks:Ljava/util/ArrayList;

    invoke-direct {v0, v4}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    .line 19418
    .local v0, "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v4

    if-eq v4, p1, :cond_0

    .line 19419
    const/4 v2, 0x0

    .line 19435
    .local v2, "stopped":Z
    :goto_0
    invoke-direct {p0, v3}, Lcom/android/server/am/ActivityManagerService;->removeRecentTasksForUserLocked(I)V

    .line 19436
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19438
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v1, v4, :cond_3

    .line 19440
    if-eqz v2, :cond_2

    :try_start_1
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/app/IStopUserCallback;

    invoke-interface {v4, v3}, Landroid/app/IStopUserCallback;->userStopped(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0

    .line 19438
    :goto_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 19420
    .end local v1    # "i":I
    .end local v2    # "stopped":Z
    :cond_0
    :try_start_2
    iget v4, p1, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v5, 0x3

    if-eq v4, v5, :cond_1

    .line 19421
    const/4 v2, 0x0

    .restart local v2    # "stopped":Z
    goto :goto_0

    .line 19423
    .end local v2    # "stopped":Z
    :cond_1
    const/4 v2, 0x1

    .line 19425
    .restart local v2    # "stopped":Z
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v4, v3}, Landroid/util/SparseArray;->remove(I)V

    .line 19426
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 19427
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateStartedUserArrayLocked()V

    .line 19431
    const-string v4, "finish user"

    invoke-direct {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->forceStopUserLocked(ILjava/lang/String;)V

    goto :goto_0

    .line 19436
    .end local v0    # "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    .end local v2    # "stopped":Z
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v4

    .line 19441
    .restart local v0    # "callbacks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IStopUserCallback;>;"
    .restart local v1    # "i":I
    .restart local v2    # "stopped":Z
    :cond_2
    :try_start_3
    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/app/IStopUserCallback;

    invoke-interface {v4, v3}, Landroid/app/IStopUserCallback;->userStopAborted(I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0

    goto :goto_2

    .line 19442
    :catch_0
    move-exception v4

    goto :goto_2

    .line 19446
    :cond_3
    if-eqz v2, :cond_4

    .line 19447
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    invoke-virtual {v4, v3}, Lcom/android/server/SystemServiceManager;->cleanupUser(I)V

    .line 19448
    monitor-enter p0

    .line 19449
    :try_start_4
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4, v3}, Lcom/android/server/am/ActivityStackSupervisor;->removeUserLocked(I)V

    .line 19450
    monitor-exit p0

    .line 19452
    :cond_4
    return-void

    .line 19450
    :catchall_1
    move-exception v4

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v4
.end method

.method finishUserSwitch(Lcom/android/server/am/UserStartedState;)V
    .locals 7
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;

    .prologue
    const/4 v6, 0x3

    .line 19270
    monitor-enter p0

    .line 19271
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->finishUserBoot(Lcom/android/server/am/UserStartedState;)V

    .line 19273
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startProfilesLocked()V

    .line 19275
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 19276
    .local v1, "num":I
    const/4 v0, 0x0

    .line 19277
    .local v0, "i":I
    :goto_0
    if-le v1, v6, :cond_5

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v0, v4, :cond_5

    .line 19278
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    .line 19279
    .local v2, "oldUserId":Ljava/lang/Integer;
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v5

    invoke-virtual {v4, v5}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/UserStartedState;

    .line 19280
    .local v3, "oldUss":Lcom/android/server/am/UserStartedState;
    if-nez v3, :cond_0

    .line 19282
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mUserLru:Ljava/util/ArrayList;

    invoke-virtual {v4, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 19283
    add-int/lit8 v1, v1, -0x1

    .line 19284
    goto :goto_0

    .line 19286
    :cond_0
    iget v4, v3, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v5, 0x2

    if-eq v4, v5, :cond_1

    iget v4, v3, Lcom/android/server/am/UserStartedState;->mState:I

    if-ne v4, v6, :cond_2

    .line 19289
    :cond_1
    add-int/lit8 v1, v1, -0x1

    .line 19290
    add-int/lit8 v0, v0, 0x1

    .line 19291
    goto :goto_0

    .line 19293
    :cond_2
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    if-eqz v4, :cond_3

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-ne v4, v5, :cond_4

    .line 19295
    :cond_3
    add-int/lit8 v0, v0, 0x1

    .line 19296
    goto :goto_0

    .line 19299
    :cond_4
    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v4

    const/4 v5, 0x0

    invoke-direct {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I

    .line 19300
    add-int/lit8 v1, v1, -0x1

    .line 19301
    add-int/lit8 v0, v0, 0x1

    .line 19302
    goto :goto_0

    .line 19303
    .end local v2    # "oldUserId":Ljava/lang/Integer;
    .end local v3    # "oldUss":Lcom/android/server/am/UserStartedState;
    :cond_5
    monitor-exit p0

    .line 19304
    return-void

    .line 19303
    .end local v0    # "i":I
    .end local v1    # "num":I
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4
.end method

.method public finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V
    .locals 3
    .param p1, "session"    # Landroid/service/voice/IVoiceInteractionSession;

    .prologue
    .line 4477
    monitor-enter p0

    .line 4478
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 4480
    .local v0, "origId":J
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4482
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4484
    monitor-exit p0

    .line 4486
    return-void

    .line 4482
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 4484
    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method public forceStopPackage(Ljava/lang/String;I)V
    .locals 23
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 5278
    const-string v4, "android.permission.FORCE_STOP_PACKAGES"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v4

    if-eqz v4, :cond_0

    .line 5280
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Permission Denial: forceStopPackage() from pid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, ", uid="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " requires "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "android.permission.FORCE_STOP_PACKAGES"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    .line 5284
    .local v18, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    move-object/from16 v0, v18

    invoke-static {v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5285
    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v18

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 5287
    .end local v18    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .line 5288
    .local v5, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const/4 v8, 0x1

    const/4 v9, 0x2

    const-string v10, "forceStopPackage"

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p2

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 5290
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v14

    .line 5292
    .local v14, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v20

    .line 5293
    .local v20, "pm":Landroid/content/pm/IPackageManager;
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5294
    const/4 v4, -0x1

    move/from16 v0, p2

    if-ne v0, v4, :cond_2

    :try_start_1
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getUsersLocked()[I

    move-result-object v22

    .line 5296
    .local v22, "users":[I
    :goto_0
    move-object/from16 v12, v22

    .local v12, "arr$":[I
    array-length v0, v12

    move/from16 v17, v0

    .local v17, "len$":I
    const/16 v16, 0x0

    .local v16, "i$":I
    :goto_1
    move/from16 v0, v16

    move/from16 v1, v17

    if-ge v0, v1, :cond_4

    aget v21, v12, v16
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5297
    .local v21, "user":I
    const/16 v19, -0x1

    .line 5299
    .local v19, "pkgUid":I
    :try_start_2
    move-object/from16 v0, v20

    move-object/from16 v1, p1

    move/from16 v2, v21

    invoke-interface {v0, v1, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_1
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    move-result v19

    .line 5302
    :goto_2
    const/4 v4, -0x1

    move/from16 v0, v19

    if-ne v0, v4, :cond_3

    .line 5303
    :try_start_3
    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Invalid packageName: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5296
    :cond_1
    :goto_3
    add-int/lit8 v16, v16, 0x1

    goto :goto_1

    .line 5294
    .end local v12    # "arr$":[I
    .end local v16    # "i$":I
    .end local v17    # "len$":I
    .end local v19    # "pkgUid":I
    .end local v21    # "user":I
    .end local v22    # "users":[I
    :cond_2
    const/4 v4, 0x1

    new-array v0, v4, [I

    move-object/from16 v22, v0

    const/4 v4, 0x0

    aput p2, v22, v4

    goto :goto_0

    .line 5317
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 5319
    .end local v20    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v4

    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4

    .line 5307
    .restart local v12    # "arr$":[I
    .restart local v16    # "i$":I
    .restart local v17    # "len$":I
    .restart local v19    # "pkgUid":I
    .restart local v20    # "pm":Landroid/content/pm/IPackageManager;
    .restart local v21    # "user":I
    .restart local v22    # "users":[I
    :cond_3
    const/4 v4, 0x1

    :try_start_5
    move-object/from16 v0, v20

    move-object/from16 v1, p1

    move/from16 v2, v21

    invoke-interface {v0, v1, v4, v2}, Landroid/content/pm/IPackageManager;->setPackageStoppedState(Ljava/lang/String;ZI)V
    :try_end_5
    .catch Landroid/os/RemoteException; {:try_start_5 .. :try_end_5} :catch_2
    .catch Ljava/lang/IllegalArgumentException; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 5313
    :goto_4
    const/4 v4, 0x0

    :try_start_6
    move-object/from16 v0, p0

    move/from16 v1, v21

    invoke-virtual {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v4

    if-eqz v4, :cond_1

    .line 5314
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "from pid "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, v19

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;ILjava/lang/String;)V

    goto :goto_3

    .line 5309
    :catch_0
    move-exception v13

    .line 5310
    .local v13, "e":Ljava/lang/IllegalArgumentException;
    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "Failed trying to unstop package "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    move-object/from16 v0, p1

    invoke-virtual {v6, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    const-string v7, ": "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_4

    .line 5317
    .end local v13    # "e":Ljava/lang/IllegalArgumentException;
    .end local v19    # "pkgUid":I
    .end local v21    # "user":I
    :cond_4
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    .line 5319
    invoke-static {v14, v15}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5321
    return-void

    .line 5300
    .restart local v19    # "pkgUid":I
    .restart local v21    # "user":I
    :catch_1
    move-exception v4

    goto/16 :goto_2

    .line 5308
    :catch_2
    move-exception v4

    goto :goto_4
.end method

.method foregroundTokenDied(Lcom/android/server/am/ActivityManagerService$ForegroundToken;)V
    .locals 5
    .param p1, "token"    # Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    .prologue
    .line 6726
    monitor-enter p0

    .line 6727
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6728
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    .line 6730
    .local v0, "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    if-eq v0, p1, :cond_0

    .line 6731
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 6743
    :goto_0
    return-void

    .line 6733
    :cond_0
    :try_start_3
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->remove(I)V

    .line 6734
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    invoke-virtual {v2, v4}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 6735
    .local v1, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_1

    .line 6736
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    monitor-exit p0

    goto :goto_0

    .line 6742
    .end local v0    # "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v2

    .line 6738
    .restart local v0    # "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :cond_1
    const/4 v2, 0x0

    :try_start_5
    iput-object v2, v1, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    .line 6739
    const/4 v2, 0x0

    const/4 v4, 0x0

    invoke-virtual {p0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    .line 6740
    monitor-exit v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 6741
    :try_start_6
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 6742
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_0

    .line 6740
    .end local v0    # "cur":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v1    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v2

    :try_start_7
    monitor-exit v3
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    throw v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0
.end method

.method public getActivityClassForToken(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6408
    monitor-enter p0

    .line 6409
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6410
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 6411
    const/4 v1, 0x0

    monitor-exit p0

    .line 6413
    :goto_0
    return-object v1

    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    monitor-exit p0

    goto :goto_0

    .line 6414
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getActivityDisplayId(Landroid/os/IBinder;)I
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 8673
    monitor-enter p0

    .line 8674
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 8675
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->isAttachedLocked()Z

    move-result v1

    if-eqz v1, :cond_0

    .line 8676
    iget-object v1, v0, Lcom/android/server/am/ActivityStack;->mActivityContainer:Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;->getDisplayId()I

    move-result v1

    monitor-exit p0

    .line 8678
    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    goto :goto_0

    .line 8679
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo;
    .locals 3
    .param p1, "aInfo"    # Landroid/content/pm/ActivityInfo;
    .param p2, "userId"    # I

    .prologue
    .line 19598
    if-eqz p1, :cond_0

    const/4 v1, 0x1

    if-ge p2, v1, :cond_1

    iget-object v1, p1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    const v2, 0x186a0

    if-ge v1, v2, :cond_1

    :cond_0
    move-object v0, p1

    .line 19605
    :goto_0
    return-object v0

    .line 19603
    :cond_1
    new-instance v0, Landroid/content/pm/ActivityInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .line 19604
    .local v0, "info":Landroid/content/pm/ActivityInfo;
    iget-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v1

    iput-object v1, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    goto :goto_0
.end method

.method public getActivityOptions(Landroid/os/IBinder;)Landroid/app/ActivityOptions;
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    const/4 v0, 0x0

    .line 10641
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .line 10643
    .local v2, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10644
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .line 10645
    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v1, :cond_0

    .line 10646
    iget-object v0, v1, Lcom/android/server/am/ActivityRecord;->pendingOptions:Landroid/app/ActivityOptions;

    .line 10647
    .local v0, "activityOptions":Landroid/app/ActivityOptions;
    const/4 v4, 0x0

    iput-object v4, v1, Lcom/android/server/am/ActivityRecord;->pendingOptions:Landroid/app/ActivityOptions;

    .line 10648
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10653
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .end local v0    # "activityOptions":Landroid/app/ActivityOptions;
    :goto_0
    return-object v0

    .line 10650
    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10653
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 10651
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 10653
    :catchall_1
    move-exception v4

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public getAllStackInfos()Ljava/util/List;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$StackInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8716
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v3, "getAllStackInfos()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8718
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8720
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8721
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStackSupervisor;->getAllStackInfosLocked()Ljava/util/ArrayList;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8724
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-object v2

    .line 8722
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 8724
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;
    .locals 3
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "userId"    # I

    .prologue
    .line 19589
    if-nez p1, :cond_0

    const/4 v0, 0x0

    .line 19594
    :goto_0
    return-object v0

    .line 19590
    :cond_0
    new-instance v0, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v0, p1}, Landroid/content/pm/ApplicationInfo;-><init>(Landroid/content/pm/ApplicationInfo;)V

    .line 19591
    .local v0, "newInfo":Landroid/content/pm/ApplicationInfo;
    iget v1, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-direct {p0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->applyUserId(II)I

    move-result v1

    iput v1, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 19592
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "/data/user/"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "/"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    iput-object v1, v0, Landroid/content/pm/ApplicationInfo;->dataDir:Ljava/lang/String;

    goto :goto_0
.end method

.method public getAppOpsService()Lcom/android/internal/app/IAppOpsService;
    .locals 1

    .prologue
    .line 1953
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    return-object v0
.end method

.method public getAppTaskThumbnailSize()Landroid/graphics/Point;
    .locals 3

    .prologue
    .line 8331
    monitor-enter p0

    .line 8332
    :try_start_0
    new-instance v0, Landroid/graphics/Point;

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailWidth:I

    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mThumbnailHeight:I

    invoke-direct {v0, v1, v2}, Landroid/graphics/Point;-><init>(II)V

    monitor-exit p0

    return-object v0

    .line 8333
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getAppTasks(Ljava/lang/String;)Ljava/util/List;
    .locals 11
    .param p1, "callingPackage"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/List",
            "<",
            "Landroid/app/IAppTask;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8031
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 8032
    .local v1, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 8034
    .local v4, "ident":J
    monitor-enter p0

    .line 8035
    :try_start_0
    new-instance v6, Ljava/util/ArrayList;

    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8039
    .local v6, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 8040
    .local v0, "N":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_0
    if-ge v2, v0, :cond_2

    .line 8041
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v10, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/TaskRecord;

    .line 8045
    .local v9, "tr":Lcom/android/server/am/TaskRecord;
    iget v10, v9, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    if-eq v10, v1, :cond_1

    .line 8040
    :cond_0
    :goto_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 8048
    :cond_1
    invoke-virtual {v9}, Lcom/android/server/am/TaskRecord;->getBaseIntent()Landroid/content/Intent;

    move-result-object v3

    .line 8049
    .local v3, "intent":Landroid/content/Intent;
    if-eqz v3, :cond_0

    invoke-virtual {v3}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v10

    invoke-virtual {v10}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_0

    .line 8053
    invoke-direct {p0, v9}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v8

    .line 8055
    .local v8, "taskInfo":Landroid/app/ActivityManager$RecentTaskInfo;
    new-instance v7, Lcom/android/server/am/ActivityManagerService$AppTaskImpl;

    iget v10, v8, Landroid/app/ActivityManager$RecentTaskInfo;->persistentId:I

    invoke-direct {v7, p0, v10, v1}, Lcom/android/server/am/ActivityManagerService$AppTaskImpl;-><init>(Lcom/android/server/am/ActivityManagerService;II)V

    .line 8056
    .local v7, "taskImpl":Lcom/android/server/am/ActivityManagerService$AppTaskImpl;
    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    .line 8059
    .end local v0    # "N":I
    .end local v2    # "i":I
    .end local v3    # "intent":Landroid/content/Intent;
    .end local v7    # "taskImpl":Lcom/android/server/am/ActivityManagerService$AppTaskImpl;
    .end local v8    # "taskInfo":Landroid/app/ActivityManager$RecentTaskInfo;
    .end local v9    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v10

    :try_start_2
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v10

    .line 8062
    .end local v6    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :catchall_1
    move-exception v10

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v10

    .line 8059
    .restart local v0    # "N":I
    .restart local v2    # "i":I
    .restart local v6    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/IAppTask;>;"
    :cond_2
    :try_start_3
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8061
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    return-object v6
.end method

.method public getAssistContextExtras(I)Landroid/os/Bundle;
    .locals 4
    .param p1, "requestType"    # I

    .prologue
    const/4 v1, 0x0

    .line 10445
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    invoke-direct {p0, p1, v1, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;I)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    .line 10447
    .local v0, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    if-nez v0, :cond_0

    .line 10465
    :goto_0
    return-object v1

    .line 10450
    :cond_0
    monitor-enter v0

    .line 10451
    :goto_1
    :try_start_0
    iget-boolean v1, v0, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->haveResult:Z
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-nez v1, :cond_1

    .line 10453
    :try_start_1
    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_1

    .line 10454
    :catch_0
    move-exception v1

    goto :goto_1

    .line 10457
    :cond_1
    :try_start_2
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    if-eqz v1, :cond_2

    .line 10458
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    const-string v2, "android.intent.extra.ASSIST_CONTEXT"

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    invoke-virtual {v1, v2, v3}, Landroid/os/Bundle;->putBundle(Ljava/lang/String;Landroid/os/Bundle;)V

    .line 10460
    :cond_2
    monitor-exit v0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10461
    monitor-enter p0

    .line 10462
    :try_start_3
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 10463
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeCallbacks(Ljava/lang/Runnable;)V

    .line 10464
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10465
    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->extras:Landroid/os/Bundle;

    goto :goto_0

    .line 10460
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v1

    .line 10464
    :catchall_1
    move-exception v1

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v1
.end method

.method public getCallingActivity(Landroid/os/IBinder;)Landroid/content/ComponentName;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6392
    monitor-enter p0

    .line 6393
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6394
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v1

    :goto_0
    monitor-exit p0

    return-object v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 6395
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getCallingPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6384
    monitor-enter p0

    .line 6385
    :try_start_0
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getCallingRecordLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6386
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    :goto_0
    monitor-exit p0

    return-object v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 6387
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getConfiguration()Landroid/content/res/Configuration;
    .locals 2

    .prologue
    .line 16625
    monitor-enter p0

    .line 16626
    :try_start_0
    new-instance v0, Landroid/content/res/Configuration;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-direct {v0, v1}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .line 16627
    .local v0, "ci":Landroid/content/res/Configuration;
    const/4 v1, 0x0

    iput-boolean v1, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    .line 16628
    monitor-exit p0

    .line 16629
    return-object v0

    .line 16628
    .end local v0    # "ci":Landroid/content/res/Configuration;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public final getContentProvider(Landroid/app/IApplicationThread;Ljava/lang/String;IZ)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 7
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "userId"    # I
    .param p4, "stable"    # Z

    .prologue
    .line 9503
    const-string v0, "getContentProvider"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9504
    if-nez p1, :cond_0

    .line 9505
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "null IApplicationThread when getting content provider "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 9507
    .local v6, "msg":Ljava/lang/String;
    const-string v0, "ActivityManager"

    invoke-static {v0, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9508
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v6}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9512
    .end local v6    # "msg":Ljava/lang/String;
    :cond_0
    const/4 v3, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move v4, p4

    move v5, p3

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->getContentProviderImpl(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/os/IBinder;ZI)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method public getContentProviderExternal(Ljava/lang/String;ILandroid/os/IBinder;)Landroid/app/IActivityManager$ContentProviderHolder;
    .locals 8
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "token"    # Landroid/os/IBinder;

    .prologue
    .line 9517
    const-string v0, "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY"

    const-string v1, "Do not have permission in call getContentProviderExternal()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9519
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string v6, "getContentProvider"

    const/4 v7, 0x0

    move-object v0, p0

    move v3, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 9521
    invoke-direct {p0, p1, p3, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v0

    return-object v0
.end method

.method public getCurrentUser()Landroid/content/pm/UserInfo;
    .locals 4

    .prologue
    .line 19456
    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 19460
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Permission Denial: getCurrentUser() from pid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ", uid="

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " requires "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 19464
    .local v0, "msg":Ljava/lang/String;
    const-string v2, "ActivityManager"

    invoke-static {v2, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 19465
    new-instance v2, Ljava/lang/SecurityException;

    invoke-direct {v2, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 19467
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 19468
    :try_start_0
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v3, -0x2710

    if-eq v2, v3, :cond_1

    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    .line 19469
    .local v1, "userId":I
    :goto_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v2

    invoke-virtual {v2, v1}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v2

    monitor-exit p0

    return-object v2

    .line 19468
    .end local v1    # "userId":I
    :cond_1
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    goto :goto_0

    .line 19470
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method getCurrentUserIdLocked()I
    .locals 2

    .prologue
    .line 19474
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    const/16 v1, -0x2710

    if-eq v0, v1, :cond_0

    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    :goto_0
    return v0

    :cond_0
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    goto :goto_0
.end method

.method public getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;
    .locals 3

    .prologue
    .line 16601
    new-instance v0, Landroid/content/pm/ConfigurationInfo;

    invoke-direct {v0}, Landroid/content/pm/ConfigurationInfo;-><init>()V

    .line 16602
    .local v0, "config":Landroid/content/pm/ConfigurationInfo;
    monitor-enter p0

    .line 16603
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->touchscreen:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqTouchScreen:I

    .line 16604
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqKeyboardType:I

    .line 16605
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->navigation:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqNavigation:I

    .line 16606
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->navigation:I

    const/4 v2, 0x2

    if-eq v1, v2, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->navigation:I

    const/4 v2, 0x3

    if-ne v1, v2, :cond_1

    .line 16608
    :cond_0
    iget v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    or-int/lit8 v1, v1, 0x2

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    .line 16610
    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I

    if-eqz v1, :cond_2

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget v1, v1, Landroid/content/res/Configuration;->keyboard:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_2

    .line 16612
    iget v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    or-int/lit8 v1, v1, 0x1

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqInputFeatures:I

    .line 16614
    :cond_2
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->GL_ES_VERSION:I

    iput v1, v0, Landroid/content/pm/ConfigurationInfo;->reqGlEsVersion:I

    .line 16615
    monitor-exit p0

    .line 16616
    return-object v0

    .line 16615
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method getFocusedStack()Lcom/android/server/am/ActivityStack;
    .locals 1

    .prologue
    .line 16620
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v0

    return-object v0
.end method

.method public getFrontActivityScreenCompatMode()I
    .locals 1

    .prologue
    .line 3247
    const-string v0, "getFrontActivityScreenCompatMode"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3248
    monitor-enter p0

    .line 3249
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0}, Lcom/android/server/am/CompatModePackages;->getFrontActivityScreenCompatModeLocked()I

    move-result v0

    monitor-exit p0

    return v0

    .line 3250
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getHomeActivityToken()Landroid/os/IBinder;
    .locals 2
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 8635
    const-string v0, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v1, "getHomeActivityToken()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8637
    monitor-enter p0

    .line 8638
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->getHomeActivityToken()Landroid/os/IBinder;

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 8639
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method getHomeIntent()Landroid/content/Intent;
    .locals 3

    .prologue
    .line 3110
    new-instance v0, Landroid/content/Intent;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    invoke-static {v1}, Landroid/net/Uri;->parse(Ljava/lang/String;)Landroid/net/Uri;

    move-result-object v1

    :goto_0
    invoke-direct {v0, v2, v1}, Landroid/content/Intent;-><init>(Ljava/lang/String;Landroid/net/Uri;)V

    .line 3111
    .local v0, "intent":Landroid/content/Intent;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    invoke-virtual {v0, v1}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    .line 3112
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v2, 0x1

    if-eq v1, v2, :cond_0

    .line 3113
    const-string v1, "android.intent.category.HOME"

    invoke-virtual {v0, v1}, Landroid/content/Intent;->addCategory(Ljava/lang/String;)Landroid/content/Intent;

    .line 3115
    :cond_0
    return-object v0

    .line 3110
    .end local v0    # "intent":Landroid/content/Intent;
    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method public getIntentForIntentSender(Landroid/content/IIntentSender;)Landroid/content/Intent;
    .locals 5
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v3, 0x0

    .line 6664
    instance-of v2, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v2, :cond_0

    .line 6672
    :goto_0
    return-object v3

    .line 6668
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 6669
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v2, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v2, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v2, :cond_1

    new-instance v2, Landroid/content/Intent;

    iget-object v4, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    invoke-direct {v2, v4}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    :goto_1
    move-object v3, v2

    goto :goto_0

    :cond_1
    move-object v2, v3

    goto :goto_1

    .line 6670
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v2

    goto :goto_0
.end method

.method public getIntentSender(ILjava/lang/String;Landroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)Landroid/content/IIntentSender;
    .locals 22
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "token"    # Landroid/os/IBinder;
    .param p4, "resultWho"    # Ljava/lang/String;
    .param p5, "requestCode"    # I
    .param p6, "intents"    # [Landroid/content/Intent;
    .param p7, "resolvedTypes"    # [Ljava/lang/String;
    .param p8, "flags"    # I
    .param p9, "options"    # Landroid/os/Bundle;
    .param p10, "userId"    # I

    .prologue
    .line 6433
    const-string v1, "getIntentSender"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6435
    if-eqz p6, :cond_5

    .line 6436
    move-object/from16 v0, p6

    array-length v1, v0

    const/4 v2, 0x1

    if-ge v1, v2, :cond_0

    .line 6437
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Intents array length must be >= 1"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6439
    :cond_0
    const/16 v17, 0x0

    .local v17, "i":I
    :goto_0
    move-object/from16 v0, p6

    array-length v1, v0

    move/from16 v0, v17

    if-ge v0, v1, :cond_4

    .line 6440
    aget-object v18, p6, v17

    .line 6441
    .local v18, "intent":Landroid/content/Intent;
    if-eqz v18, :cond_3

    .line 6442
    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    if-eqz v1, :cond_1

    .line 6443
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6445
    :cond_1
    const/4 v1, 0x1

    move/from16 v0, p1

    if-ne v0, v1, :cond_2

    invoke-virtual/range {v18 .. v18}, Landroid/content/Intent;->getFlags()I

    move-result v1

    const/high16 v2, 0x2000000

    and-int/2addr v1, v2

    if-eqz v1, :cond_2

    .line 6447
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6450
    :cond_2
    new-instance v1, Landroid/content/Intent;

    move-object/from16 v0, v18

    invoke-direct {v1, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    aput-object v1, p6, v17

    .line 6439
    :cond_3
    add-int/lit8 v17, v17, 0x1

    goto :goto_0

    .line 6453
    .end local v18    # "intent":Landroid/content/Intent;
    :cond_4
    if-eqz p7, :cond_5

    move-object/from16 v0, p7

    array-length v1, v0

    move-object/from16 v0, p6

    array-length v2, v0

    if-eq v1, v2, :cond_5

    .line 6454
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "Intent array length does not match resolvedTypes length"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6458
    .end local v17    # "i":I
    :cond_5
    if-eqz p9, :cond_6

    .line 6459
    invoke-virtual/range {p9 .. p9}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v1

    if-eqz v1, :cond_6

    .line 6460
    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in options"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 6464
    :cond_6
    monitor-enter p0

    .line 6465
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 6466
    .local v3, "callingUid":I
    move/from16 v20, p10

    .line 6467
    .local v20, "origUserId":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    const/4 v1, 0x1

    move/from16 v0, p1

    if-ne v0, v1, :cond_8

    const/4 v5, 0x1

    :goto_1
    const/4 v6, 0x0

    const-string v7, "getIntentSender"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p10

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result p10

    .line 6470
    const/4 v1, -0x2

    move/from16 v0, v20

    if-ne v0, v1, :cond_7

    .line 6474
    const/16 p10, -0x2

    .line 6477
    :cond_7
    if-eqz v3, :cond_9

    const/16 v1, 0x3e8

    if-eq v3, v1, :cond_9

    .line 6478
    :try_start_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v1

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v2

    move-object/from16 v0, p2

    invoke-interface {v1, v0, v2}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v21

    .line 6480
    .local v21, "uid":I
    move/from16 v0, v21

    invoke-static {v3, v0}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v1

    if-nez v1, :cond_9

    .line 6481
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: getIntentSender() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", (need uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move/from16 v0, v21

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " is not allowed to send as package "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    move-object/from16 v0, p2

    invoke-virtual {v1, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v19

    .line 6486
    .local v19, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    move-object/from16 v0, v19

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 6487
    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v19

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6494
    .end local v19    # "msg":Ljava/lang/String;
    .end local v21    # "uid":I
    :catch_0
    move-exception v16

    .line 6495
    .local v16, "e":Landroid/os/RemoteException;
    :try_start_2
    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v16

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/Throwable;)V

    throw v1

    .line 6497
    .end local v3    # "callingUid":I
    .end local v16    # "e":Landroid/os/RemoteException;
    .end local v20    # "origUserId":I
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    .line 6467
    .restart local v3    # "callingUid":I
    .restart local v20    # "origUserId":I
    :cond_8
    const/4 v5, 0x0

    goto/16 :goto_1

    :cond_9
    move-object/from16 v4, p0

    move/from16 v5, p1

    move-object/from16 v6, p2

    move v7, v3

    move/from16 v8, p10

    move-object/from16 v9, p3

    move-object/from16 v10, p4

    move/from16 v11, p5

    move-object/from16 v12, p6

    move-object/from16 v13, p7

    move/from16 v14, p8

    move-object/from16 v15, p9

    .line 6491
    :try_start_3
    invoke-virtual/range {v4 .. v15}, Lcom/android/server/am/ActivityManagerService;->getIntentSenderLocked(ILjava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    move-result-object v1

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    return-object v1
.end method

.method getIntentSenderLocked(ILjava/lang/String;IILandroid/os/IBinder;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;)Landroid/content/IIntentSender;
    .locals 18
    .param p1, "type"    # I
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "callingUid"    # I
    .param p4, "userId"    # I
    .param p5, "token"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "intents"    # [Landroid/content/Intent;
    .param p9, "resolvedTypes"    # [Ljava/lang/String;
    .param p10, "flags"    # I
    .param p11, "options"    # Landroid/os/Bundle;

    .prologue
    .line 6506
    const/4 v5, 0x0

    .line 6507
    .local v5, "activity":Lcom/android/server/am/ActivityRecord;
    const/4 v3, 0x3

    move/from16 v0, p1

    if-ne v0, v3, :cond_2

    .line 6508
    invoke-static/range {p5 .. p5}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v5

    .line 6509
    if-nez v5, :cond_1

    .line 6510
    const/4 v15, 0x0

    .line 6562
    :cond_0
    :goto_0
    return-object v15

    .line 6512
    :cond_1
    iget-boolean v3, v5, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-eqz v3, :cond_2

    .line 6513
    const/4 v15, 0x0

    goto :goto_0

    .line 6517
    :cond_2
    const/high16 v3, 0x20000000

    and-int v3, v3, p10

    if-eqz v3, :cond_4

    const/4 v14, 0x1

    .line 6518
    .local v14, "noCreate":Z
    :goto_1
    const/high16 v3, 0x10000000

    and-int v3, v3, p10

    if-eqz v3, :cond_5

    const/4 v13, 0x1

    .line 6519
    .local v13, "cancelCurrent":Z
    :goto_2
    const/high16 v3, 0x8000000

    and-int v3, v3, p10

    if-eqz v3, :cond_6

    const/16 v17, 0x1

    .line 6520
    .local v17, "updateCurrent":Z
    :goto_3
    const v3, -0x38000001

    and-int p10, p10, v3

    .line 6523
    new-instance v2, Lcom/android/server/am/PendingIntentRecord$Key;

    move/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v6, p6

    move/from16 v7, p7

    move-object/from16 v8, p8

    move-object/from16 v9, p9

    move/from16 v10, p10

    move-object/from16 v11, p11

    move/from16 v12, p4

    invoke-direct/range {v2 .. v12}, Lcom/android/server/am/PendingIntentRecord$Key;-><init>(ILjava/lang/String;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I[Landroid/content/Intent;[Ljava/lang/String;ILandroid/os/Bundle;I)V

    .line 6527
    .local v2, "key":Lcom/android/server/am/PendingIntentRecord$Key;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v16

    check-cast v16, Ljava/lang/ref/WeakReference;

    .line 6528
    .local v16, "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    if-eqz v16, :cond_7

    invoke-virtual/range {v16 .. v16}, Ljava/lang/ref/WeakReference;->get()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/PendingIntentRecord;

    move-object v15, v3

    .line 6529
    .local v15, "rec":Lcom/android/server/am/PendingIntentRecord;
    :goto_4
    if-eqz v15, :cond_b

    .line 6530
    if-nez v13, :cond_a

    .line 6531
    if-eqz v17, :cond_0

    .line 6532
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz v3, :cond_3

    .line 6533
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    if-eqz p8, :cond_8

    move-object/from16 v0, p8

    array-length v3, v0

    add-int/lit8 v3, v3, -0x1

    aget-object v3, p8, v3

    :goto_5
    invoke-virtual {v4, v3}, Landroid/content/Intent;->replaceExtras(Landroid/content/Intent;)Landroid/content/Intent;

    .line 6536
    :cond_3
    if-eqz p8, :cond_9

    .line 6537
    move-object/from16 v0, p8

    array-length v3, v0

    add-int/lit8 v3, v3, -0x1

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v4, v4, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    aput-object v4, p8, v3

    .line 6538
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    move-object/from16 v0, p8

    iput-object v0, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    .line 6539
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    move-object/from16 v0, p9

    iput-object v0, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    goto/16 :goto_0

    .line 6517
    .end local v2    # "key":Lcom/android/server/am/PendingIntentRecord$Key;
    .end local v13    # "cancelCurrent":Z
    .end local v14    # "noCreate":Z
    .end local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v16    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    .end local v17    # "updateCurrent":Z
    :cond_4
    const/4 v14, 0x0

    goto :goto_1

    .line 6518
    .restart local v14    # "noCreate":Z
    :cond_5
    const/4 v13, 0x0

    goto :goto_2

    .line 6519
    .restart local v13    # "cancelCurrent":Z
    :cond_6
    const/16 v17, 0x0

    goto :goto_3

    .line 6528
    .restart local v2    # "key":Lcom/android/server/am/PendingIntentRecord$Key;
    .restart local v16    # "ref":Ljava/lang/ref/WeakReference;, "Ljava/lang/ref/WeakReference<Lcom/android/server/am/PendingIntentRecord;>;"
    .restart local v17    # "updateCurrent":Z
    :cond_7
    const/4 v15, 0x0

    goto :goto_4

    .line 6533
    .restart local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    :cond_8
    const/4 v3, 0x0

    goto :goto_5

    .line 6541
    :cond_9
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    const/4 v4, 0x0

    iput-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    .line 6542
    iget-object v3, v15, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    const/4 v4, 0x0

    iput-object v4, v3, Lcom/android/server/am/PendingIntentRecord$Key;->allResolvedTypes:[Ljava/lang/String;

    goto/16 :goto_0

    .line 6547
    :cond_a
    const/4 v3, 0x1

    iput-boolean v3, v15, Lcom/android/server/am/PendingIntentRecord;->canceled:Z

    .line 6548
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 6550
    :cond_b
    if-nez v14, :cond_0

    .line 6553
    new-instance v15, Lcom/android/server/am/PendingIntentRecord;

    .end local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-direct {v15, v0, v2, v1}, Lcom/android/server/am/PendingIntentRecord;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/PendingIntentRecord$Key;I)V

    .line 6554
    .restart local v15    # "rec":Lcom/android/server/am/PendingIntentRecord;
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mIntentSenderRecords:Ljava/util/HashMap;

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v3, v2, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 6555
    const/4 v3, 0x3

    move/from16 v0, p1

    if-ne v0, v3, :cond_0

    .line 6556
    iget-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    if-nez v3, :cond_c

    .line 6557
    new-instance v3, Ljava/util/HashSet;

    invoke-direct {v3}, Ljava/util/HashSet;-><init>()V

    iput-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    .line 6560
    :cond_c
    iget-object v3, v5, Lcom/android/server/am/ActivityRecord;->pendingResults:Ljava/util/HashSet;

    iget-object v4, v15, Lcom/android/server/am/PendingIntentRecord;->ref:Ljava/lang/ref/WeakReference;

    invoke-virtual {v3, v4}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto/16 :goto_0
.end method

.method public getLaunchedFromPackage(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;

    .prologue
    .line 16852
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forToken(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 16853
    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 16854
    const/4 v1, 0x0

    .line 16856
    :goto_0
    return-object v1

    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    goto :goto_0
.end method

.method public getLaunchedFromUid(Landroid/os/IBinder;)I
    .locals 2
    .param p1, "activityToken"    # Landroid/os/IBinder;

    .prologue
    .line 16844
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forToken(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 16845
    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 16846
    const/4 v1, -0x1

    .line 16848
    :goto_0
    return v1

    :cond_0
    iget v1, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    goto :goto_0
.end method

.method public getMemoryInfo(Landroid/app/ActivityManager$MemoryInfo;)V
    .locals 14
    .param p1, "outInfo"    # Landroid/app/ActivityManager$MemoryInfo;

    .prologue
    const/4 v5, 0x1

    const/4 v6, 0x0

    .line 8010
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v7, 0x6

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v2

    .line 8011
    .local v2, "homeAppMem":J
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/16 v7, 0x9

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    .line 8012
    .local v0, "cachedAppMem":J
    invoke-static {}, Landroid/os/Process;->getFreeMemory()J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J

    .line 8013
    invoke-static {}, Landroid/os/Process;->getTotalMemory()J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->totalMem:J

    .line 8014
    iput-wide v2, p1, Landroid/app/ActivityManager$MemoryInfo;->threshold:J

    .line 8015
    iget-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->availMem:J

    sub-long v10, v0, v2

    const-wide/16 v12, 0x2

    div-long/2addr v10, v12

    add-long/2addr v10, v2

    cmp-long v4, v8, v10

    if-gez v4, :cond_0

    move v4, v5

    :goto_0
    iput-boolean v4, p1, Landroid/app/ActivityManager$MemoryInfo;->lowMemory:Z

    .line 8016
    iput-wide v0, p1, Landroid/app/ActivityManager$MemoryInfo;->hiddenAppThreshold:J

    .line 8017
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    const/4 v7, 0x5

    invoke-virtual {v4, v7}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v8

    iput-wide v8, p1, Landroid/app/ActivityManager$MemoryInfo;->secondaryServerThreshold:J

    .line 8019
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, v5}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v4

    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->visibleAppThreshold:J

    .line 8021
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v4, v6}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v4

    iput-wide v4, p1, Landroid/app/ActivityManager$MemoryInfo;->foregroundAppThreshold:J

    .line 8023
    return-void

    :cond_0
    move v4, v6

    .line 8015
    goto :goto_0
.end method

.method public getMyMemoryState(Landroid/app/ActivityManager$RunningAppProcessInfo;)V
    .locals 4
    .param p1, "outInfo"    # Landroid/app/ActivityManager$RunningAppProcessInfo;

    .prologue
    .line 12327
    const-string v1, "getMyMemoryState"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12328
    monitor-enter p0

    .line 12330
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 12331
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 12332
    .local v0, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 12333
    :try_start_2
    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V

    .line 12334
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 12335
    return-void

    .line 12332
    .end local v0    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_3
    monitor-exit v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v1

    .line 12334
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v1
.end method

.method public getPackageAskScreenCompat(Ljava/lang/String;)Z
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 3281
    const-string v0, "getPackageAskScreenCompat"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3282
    monitor-enter p0

    .line 3283
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageAskCompatModeLocked(Ljava/lang/String;)Z

    move-result v0

    monitor-exit p0

    return v0

    .line 3284
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getPackageForIntentSender(Landroid/content/IIntentSender;)Ljava/lang/String;
    .locals 4
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v2, 0x0

    .line 6601
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_0

    .line 6609
    :goto_0
    return-object v2

    .line 6605
    :cond_0
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 6606
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v3, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v2, v3, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 6607
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v3

    goto :goto_0
.end method

.method public getPackageForToken(Landroid/os/IBinder;)Ljava/lang/String;
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6419
    monitor-enter p0

    .line 6420
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 6421
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 6422
    const/4 v1, 0x0

    monitor-exit p0

    .line 6424
    :goto_0
    return-object v1

    :cond_0
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    monitor-exit p0

    goto :goto_0

    .line 6425
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getPackageScreenCompatMode(Ljava/lang/String;)I
    .locals 1
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    .line 3264
    const-string v0, "getPackageScreenCompatMode"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 3265
    monitor-enter p0

    .line 3266
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->getPackageScreenCompatModeLocked(Ljava/lang/String;)I

    move-result v0

    monitor-exit p0

    return v0

    .line 3267
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getPersistedUriPermissions(Ljava/lang/String;Z)Landroid/content/pm/ParceledListSlice;
    .locals 13
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "incoming"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Z)",
            "Landroid/content/pm/ParceledListSlice",
            "<",
            "Landroid/content/UriPermission;",
            ">;"
        }
    .end annotation

    .prologue
    .line 7948
    const-string v10, "getPersistedUriPermissions"

    invoke-virtual {p0, v10}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7949
    const-string v10, "packageName"

    invoke-static {p1, v10}, Lcom/android/internal/util/Preconditions;->checkNotNull(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 7951
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 7952
    .local v0, "callingUid":I
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v7

    .line 7954
    .local v7, "pm":Landroid/content/pm/IPackageManager;
    :try_start_0
    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    invoke-interface {v7, p1, v10}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v4

    .line 7955
    .local v4, "packageUid":I
    if-eq v4, v0, :cond_0

    .line 7956
    new-instance v10, Ljava/lang/SecurityException;

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "Package "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    const-string v12, " does not belong to calling UID "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-direct {v10, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v10
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 7959
    .end local v4    # "packageUid":I
    :catch_0
    move-exception v1

    .line 7960
    .local v1, "e":Landroid/os/RemoteException;
    new-instance v10, Ljava/lang/SecurityException;

    const-string v11, "Failed to verify package name ownership"

    invoke-direct {v10, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v10

    .line 7963
    .end local v1    # "e":Landroid/os/RemoteException;
    .restart local v4    # "packageUid":I
    :cond_0
    invoke-static {}, Lcom/google/android/collect/Lists;->newArrayList()Ljava/util/ArrayList;

    move-result-object v8

    .line 7964
    .local v8, "result":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/UriPermission;>;"
    monitor-enter p0

    .line 7965
    if-eqz p2, :cond_4

    .line 7966
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 7968
    .local v6, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-nez v6, :cond_2

    .line 7969
    const-string v10, "ActivityManager"

    new-instance v11, Ljava/lang/StringBuilder;

    invoke-direct {v11}, Ljava/lang/StringBuilder;-><init>()V

    const-string v12, "No permission grants found for "

    invoke-virtual {v11, v12}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    invoke-static {v10, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 7989
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7990
    new-instance v10, Landroid/content/pm/ParceledListSlice;

    invoke-direct {v10, v8}, Landroid/content/pm/ParceledListSlice;-><init>(Ljava/util/List;)V

    return-object v10

    .line 7971
    .restart local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_2
    :try_start_2
    invoke-virtual {v6}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v10

    invoke-interface {v10}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .local v3, "i$":Ljava/util/Iterator;
    :cond_3
    :goto_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 7972
    .local v5, "perm":Lcom/android/server/am/UriPermission;
    iget-object v10, v5, Lcom/android/server/am/UriPermission;->targetPkg:Ljava/lang/String;

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_3

    iget v10, v5, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v10, :cond_3

    .line 7973
    invoke-virtual {v5}, Lcom/android/server/am/UriPermission;->buildPersistedPublicApiObject()Landroid/content/UriPermission;

    move-result-object v10

    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 7989
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v5    # "perm":Lcom/android/server/am/UriPermission;
    .end local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :catchall_0
    move-exception v10

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v10

    .line 7978
    :cond_4
    :try_start_3
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v9

    .line 7979
    .local v9, "size":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v9, :cond_1

    .line 7980
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    invoke-virtual {v10, v2}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .line 7982
    .restart local v6    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    invoke-virtual {v6}, Landroid/util/ArrayMap;->values()Ljava/util/Collection;

    move-result-object v10

    invoke-interface {v10}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .restart local v3    # "i$":Ljava/util/Iterator;
    :cond_5
    :goto_2
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_6

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/UriPermission;

    .line 7983
    .restart local v5    # "perm":Lcom/android/server/am/UriPermission;
    iget-object v10, v5, Lcom/android/server/am/UriPermission;->sourcePkg:Ljava/lang/String;

    invoke-virtual {p1, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_5

    iget v10, v5, Lcom/android/server/am/UriPermission;->persistedModeFlags:I

    if-eqz v10, :cond_5

    .line 7984
    invoke-virtual {v5}, Lcom/android/server/am/UriPermission;->buildPersistedPublicApiObject()Landroid/content/UriPermission;

    move-result-object v10

    invoke-virtual {v8, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_2

    .line 7979
    .end local v5    # "perm":Lcom/android/server/am/UriPermission;
    :cond_6
    add-int/lit8 v2, v2, 0x1

    goto :goto_1
.end method

.method public getProcessLimit()I
    .locals 1

    .prologue
    .line 6720
    monitor-enter p0

    .line 6721
    :try_start_0
    iget v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    monitor-exit p0

    return v0

    .line 6722
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getProcessMemoryInfo([I)[Landroid/os/Debug$MemoryInfo;
    .locals 12
    .param p1, "pids"    # [I

    .prologue
    const/4 v11, 0x0

    .line 5422
    const-string v1, "getProcessMemoryInfo"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5423
    array-length v1, p1

    new-array v8, v1, [Landroid/os/Debug$MemoryInfo;

    .line 5424
    .local v8, "infos":[Landroid/os/Debug$MemoryInfo;
    array-length v1, p1

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 5427
    monitor-enter p0

    .line 5428
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5429
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v3, p1, v0

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    .line 5430
    .local v10, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v10, :cond_2

    iget v9, v10, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 5431
    .local v9, "oomAdj":I
    :goto_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5432
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5433
    new-instance v1, Landroid/os/Debug$MemoryInfo;

    invoke-direct {v1}, Landroid/os/Debug$MemoryInfo;-><init>()V

    aput-object v1, v8, v0

    .line 5434
    aget v1, p1, v0

    aget-object v2, v8, v0

    invoke-static {v1, v2}, Landroid/os/Debug;->getMemoryInfo(ILandroid/os/Debug$MemoryInfo;)V

    .line 5435
    if-eqz v10, :cond_1

    .line 5436
    monitor-enter p0

    .line 5437
    :try_start_3
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_0

    iget v1, v10, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-ne v1, v9, :cond_0

    .line 5439
    iget-object v1, v10, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    aget-object v2, v8, v0

    invoke-virtual {v2}, Landroid/os/Debug$MemoryInfo;->getTotalPss()I

    move-result v2

    int-to-long v2, v2

    aget-object v4, v8, v0

    invoke-virtual {v4}, Landroid/os/Debug$MemoryInfo;->getTotalUss()I

    move-result v4

    int-to-long v4, v4

    const/4 v6, 0x0

    iget-object v7, v10, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 5442
    :cond_0
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 5424
    :cond_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .end local v9    # "oomAdj":I
    :cond_2
    move v9, v11

    .line 5430
    goto :goto_1

    .line 5431
    .end local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v1

    .line 5432
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v1

    .line 5442
    .restart local v9    # "oomAdj":I
    .restart local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_2
    move-exception v1

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw v1

    .line 5445
    .end local v9    # "oomAdj":I
    .end local v10    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    return-object v8
.end method

.method public getProcessPss([I)[J
    .locals 13
    .param p1, "pids"    # [I

    .prologue
    const/4 v12, 0x0

    .line 5450
    const-string v1, "getProcessPss"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 5451
    array-length v1, p1

    new-array v10, v1, [J

    .line 5452
    .local v10, "pss":[J
    array-length v1, p1

    add-int/lit8 v0, v1, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    .line 5455
    monitor-enter p0

    .line 5456
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5457
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v3, p1, v0

    invoke-virtual {v1, v3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 5458
    .local v9, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v9, :cond_2

    iget v8, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 5459
    .local v8, "oomAdj":I
    :goto_1
    monitor-exit v2
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5460
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5461
    const/4 v1, 0x1

    new-array v11, v1, [J

    .line 5462
    .local v11, "tmpUss":[J
    aget v1, p1, v0

    const/4 v2, 0x0

    invoke-static {v1, v11, v2}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v2

    aput-wide v2, v10, v0

    .line 5463
    if-eqz v9, :cond_1

    .line 5464
    monitor-enter p0

    .line 5465
    :try_start_3
    iget-object v1, v9, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v1, :cond_0

    iget v1, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I

    if-ne v1, v8, :cond_0

    .line 5467
    iget-object v1, v9, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    aget-wide v2, v10, v0

    const/4 v4, 0x0

    aget-wide v4, v11, v4

    const/4 v6, 0x0

    iget-object v7, v9, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    invoke-virtual/range {v1 .. v7}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 5469
    :cond_0
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    .line 5452
    :cond_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .end local v8    # "oomAdj":I
    .end local v11    # "tmpUss":[J
    :cond_2
    move v8, v12

    .line 5458
    goto :goto_1

    .line 5459
    .end local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    :try_start_4
    monitor-exit v2
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v1

    .line 5460
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    throw v1

    .line 5469
    .restart local v8    # "oomAdj":I
    .restart local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v11    # "tmpUss":[J
    :catchall_2
    move-exception v1

    :try_start_6
    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    throw v1

    .line 5472
    .end local v8    # "oomAdj":I
    .end local v9    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v11    # "tmpUss":[J
    :cond_3
    return-object v10
.end method

.method final getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I
    .param p3, "keepIfLarge"    # Z

    .prologue
    .line 2688
    const/16 v5, 0x3e8

    if-ne p2, v5, :cond_3

    .line 2692
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v5

    invoke-virtual {v5, p1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/util/SparseArray;

    .line 2693
    .local v4, "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    if-nez v4, :cond_0

    const/4 v5, 0x0

    .line 2724
    .end local v4    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :goto_0
    return-object v5

    .line 2694
    .restart local v4    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_0
    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 2695
    .local v2, "procCount":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    if-ge v0, v2, :cond_3

    .line 2696
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->keyAt(I)I

    move-result v3

    .line 2697
    .local v3, "procUid":I
    invoke-static {v3}, Landroid/os/UserHandle;->isApp(I)Z

    move-result v5

    if-nez v5, :cond_1

    invoke-static {v3, p2}, Landroid/os/UserHandle;->isSameUser(II)Z

    move-result v5

    if-nez v5, :cond_2

    .line 2695
    :cond_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 2701
    :cond_2
    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessRecord;

    goto :goto_0

    .line 2704
    .end local v0    # "i":I
    .end local v2    # "procCount":I
    .end local v3    # "procUid":I
    .end local v4    # "procs":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    :cond_3
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v5, p1, p2}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 2713
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v1, :cond_5

    if-nez p3, :cond_5

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    if-lez v5, :cond_5

    iget v5, v1, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v6, 0xd

    if-lt v5, v6, :cond_5

    .line 2717
    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessList;->getCachedRestoreThresholdKb()J

    move-result-wide v8

    cmp-long v5, v6, v8

    if-ltz v5, :cond_5

    .line 2718
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    if-eqz v5, :cond_4

    .line 2719
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    iget-object v6, v1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    iget-wide v8, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    invoke-virtual {v5, v6, v8, v9}, Lcom/android/internal/app/ProcessStats$ProcessState;->reportCachedKill(Landroid/util/ArrayMap;J)V

    .line 2721
    :cond_4
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    invoke-static {v6, v7}, Ljava/lang/Long;->toString(J)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, "k from cached"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    const/4 v6, 0x1

    invoke-virtual {v1, v5, v6}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    :cond_5
    move-object v5, v1

    .line 2724
    goto :goto_0
.end method

.method public getProcessesInErrorState()Ljava/util/List;
    .locals 10
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$ProcessErrorStateInfo;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v0, 0x1

    .line 12172
    const-string v7, "getProcessesInErrorState"

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12174
    const/4 v2, 0x0

    .line 12176
    .local v2, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    const-string v7, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    invoke-static {v7, v8}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v7

    if-nez v7, :cond_0

    .line 12178
    .local v0, "allUsers":Z
    :goto_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    .line 12180
    .local v6, "userId":I
    monitor-enter p0

    .line 12183
    :try_start_0
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7}, Ljava/util/ArrayList;->size()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v7

    add-int/lit8 v4, v7, -0x1

    .local v4, "i":I
    move-object v3, v2

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .local v3, "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_1
    if-ltz v4, :cond_7

    .line 12184
    :try_start_1
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v7, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 12185
    .local v1, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v0, :cond_1

    iget v7, v1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-eq v7, v6, :cond_1

    move-object v2, v3

    .line 12183
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_2
    add-int/lit8 v4, v4, -0x1

    move-object v3, v2

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_1

    .line 12176
    .end local v0    # "allUsers":Z
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .end local v4    # "i":I
    .end local v6    # "userId":I
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .line 12188
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v0    # "allUsers":Z
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v4    # "i":I
    .restart local v6    # "userId":I
    :cond_1
    iget-object v7, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v7, :cond_6

    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v7, :cond_2

    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v7, :cond_6

    .line 12191
    :cond_2
    const/4 v5, 0x0

    .line 12192
    .local v5, "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-eqz v7, :cond_4

    .line 12193
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 12198
    :cond_3
    :goto_3
    if-eqz v5, :cond_5

    .line 12199
    if-nez v3, :cond_8

    .line 12200
    new-instance v2, Ljava/util/ArrayList;

    const/4 v7, 0x1

    invoke-direct {v2, v7}, Ljava/util/ArrayList;-><init>(I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 12202
    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :goto_4
    :try_start_2
    invoke-interface {v2, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 12210
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "i":I
    .end local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :catchall_0
    move-exception v7

    :goto_5
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v7

    .line 12194
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v4    # "i":I
    .restart local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_4
    :try_start_3
    iget-boolean v7, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-eqz v7, :cond_3

    .line 12195
    iget-object v5, v1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    goto :goto_3

    .line 12204
    :cond_5
    const-string v7, "ActivityManager"

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "Missing app error report, app = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-object v9, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " crashing = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " notResponding = "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    iget-boolean v9, v1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-static {v7, v8}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .end local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_6
    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_2

    .line 12210
    .end local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    :cond_7
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 12212
    return-object v3

    .line 12210
    :catchall_1
    move-exception v7

    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_5

    .end local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v1    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v5    # "report":Landroid/app/ActivityManager$ProcessErrorStateInfo;
    :cond_8
    move-object v2, v3

    .end local v3    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    .restart local v2    # "errList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$ProcessErrorStateInfo;>;"
    goto :goto_4
.end method

.method public getProviderMimeType(Landroid/net/Uri;I)Ljava/lang/String;
    .locals 12
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "userId"    # I

    .prologue
    const/4 v8, 0x0

    .line 9820
    const-string v9, "getProviderMimeType"

    invoke-virtual {p0, v9}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9821
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v5

    .line 9822
    .local v5, "name":Ljava/lang/String;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 9823
    .local v1, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .line 9824
    .local v0, "callingPid":I
    const-wide/16 v6, 0x0

    .line 9825
    .local v6, "ident":J
    const/4 v2, 0x0

    .line 9826
    .local v2, "clearedIdentity":Z
    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result p2

    .line 9827
    invoke-direct {p0, v0, v1, p2}, Lcom/android/server/am/ActivityManagerService;->canClearIdentity(III)Z

    move-result v9

    if-eqz v9, :cond_0

    .line 9828
    const/4 v2, 0x1

    .line 9829
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9831
    :cond_0
    const/4 v4, 0x0

    .line 9833
    .local v4, "holder":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v9, 0x0

    :try_start_0
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v4

    .line 9834
    if-eqz v4, :cond_3

    .line 9835
    iget-object v9, v4, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    invoke-interface {v9, p1}, Landroid/content/IContentProvider;->getType(Landroid/net/Uri;)Ljava/lang/String;
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_3

    move-result-object v8

    .line 9842
    if-nez v2, :cond_1

    .line 9843
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9846
    :cond_1
    if-eqz v4, :cond_2

    .line 9847
    const/4 v9, 0x0

    :try_start_1
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9850
    :cond_2
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9854
    :goto_0
    return-object v8

    .line 9850
    :catchall_0
    move-exception v8

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8

    .line 9842
    :cond_3
    if-nez v2, :cond_4

    .line 9843
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9846
    :cond_4
    if-eqz v4, :cond_5

    .line 9847
    const/4 v9, 0x0

    :try_start_2
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9850
    :cond_5
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    :catchall_1
    move-exception v8

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8

    .line 9837
    :catch_0
    move-exception v3

    .line 9838
    .local v3, "e":Landroid/os/RemoteException;
    :try_start_3
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Content provider dead retrieving "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10, v3}, Landroid/util/Log;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_3

    .line 9842
    if-nez v2, :cond_6

    .line 9843
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9846
    :cond_6
    if-eqz v4, :cond_7

    .line 9847
    const/4 v9, 0x0

    :try_start_4
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    .line 9850
    :cond_7
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    :catchall_2
    move-exception v8

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8

    .line 9842
    .end local v3    # "e":Landroid/os/RemoteException;
    :catchall_3
    move-exception v8

    if-nez v2, :cond_8

    .line 9843
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 9846
    :cond_8
    if-eqz v4, :cond_9

    .line 9847
    const/4 v9, 0x0

    :try_start_5
    invoke-direct {p0, v5, v9, p2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_4

    .line 9850
    :cond_9
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8

    :catchall_4
    move-exception v8

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v8
.end method

.method public getRecentTasks(III)Ljava/util/List;
    .locals 20
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .param p3, "userId"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(III)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RecentTaskInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8137
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    .line 8138
    .local v4, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    const/4 v6, 0x0

    const/4 v7, 0x2

    const-string v8, "getRecentTasks"

    const/4 v9, 0x0

    move-object/from16 v2, p0

    move/from16 v5, p3

    invoke-virtual/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    .line 8141
    and-int/lit8 v2, p2, 0x4

    if-eqz v2, :cond_1

    const/4 v14, 0x1

    .line 8142
    .local v14, "includeProfiles":Z
    :goto_0
    and-int/lit8 v2, p2, 0x1

    if-eqz v2, :cond_2

    const/16 v19, 0x1

    .line 8143
    .local v19, "withExcluded":Z
    :goto_1
    monitor-enter p0

    .line 8144
    :try_start_0
    const-string v2, "getRecentTasks"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    move-object/from16 v0, p0

    invoke-direct {v0, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v11

    .line 8146
    .local v11, "allowed":Z
    const-string v2, "android.permission.GET_DETAILED_TASKS"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-nez v2, :cond_3

    const/4 v12, 0x1

    .line 8150
    .local v12, "detailed":Z
    :goto_2
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v10

    .line 8151
    .local v10, "N":I
    new-instance v16, Ljava/util/ArrayList;

    move/from16 v0, p1

    if-ge v0, v10, :cond_4

    move/from16 v2, p1

    :goto_3
    move-object/from16 v0, v16

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(I)V

    .line 8156
    .local v16, "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    if-eqz v14, :cond_5

    .line 8157
    move-object/from16 v0, p0

    move/from16 v1, p3

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->getProfileIdsLocked(I)Ljava/util/Set;

    move-result-object v15

    .line 8161
    .local v15, "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    :goto_4
    invoke-static/range {p3 .. p3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v15, v2}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 8163
    const/4 v13, 0x0

    .local v13, "i":I
    :goto_5
    if-ge v13, v10, :cond_d

    if-lez p1, :cond_d

    .line 8164
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v2, v13}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/am/TaskRecord;

    .line 8166
    .local v18, "tr":Lcom/android/server/am/TaskRecord;
    move-object/from16 v0, v18

    iget v2, v0, Lcom/android/server/am/TaskRecord;->userId:I

    invoke-static {v2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    invoke-interface {v15, v2}, Ljava/util/Set;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_6

    .line 8163
    :cond_0
    :goto_6
    add-int/lit8 v13, v13, 0x1

    goto :goto_5

    .line 8141
    .end local v10    # "N":I
    .end local v11    # "allowed":Z
    .end local v12    # "detailed":Z
    .end local v13    # "i":I
    .end local v14    # "includeProfiles":Z
    .end local v15    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    .end local v18    # "tr":Lcom/android/server/am/TaskRecord;
    .end local v19    # "withExcluded":Z
    :cond_1
    const/4 v14, 0x0

    goto :goto_0

    .line 8142
    .restart local v14    # "includeProfiles":Z
    :cond_2
    const/16 v19, 0x0

    goto :goto_1

    .line 8146
    .restart local v11    # "allowed":Z
    .restart local v19    # "withExcluded":Z
    :cond_3
    const/4 v12, 0x0

    goto :goto_2

    .restart local v10    # "N":I
    .restart local v12    # "detailed":Z
    :cond_4
    move v2, v10

    .line 8151
    goto :goto_3

    .line 8159
    .restart local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    :cond_5
    new-instance v15, Ljava/util/HashSet;

    invoke-direct {v15}, Ljava/util/HashSet;-><init>()V

    .restart local v15    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    goto :goto_4

    .line 8177
    .restart local v13    # "i":I
    .restart local v18    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_6
    if-eqz v13, :cond_7

    if-nez v19, :cond_7

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    if-eqz v2, :cond_7

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v2}, Landroid/content/Intent;->getFlags()I

    move-result v2

    const/high16 v3, 0x800000

    and-int/2addr v2, v3

    if-nez v2, :cond_0

    .line 8182
    :cond_7
    if-nez v11, :cond_8

    .line 8185
    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/TaskRecord;->isHomeTask()Z

    move-result v2

    if-nez v2, :cond_8

    move-object/from16 v0, v18

    iget v2, v0, Lcom/android/server/am/TaskRecord;->effectiveUid:I

    if-ne v2, v4, :cond_0

    .line 8190
    :cond_8
    and-int/lit8 v2, p2, 0x8

    if-eqz v2, :cond_9

    .line 8191
    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v2, :cond_9

    move-object/from16 v0, v18

    iget-object v2, v0, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v2

    if-nez v2, :cond_0

    .line 8196
    :cond_9
    move-object/from16 v0, v18

    iget-boolean v2, v0, Lcom/android/server/am/TaskRecord;->autoRemoveRecents:Z

    if-eqz v2, :cond_a

    invoke-virtual/range {v18 .. v18}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    if-eqz v2, :cond_0

    .line 8202
    :cond_a
    and-int/lit8 v2, p2, 0x2

    if-eqz v2, :cond_b

    move-object/from16 v0, v18

    iget-boolean v2, v0, Lcom/android/server/am/TaskRecord;->isAvailable:Z

    if-eqz v2, :cond_0

    .line 8208
    :cond_b
    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-direct {v0, v1}, Lcom/android/server/am/ActivityManagerService;->createRecentTaskInfoFromTaskRecord(Lcom/android/server/am/TaskRecord;)Landroid/app/ActivityManager$RecentTaskInfo;

    move-result-object v17

    .line 8209
    .local v17, "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    if-nez v12, :cond_c

    .line 8210
    move-object/from16 v0, v17

    iget-object v3, v0, Landroid/app/ActivityManager$RecentTaskInfo;->baseIntent:Landroid/content/Intent;

    const/4 v2, 0x0

    check-cast v2, Landroid/os/Bundle;

    invoke-virtual {v3, v2}, Landroid/content/Intent;->replaceExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    .line 8213
    :cond_c
    invoke-virtual/range {v16 .. v17}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 8214
    add-int/lit8 p1, p1, -0x1

    goto :goto_6

    .line 8217
    .end local v17    # "rti":Landroid/app/ActivityManager$RecentTaskInfo;
    .end local v18    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_d
    monitor-exit p0

    return-object v16

    .line 8218
    .end local v10    # "N":I
    .end local v11    # "allowed":Z
    .end local v12    # "detailed":Z
    .end local v13    # "i":I
    .end local v15    # "includedUsers":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/Integer;>;"
    .end local v16    # "res":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RecentTaskInfo;>;"
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method final getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;
    .locals 2
    .param p1, "thread"    # Landroid/app/IApplicationThread;

    .prologue
    const/4 v1, 0x0

    .line 4610
    if-nez p1, :cond_1

    .line 4615
    :cond_0
    :goto_0
    return-object v1

    .line 4614
    :cond_1
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getLRURecordIndexForAppLocked(Landroid/app/IApplicationThread;)I

    move-result v0

    .line 4615
    .local v0, "appIndex":I
    if-ltz v0, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    goto :goto_0
.end method

.method public getRequestedOrientation(Landroid/os/IBinder;)I
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4255
    monitor-enter p0

    .line 4256
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 4257
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 4258
    const/4 v1, -0x1

    monitor-exit p0

    .line 4260
    :goto_0
    return v1

    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v1, v2}, Lcom/android/server/wm/WindowManagerService;->getAppOrientation(Landroid/view/IApplicationToken;)I

    move-result v1

    monitor-exit p0

    goto :goto_0

    .line 4261
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getRunningAppProcesses()Ljava/util/List;
    .locals 13
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningAppProcessInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 12248
    const-string v10, "getRunningAppProcesses"

    invoke-virtual {p0, v10}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12250
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    .line 12253
    .local v3, "callingUid":I
    const/4 v7, 0x0

    .line 12254
    .local v7, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    const-string v10, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v10, v3}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v10

    if-nez v10, :cond_1

    const/4 v1, 0x1

    .line 12256
    .local v1, "allUsers":Z
    :goto_0
    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v9

    .line 12257
    .local v9, "userId":I
    const-string v10, "getRunningAppProcesses"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v11

    invoke-direct {p0, v10, v11, v3}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v0

    .line 12260
    .local v0, "allUids":Z
    monitor-enter p0

    .line 12262
    :try_start_0
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result v10

    add-int/lit8 v5, v10, -0x1

    .local v5, "i":I
    move-object v8, v7

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .local v8, "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_1
    if-ltz v5, :cond_6

    .line 12263
    :try_start_1
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v10, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    .line 12264
    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_0

    iget v10, v2, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v10, v9, :cond_8

    :cond_0
    if-nez v0, :cond_2

    iget v10, v2, Lcom/android/server/am/ProcessRecord;->uid:I

    if-eq v10, v3, :cond_2

    move-object v7, v8

    .line 12262
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_2
    add-int/lit8 v5, v5, -0x1

    move-object v8, v7

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_1

    .line 12254
    .end local v0    # "allUids":Z
    .end local v1    # "allUsers":Z
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v5    # "i":I
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .end local v9    # "userId":I
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_1
    const/4 v1, 0x0

    goto :goto_0

    .line 12268
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v0    # "allUids":Z
    .restart local v1    # "allUsers":Z
    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v5    # "i":I
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v9    # "userId":I
    :cond_2
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v10, :cond_8

    iget-boolean v10, v2, Lcom/android/server/am/ProcessRecord;->crashing:Z

    if-nez v10, :cond_8

    iget-boolean v10, v2, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    if-nez v10, :cond_8

    .line 12270
    new-instance v4, Landroid/app/ActivityManager$RunningAppProcessInfo;

    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v11, v2, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v2}, Lcom/android/server/am/ProcessRecord;->getPackageList()[Ljava/lang/String;

    move-result-object v12

    invoke-direct {v4, v10, v11, v12}, Landroid/app/ActivityManager$RunningAppProcessInfo;-><init>(Ljava/lang/String;I[Ljava/lang/String;)V

    .line 12273
    .local v4, "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    invoke-direct {p0, v2, v4}, Lcom/android/server/am/ActivityManagerService;->fillInProcMemInfo(Lcom/android/server/am/ProcessRecord;Landroid/app/ActivityManager$RunningAppProcessInfo;)V

    .line 12274
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v10, v10, Lcom/android/server/am/ProcessRecord;

    if-eqz v10, :cond_5

    .line 12275
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v10, Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I

    .line 12276
    iget v10, v2, Lcom/android/server/am/ProcessRecord;->adjSourceProcState:I

    invoke-static {v10}, Landroid/app/ActivityManager$RunningAppProcessInfo;->procStateToImportance(I)I

    move-result v10

    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonImportance:I

    .line 12283
    :cond_3
    :goto_3
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    instance-of v10, v10, Landroid/content/ComponentName;

    if-eqz v10, :cond_4

    .line 12284
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjTarget:Ljava/lang/Object;

    check-cast v10, Landroid/content/ComponentName;

    iput-object v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonComponent:Landroid/content/ComponentName;

    .line 12288
    :cond_4
    if-nez v8, :cond_7

    .line 12289
    new-instance v7, Ljava/util/ArrayList;

    invoke-direct {v7}, Ljava/util/ArrayList;-><init>()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 12291
    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :goto_4
    :try_start_2
    invoke-interface {v7, v4}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 12294
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v5    # "i":I
    :catchall_0
    move-exception v10

    :goto_5
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v10

    .line 12279
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .restart local v5    # "i":I
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_5
    :try_start_3
    iget-object v10, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    instance-of v10, v10, Lcom/android/server/am/ActivityRecord;

    if-eqz v10, :cond_3

    .line 12280
    iget-object v6, v2, Lcom/android/server/am/ProcessRecord;->adjSource:Ljava/lang/Object;

    check-cast v6, Lcom/android/server/am/ActivityRecord;

    .line 12281
    .local v6, "r":Lcom/android/server/am/ActivityRecord;
    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v10, :cond_3

    iget-object v10, v6, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v10, v10, Lcom/android/server/am/ProcessRecord;->pid:I

    iput v10, v4, Landroid/app/ActivityManager$RunningAppProcessInfo;->importanceReasonPid:I

    goto :goto_3

    .line 12294
    .end local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v6    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_1
    move-exception v10

    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_5

    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_6
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 12295
    return-object v8

    .restart local v2    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    :cond_7
    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_4

    .end local v4    # "currApp":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    :cond_8
    move-object v7, v8

    .end local v8    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    .restart local v7    # "runList":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    goto :goto_2
.end method

.method public getRunningExternalApplications()Ljava/util/List;
    .locals 13
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List",
            "<",
            "Landroid/content/pm/ApplicationInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 12299
    const-string v11, "getRunningExternalApplications"

    invoke-virtual {p0, v11}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 12300
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses()Ljava/util/List;

    move-result-object v10

    .line 12301
    .local v10, "runningApps":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    new-instance v9, Ljava/util/ArrayList;

    invoke-direct {v9}, Ljava/util/ArrayList;-><init>()V

    .line 12302
    .local v9, "retList":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ApplicationInfo;>;"
    if-eqz v10, :cond_3

    invoke-interface {v10}, Ljava/util/List;->size()I

    move-result v11

    if-lez v11, :cond_3

    .line 12303
    new-instance v2, Ljava/util/HashSet;

    invoke-direct {v2}, Ljava/util/HashSet;-><init>()V

    .line 12304
    .local v2, "extList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    invoke-interface {v10}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v3

    :cond_0
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-eqz v11, :cond_1

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/ActivityManager$RunningAppProcessInfo;

    .line 12305
    .local v0, "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    iget-object v11, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    if-eqz v11, :cond_0

    .line 12306
    iget-object v1, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    .local v1, "arr$":[Ljava/lang/String;
    array-length v6, v1

    .local v6, "len$":I
    const/4 v4, 0x0

    .local v4, "i$":I
    :goto_0
    if-ge v4, v6, :cond_0

    aget-object v7, v1, v4

    .line 12307
    .local v7, "pkg":Ljava/lang/String;
    invoke-interface {v2, v7}, Ljava/util/Set;->add(Ljava/lang/Object;)Z

    .line 12306
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 12311
    .end local v0    # "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v4    # "i$":I
    .end local v6    # "len$":I
    .end local v7    # "pkg":Ljava/lang/String;
    :cond_1
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v8

    .line 12312
    .local v8, "pm":Landroid/content/pm/IPackageManager;
    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v3

    .local v3, "i$":Ljava/util/Iterator;
    :cond_2
    :goto_1
    invoke-interface {v3}, Ljava/util/Iterator;->hasNext()Z

    move-result v11

    if-eqz v11, :cond_3

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/String;

    .line 12314
    .restart local v7    # "pkg":Ljava/lang/String;
    const/4 v11, 0x0

    :try_start_0
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v12

    invoke-interface {v8, v7, v11, v12}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;

    move-result-object v5

    .line 12315
    .local v5, "info":Landroid/content/pm/ApplicationInfo;
    iget v11, v5, Landroid/content/pm/ApplicationInfo;->flags:I

    const/high16 v12, 0x40000

    and-int/2addr v11, v12

    if-eqz v11, :cond_2

    .line 12316
    invoke-interface {v9, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    .line 12318
    .end local v5    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v11

    goto :goto_1

    .line 12322
    .end local v2    # "extList":Ljava/util/Set;, "Ljava/util/Set<Ljava/lang/String;>;"
    .end local v3    # "i$":Ljava/util/Iterator;
    .end local v7    # "pkg":Ljava/lang/String;
    .end local v8    # "pm":Landroid/content/pm/IPackageManager;
    :cond_3
    return-object v9
.end method

.method public getRunningServiceControlPanel(Landroid/content/ComponentName;)Landroid/app/PendingIntent;
    .locals 1
    .param p1, "name"    # Landroid/content/ComponentName;

    .prologue
    .line 15089
    const-string v0, "getRunningServiceControlPanel"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15090
    monitor-enter p0

    .line 15091
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->getRunningServiceControlPanelLocked(Landroid/content/ComponentName;)Landroid/app/PendingIntent;

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 15092
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getRunningUserIds()[I
    .locals 3

    .prologue
    .line 19507
    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 19509
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 19513
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 19514
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 19516
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 19517
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUserArray:[I

    monitor-exit p0

    return-object v1

    .line 19518
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getServices(II)Ljava/util/List;
    .locals 1
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningServiceInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 15081
    const-string v0, "getServices"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15082
    monitor-enter p0

    .line 15083
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActiveServices;->getRunningServiceInfoLocked(II)Ljava/util/List;

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 15084
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getStackInfo(I)Landroid/app/ActivityManager$StackInfo;
    .locals 4
    .param p1, "stackId"    # I

    .prologue
    .line 8730
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v3, "getStackInfo()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8732
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8734
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8735
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStackInfoLocked(I)Landroid/app/ActivityManager$StackInfo;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8738
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-object v2

    .line 8736
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 8738
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public getTagForIntentSender(Landroid/content/IIntentSender;Ljava/lang/String;)Ljava/lang/String;
    .locals 6
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;
    .param p2, "prefix"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x0

    .line 6677
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_1

    .line 6704
    :cond_0
    :goto_0
    return-object v4

    .line 6681
    :cond_1
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v2, v0

    .line 6682
    .local v2, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v1, v5, Lcom/android/server/am/PendingIntentRecord$Key;->requestIntent:Landroid/content/Intent;

    .line 6683
    .local v1, "intent":Landroid/content/Intent;
    if-eqz v1, :cond_0

    .line 6684
    iget-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    if-eqz v5, :cond_3

    iget-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-ne v5, p2, :cond_3

    iget-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    if-eqz v5, :cond_2

    iget-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    invoke-virtual {v5, p2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_3

    .line 6686
    :cond_2
    iget-object v4, v2, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    goto :goto_0

    .line 6688
    :cond_3
    iput-object p2, v2, Lcom/android/server/am/PendingIntentRecord;->lastTagPrefix:Ljava/lang/String;

    .line 6689
    new-instance v3, Ljava/lang/StringBuilder;

    const/16 v5, 0x80

    invoke-direct {v3, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 6690
    .local v3, "sb":Ljava/lang/StringBuilder;
    if-eqz p2, :cond_4

    .line 6691
    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6693
    :cond_4
    invoke-virtual {v1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_5

    .line 6694
    invoke-virtual {v1}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 6700
    :goto_1
    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    iput-object v5, v2, Lcom/android/server/am/PendingIntentRecord;->lastTag:Ljava/lang/String;

    move-object v4, v5

    goto :goto_0

    .line 6695
    :cond_5
    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    if-eqz v5, :cond_6

    .line 6696
    invoke-virtual {v1}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v5

    invoke-virtual {v5, v3}, Landroid/content/ComponentName;->appendShortString(Ljava/lang/StringBuilder;)V

    goto :goto_1

    .line 6702
    .end local v1    # "intent":Landroid/content/Intent;
    .end local v2    # "res":Lcom/android/server/am/PendingIntentRecord;
    .end local v3    # "sb":Ljava/lang/StringBuilder;
    :catch_0
    move-exception v5

    goto :goto_0

    .line 6698
    .restart local v1    # "intent":Landroid/content/Intent;
    .restart local v2    # "res":Lcom/android/server/am/PendingIntentRecord;
    .restart local v3    # "sb":Ljava/lang/StringBuilder;
    :cond_6
    const-string v5, "?"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1
.end method

.method public getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap;
    .locals 3
    .param p1, "filename"    # Ljava/lang/String;

    .prologue
    .line 8349
    invoke-static {p1}, Landroid/os/FileUtils;->isValidExtFilename(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "_activity_icon_"

    invoke-virtual {p1, v0}, Ljava/lang/String;->contains(Ljava/lang/CharSequence;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 8351
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Bad filename: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 8353
    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v0, p1}, Lcom/android/server/am/TaskPersister;->getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap;

    move-result-object v0

    return-object v0
.end method

.method public getTaskForActivity(Landroid/os/IBinder;Z)I
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "onlyRoot"    # Z

    .prologue
    .line 8759
    monitor-enter p0

    .line 8760
    :try_start_0
    invoke-static {p1, p2}, Lcom/android/server/am/ActivityRecord;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I

    move-result v0

    monitor-exit p0

    return v0

    .line 8761
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public getTaskThumbnail(I)Landroid/app/ActivityManager$TaskThumbnail;
    .locals 3
    .param p1, "id"    # I

    .prologue
    .line 8234
    monitor-enter p0

    .line 8235
    :try_start_0
    const-string v1, "android.permission.READ_FRAME_BUFFER"

    const-string v2, "getTaskThumbnail()"

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v0

    .local v0, "tr":Lcom/android/server/am/TaskRecord;
    invoke-static/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->isHomeTask(Lcom/android/server/am/ActivityManagerService;I)Z

    move-result v1

    if-eqz v1, :cond_flyme_0

    invoke-static/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->getHomeThumbnail(Lcom/android/server/am/ActivityManagerService;)Landroid/app/ActivityManager$TaskThumbnail;

    move-result-object v1

    monitor-exit p0

    return-object v1

    :cond_flyme_0

    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/am/TaskRecord;->getTaskThumbnailLocked()Landroid/app/ActivityManager$TaskThumbnail;

    move-result-object v1

    monitor-exit p0

    :goto_0
    return-object v1

    :cond_0
    monitor-exit p0

    const/4 v1, 0x0

    goto :goto_0

    .end local v0    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public getTasks(II)Ljava/util/List;
    .locals 5
    .param p1, "maxNum"    # I
    .param p2, "flags"    # I
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/List",
            "<",
            "Landroid/app/ActivityManager$RunningTaskInfo;",
            ">;"
        }
    .end annotation

    .prologue
    .line 8067
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 8068
    .local v1, "callingUid":I
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    .line 8070
    .local v2, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/app/ActivityManager$RunningTaskInfo;>;"
    monitor-enter p0

    .line 8074
    :try_start_0
    const-string v3, "getTasks"

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-direct {p0, v3, v4, v1}, Lcom/android/server/am/ActivityManagerService;->isGetTasksAllowed(Ljava/lang/String;II)Z

    move-result v0

    .line 8078
    .local v0, "allowed":Z
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, p1, v2, v1, v0}, Lcom/android/server/am/ActivityStackSupervisor;->getTasksLocked(ILjava/util/List;IZ)V

    .line 8079
    monitor-exit p0

    .line 8081
    return-object v2

    .line 8079
    .end local v0    # "allowed":Z
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3
.end method

.method public getUidForIntentSender(Landroid/content/IIntentSender;)I
    .locals 3
    .param p1, "sender"    # Landroid/content/IIntentSender;

    .prologue
    .line 6614
    instance-of v2, p1, Lcom/android/server/am/PendingIntentRecord;

    if-eqz v2, :cond_0

    .line 6616
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 6617
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget v2, v1, Lcom/android/server/am/PendingIntentRecord;->uid:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 6621
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :goto_0
    return v2

    .line 6618
    :catch_0
    move-exception v2

    .line 6621
    :cond_0
    const/4 v2, -0x1

    goto :goto_0
.end method

.method getUserManagerLocked()Lcom/android/server/pm/UserManagerService;
    .locals 2

    .prologue
    .line 19577
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    if-nez v1, :cond_0

    .line 19578
    const-string v1, "user"

    invoke-static {v1}, Landroid/os/ServiceManager;->getService(Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    .line 19579
    .local v0, "b":Landroid/os/IBinder;
    invoke-static {v0}, Landroid/os/IUserManager$Stub;->asInterface(Landroid/os/IBinder;)Landroid/os/IUserManager;

    move-result-object v1

    check-cast v1, Lcom/android/server/pm/UserManagerService;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    .line 19581
    .end local v0    # "b":Landroid/os/IBinder;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    return-object v1
.end method

.method getUsersLocked()[I
    .locals 3

    .prologue
    const/4 v2, 0x0

    .line 19572
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v0

    .line 19573
    .local v0, "ums":Lcom/android/server/pm/UserManagerService;
    if-eqz v0, :cond_0

    invoke-virtual {v0}, Lcom/android/server/pm/UserManagerService;->getUserIds()[I

    move-result-object v1

    :goto_0
    return-object v1

    :cond_0
    const/4 v1, 0x1

    new-array v1, v1, [I

    aput v2, v1, v2

    goto :goto_0
.end method

.method public grantUriPermission(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/net/Uri;II)V
    .locals 8
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "uri"    # Landroid/net/Uri;
    .param p4, "modeFlags"    # I
    .param p5, "userId"    # I

    .prologue
    .line 7424
    const-string v0, "grantUriPermission"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7425
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p5, p3, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .line 7426
    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    monitor-enter p0

    .line 7427
    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 7428
    .local v7, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v7, :cond_0

    .line 7429
    new-instance v0, Ljava/lang/SecurityException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unable to find app for caller "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " when granting permission to uri "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7447
    .end local v7    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 7433
    .restart local v7    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez p2, :cond_1

    .line 7434
    :try_start_1
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "null target"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7436
    :cond_1
    if-nez v3, :cond_2

    .line 7437
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "null uri"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7440
    :cond_2
    const/16 v0, 0xc3

    invoke-static {p4, v0}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    .line 7445
    iget v1, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    const/4 v5, 0x0

    iget v0, v7, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v0}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    move-object v0, p0

    move-object v2, p2

    move v4, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V

    .line 7447
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7448
    return-void
.end method

.method grantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;Lcom/android/server/am/UriPermissionOwner;I)V
    .locals 8
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "owner"    # Lcom/android/server/am/UriPermissionOwner;
    .param p5, "targetUserId"    # I

    .prologue
    .line 7408
    if-eqz p3, :cond_0

    invoke-virtual {p3}, Landroid/content/Intent;->getFlags()I

    move-result v4

    :goto_0
    const/4 v5, 0x0

    move-object v0, p0

    move v1, p1

    move-object v2, p2

    move-object v3, p3

    move v6, p5

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionFromIntentLocked(ILjava/lang/String;Landroid/content/Intent;ILcom/android/server/am/ActivityManagerService$NeededUriGrants;I)Lcom/android/server/am/ActivityManagerService$NeededUriGrants;

    move-result-object v7

    .line 7410
    .local v7, "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    if-nez v7, :cond_1

    .line 7415
    :goto_1
    return-void

    .line 7408
    .end local v7    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_0
    const/4 v4, 0x0

    goto :goto_0

    .line 7414
    .restart local v7    # "needed":Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    :cond_1
    invoke-virtual {p0, v7, p4}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedFromIntentLocked(Lcom/android/server/am/ActivityManagerService$NeededUriGrants;Lcom/android/server/am/UriPermissionOwner;)V

    goto :goto_1
.end method

.method public grantUriPermissionFromOwner(Landroid/os/IBinder;ILjava/lang/String;Landroid/net/Uri;III)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "fromUid"    # I
    .param p3, "targetPkg"    # Ljava/lang/String;
    .param p4, "uri"    # Landroid/net/Uri;
    .param p5, "modeFlags"    # I
    .param p6, "sourceUserId"    # I
    .param p7, "targetUserId"    # I

    .prologue
    const/4 v4, 0x0

    .line 7654
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v5, 0x2

    const-string v6, "grantUriPermissionFromOwner"

    const/4 v7, 0x0

    move-object v0, p0

    move v3, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    .line 7656
    monitor-enter p0

    .line 7657
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;

    move-result-object v5

    .line 7658
    .local v5, "owner":Lcom/android/server/am/UriPermissionOwner;
    if-nez v5, :cond_0

    .line 7659
    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Unknown owner: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7677
    .end local v5    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 7661
    .restart local v5    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :cond_0
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    if-eq p2, v0, :cond_1

    .line 7662
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    invoke-static {}, Landroid/os/Process;->myUid()I

    move-result v1

    if-eq v0, v1, :cond_1

    .line 7665
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "nice try"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7668
    :cond_1
    if-nez p3, :cond_2

    .line 7669
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "null target"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7671
    :cond_2
    if-nez p4, :cond_3

    .line 7672
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "null uri"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 7675
    :cond_3
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v0, 0x0

    invoke-direct {v3, p6, p4, v0}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    move-object v0, p0

    move v1, p2

    move-object v2, p3

    move v4, p5

    move v6, p7

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V

    .line 7677
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7678
    return-void
.end method

.method grantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;I)V
    .locals 13
    .param p1, "callingUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "owner"    # Lcom/android/server/am/UriPermissionOwner;
    .param p6, "targetUserId"    # I

    .prologue
    .line 7273
    if-nez p2, :cond_0

    .line 7274
    new-instance v1, Ljava/lang/NullPointerException;

    const-string v2, "targetPkg"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 7277
    :cond_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v12

    .line 7279
    .local v12, "pm":Landroid/content/pm/IPackageManager;
    :try_start_0
    move/from16 v0, p6

    invoke-interface {v12, p2, v0}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    move-result v6

    .local v6, "targetUid":I
    move-object v1, p0

    move v2, p1

    move-object v3, p2

    move-object/from16 v4, p3

    move/from16 v5, p4

    .line 7284
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkGrantUriPermissionLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;II)I

    move-result v6

    .line 7286
    if-gez v6, :cond_1

    .line 7292
    .end local v6    # "targetUid":I
    :goto_0
    return-void

    .line 7280
    :catch_0
    move-exception v11

    .line 7281
    .local v11, "ex":Landroid/os/RemoteException;
    goto :goto_0

    .end local v11    # "ex":Landroid/os/RemoteException;
    .restart local v6    # "targetUid":I
    :cond_1
    move-object v5, p0

    move-object v7, p2

    move-object/from16 v8, p3

    move/from16 v9, p4

    move-object/from16 v10, p5

    .line 7290
    invoke-virtual/range {v5 .. v10}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V

    goto :goto_0
.end method

.method grantUriPermissionUncheckedFromIntentLocked(Lcom/android/server/am/ActivityManagerService$NeededUriGrants;Lcom/android/server/am/UriPermissionOwner;)V
    .locals 7
    .param p1, "needed"    # Lcom/android/server/am/ActivityManagerService$NeededUriGrants;
    .param p2, "owner"    # Lcom/android/server/am/UriPermissionOwner;

    .prologue
    .line 7397
    if-eqz p1, :cond_0

    .line 7398
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_0
    invoke-virtual {p1}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->size()I

    move-result v0

    if-ge v6, v0, :cond_0

    .line 7399
    invoke-virtual {p1, v6}, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    .line 7400
    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    iget v1, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetUid:I

    iget-object v2, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->targetPkg:Ljava/lang/String;

    iget v4, p1, Lcom/android/server/am/ActivityManagerService$NeededUriGrants;->flags:I

    move-object v0, p0

    move-object v5, p2

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V

    .line 7398
    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 7404
    .end local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v6    # "i":I
    :cond_0
    return-void
.end method

.method grantUriPermissionUncheckedLocked(ILjava/lang/String;Lcom/android/server/am/ActivityManagerService$GrantUri;ILcom/android/server/am/UriPermissionOwner;)V
    .locals 6
    .param p1, "targetUid"    # I
    .param p2, "targetPkg"    # Ljava/lang/String;
    .param p3, "grantUri"    # Lcom/android/server/am/ActivityManagerService$GrantUri;
    .param p4, "modeFlags"    # I
    .param p5, "owner"    # Lcom/android/server/am/UriPermissionOwner;

    .prologue
    .line 7245
    invoke-static {p4}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v3

    if-nez v3, :cond_0

    .line 7269
    :goto_0
    return-void

    .line 7256
    :cond_0
    iget-object v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->uri:Landroid/net/Uri;

    invoke-virtual {v3}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .line 7257
    .local v0, "authority":Ljava/lang/String;
    iget v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->sourceUserId:I

    invoke-direct {p0, v0, v3}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v2

    .line 7258
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v2, :cond_1

    .line 7259
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No content provider found for grant: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {p3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 7263
    :cond_1
    and-int/lit16 v3, p4, 0x80

    if-eqz v3, :cond_2

    .line 7264
    const/4 v3, 0x1

    iput-boolean v3, p3, Lcom/android/server/am/ActivityManagerService$GrantUri;->prefix:Z

    .line 7266
    :cond_2
    iget-object v3, v2, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    invoke-direct {p0, v3, p2, p1, p3}, Lcom/android/server/am/ActivityManagerService;->findOrCreateUriPermissionLocked(Ljava/lang/String;Ljava/lang/String;ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .line 7268
    .local v1, "perm":Lcom/android/server/am/UriPermission;
    invoke-virtual {v1, p4, p5}, Lcom/android/server/am/UriPermission;->grantModes(ILcom/android/server/am/UriPermissionOwner;)V

    goto :goto_0
.end method

.method public handleApplicationCrash(Landroid/os/IBinder;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 3
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    .line 11575
    const-string v2, "Crash"

    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v1

    .line 11576
    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    if-nez p1, :cond_0

    const-string v0, "system_server"

    .line 11579
    .local v0, "processName":Ljava/lang/String;
    :goto_0
    const-string v2, "crash"

    invoke-virtual {p0, v2, v1, v0, p2}, Lcom/android/server/am/ActivityManagerService;->handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 11580
    return-void

    .line 11576
    .end local v0    # "processName":Ljava/lang/String;
    :cond_0
    if-nez v1, :cond_1

    const-string v0, "unknown"

    goto :goto_0

    :cond_1
    iget-object v0, v1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_0
.end method

.method handleApplicationCrashInner(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V
    .locals 10
    .param p1, "eventType"    # Ljava/lang/String;
    .param p2, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v4, 0x0

    .line 11587
    const/16 v1, 0x7557

    const/16 v0, 0x8

    new-array v2, v0, [Ljava/lang/Object;

    const/4 v0, 0x0

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v0

    const/4 v0, 0x1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-static {v3}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v0

    const/4 v0, 0x2

    aput-object p3, v2, v0

    const/4 v3, 0x3

    if-nez p2, :cond_0

    const/4 v0, -0x1

    :goto_0
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    aput-object v0, v2, v3

    const/4 v0, 0x4

    iget-object v3, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionClassName:Ljava/lang/String;

    aput-object v3, v2, v0

    const/4 v0, 0x5

    iget-object v3, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    aput-object v3, v2, v0

    const/4 v0, 0x6

    iget-object v3, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->throwFileName:Ljava/lang/String;

    aput-object v3, v2, v0

    const/4 v0, 0x7

    iget v3, p4, Landroid/app/ApplicationErrorReport$CrashInfo;->throwLineNumber:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v0

    invoke-static {v1, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object v5, v4

    move-object v6, v4

    move-object v7, v4

    move-object v8, v4

    move-object v9, p4

    .line 11595
    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 11597
    invoke-direct {p0, p2, p4}, Lcom/android/server/am/ActivityManagerService;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 11598
    return-void

    .line 11587
    :cond_0
    iget-object v0, p2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    goto :goto_0
.end method

.method public handleApplicationStrictModeViolation(Landroid/os/IBinder;ILandroid/os/StrictMode$ViolationInfo;)V
    .locals 12
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "violationMask"    # I
    .param p3, "info"    # Landroid/os/StrictMode$ViolationInfo;

    .prologue
    .line 11604
    const-string v9, "StrictMode"

    invoke-direct {p0, p1, v9}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .line 11605
    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_1

    .line 11653
    :cond_0
    :goto_0
    return-void

    .line 11609
    :cond_1
    and-int/lit16 v9, p2, 0x80

    if-eqz v9, :cond_2

    .line 11610
    invoke-virtual {p3}, Landroid/os/StrictMode$ViolationInfo;->hashCode()I

    move-result v9

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v8

    .line 11611
    .local v8, "stackFingerprint":Ljava/lang/Integer;
    const/4 v1, 0x1

    .line 11612
    .local v1, "logIt":Z
    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    monitor-enter v10

    .line 11613
    :try_start_0
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9, v8}, Ljava/util/HashSet;->contains(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_3

    .line 11614
    const/4 v1, 0x0

    .line 11627
    :goto_1
    monitor-exit v10
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 11628
    if-eqz v1, :cond_2

    .line 11629
    invoke-direct {p0, v3, p3}, Lcom/android/server/am/ActivityManagerService;->logStrictModeViolationToDropBox(Lcom/android/server/am/ProcessRecord;Landroid/os/StrictMode$ViolationInfo;)V

    .line 11633
    .end local v1    # "logIt":Z
    .end local v8    # "stackFingerprint":Ljava/lang/Integer;
    :cond_2
    and-int/lit8 v9, p2, 0x20

    if-eqz v9, :cond_0

    .line 11634
    new-instance v7, Lcom/android/server/am/AppErrorResult;

    invoke-direct {v7}, Lcom/android/server/am/AppErrorResult;-><init>()V

    .line 11635
    .local v7, "result":Lcom/android/server/am/AppErrorResult;
    monitor-enter p0

    .line 11636
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 11638
    .local v4, "origId":J
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v2

    .line 11639
    .local v2, "msg":Landroid/os/Message;
    const/16 v9, 0x1a

    iput v9, v2, Landroid/os/Message;->what:I

    .line 11640
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 11641
    .local v0, "data":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    const-string v9, "result"

    invoke-virtual {v0, v9, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11642
    const-string v9, "app"

    invoke-virtual {v0, v9, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11643
    const-string v9, "violationMask"

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v10

    invoke-virtual {v0, v9, v10}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11644
    const-string v9, "info"

    invoke-virtual {v0, v9, p3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 11645
    iput-object v0, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 11646
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v9, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 11648
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 11649
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 11650
    invoke-virtual {v7}, Lcom/android/server/am/AppErrorResult;->get()I

    move-result v6

    .line 11651
    .local v6, "res":I
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "handleApplicationStrictModeViolation; res="

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 11622
    .end local v0    # "data":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;"
    .end local v2    # "msg":Landroid/os/Message;
    .end local v4    # "origId":J
    .end local v6    # "res":I
    .end local v7    # "result":Lcom/android/server/am/AppErrorResult;
    .restart local v1    # "logIt":Z
    .restart local v8    # "stackFingerprint":Ljava/lang/Integer;
    :cond_3
    :try_start_2
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9}, Ljava/util/HashSet;->size()I

    move-result v9

    const/16 v11, 0x1388

    if-lt v9, v11, :cond_4

    .line 11623
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9}, Ljava/util/HashSet;->clear()V

    .line 11625
    :cond_4
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mAlreadyLoggedViolatedStacks:Ljava/util/HashSet;

    invoke-virtual {v9, v8}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 11627
    :catchall_0
    move-exception v9

    monitor-exit v10
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v9

    .line 11649
    .end local v1    # "logIt":Z
    .end local v8    # "stackFingerprint":Ljava/lang/Integer;
    .restart local v7    # "result":Lcom/android/server/am/AppErrorResult;
    :catchall_1
    move-exception v9

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v9
.end method

.method public handleApplicationWtf(Landroid/os/IBinder;Ljava/lang/String;ZLandroid/app/ApplicationErrorReport$CrashInfo;)Z
    .locals 10
    .param p1, "app"    # Landroid/os/IBinder;
    .param p2, "tag"    # Ljava/lang/String;
    .param p3, "system"    # Z
    .param p4, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v8, 0x0

    .line 11783
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    .line 11784
    .local v2, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v3

    .line 11786
    .local v3, "callingPid":I
    if-eqz p3, :cond_0

    .line 11790
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v0, Lcom/android/server/am/ActivityManagerService$18;

    move-object v1, p0

    move-object v4, p1

    move-object v5, p2

    move-object v6, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$18;-><init>(Lcom/android/server/am/ActivityManagerService;IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    move v0, v8

    .line 11807
    :goto_0
    return v0

    :cond_0
    move-object v1, p0

    move-object v4, p1

    move-object v5, p2

    move-object v6, p4

    .line 11798
    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;

    move-result-object v7

    .line 11801
    .local v7, "r":Lcom/android/server/am/ProcessRecord;
    if-eqz v7, :cond_1

    iget v0, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {}, Landroid/os/Process;->myPid()I

    move-result v1

    if-eq v0, v1, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v0

    const-string v1, "wtf_is_fatal"

    invoke-static {v0, v1, v8}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v0

    if-eqz v0, :cond_1

    .line 11804
    invoke-direct {p0, v7, p4}, Lcom/android/server/am/ActivityManagerService;->crashApplication(Lcom/android/server/am/ProcessRecord;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 11805
    const/4 v0, 0x1

    goto :goto_0

    :cond_1
    move v0, v8

    .line 11807
    goto :goto_0
.end method

.method handleApplicationWtfInner(IILandroid/os/IBinder;Ljava/lang/String;Landroid/app/ApplicationErrorReport$CrashInfo;)Lcom/android/server/am/ProcessRecord;
    .locals 10
    .param p1, "callingUid"    # I
    .param p2, "callingPid"    # I
    .param p3, "app"    # Landroid/os/IBinder;
    .param p4, "tag"    # Ljava/lang/String;
    .param p5, "crashInfo"    # Landroid/app/ApplicationErrorReport$CrashInfo;

    .prologue
    const/4 v4, 0x0

    .line 11813
    const-string v0, "WTF"

    invoke-direct {p0, p3, v0}, Lcom/android/server/am/ActivityManagerService;->findAppProcess(Landroid/os/IBinder;Ljava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 11814
    .local v2, "r":Lcom/android/server/am/ProcessRecord;
    if-nez p3, :cond_0

    const-string v3, "system_server"

    .line 11817
    .local v3, "processName":Ljava/lang/String;
    :goto_0
    const/16 v1, 0x7558

    const/4 v0, 0x6

    new-array v5, v0, [Ljava/lang/Object;

    const/4 v0, 0x0

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v6

    invoke-static {v6}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v0

    const/4 v0, 0x1

    invoke-static {p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v6

    aput-object v6, v5, v0

    const/4 v0, 0x2

    aput-object v3, v5, v0

    const/4 v6, 0x3

    if-nez v2, :cond_2

    const/4 v0, -0x1

    :goto_1
    invoke-static {v0}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v0

    aput-object v0, v5, v6

    const/4 v0, 0x4

    aput-object p4, v5, v0

    const/4 v0, 0x5

    iget-object v6, p5, Landroid/app/ApplicationErrorReport$CrashInfo;->exceptionMessage:Ljava/lang/String;

    aput-object v6, v5, v0

    invoke-static {v1, v5}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .line 11820
    const-string v1, "wtf"

    move-object v0, p0

    move-object v5, v4

    move-object v6, p4

    move-object v7, v4

    move-object v8, v4

    move-object v9, p5

    invoke-virtual/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    .line 11822
    return-object v2

    .line 11814
    .end local v3    # "processName":Ljava/lang/String;
    :cond_0
    if-nez v2, :cond_1

    const-string v3, "unknown"

    goto :goto_0

    :cond_1
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    goto :goto_0

    .line 11817
    .restart local v3    # "processName":Ljava/lang/String;
    :cond_2
    iget-object v0, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    goto :goto_1
.end method

.method handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I
    .locals 14
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I
    .param p4, "allowAll"    # Z
    .param p5, "allowMode"    # I
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "callerPackage"    # Ljava/lang/String;

    .prologue
    .line 15187
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v10

    .line 15188
    .local v10, "callingUserId":I
    move/from16 v0, p3

    if-ne v10, v0, :cond_0

    .line 15271
    .end local p3    # "userId":I
    :goto_0
    return p3

    .line 15198
    .restart local p3    # "userId":I
    :cond_0
    move/from16 v0, p3

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->unsafeConvertIncomingUser(I)I

    move-result v13

    .line 15200
    .local v13, "targetUserId":I
    if-eqz p2, :cond_1

    const/16 v1, 0x3e8

    move/from16 v0, p2

    if-eq v0, v1, :cond_1

    .line 15202
    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    const/4 v5, -0x1

    const/4 v6, 0x1

    move-object v1, p0

    move v3, p1

    move/from16 v4, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-nez v1, :cond_2

    .line 15205
    const/4 v7, 0x1

    .line 15230
    .local v7, "allow":Z
    :goto_1
    if-nez v7, :cond_1

    .line 15231
    const/4 v1, -0x3

    move/from16 v0, p3

    if-ne v0, v1, :cond_8

    .line 15234
    move v13, v10

    .line 15259
    .end local v7    # "allow":Z
    :cond_1
    if-nez p4, :cond_b

    if-gez v13, :cond_b

    .line 15260
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Call does not support special user #"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 15206
    :cond_2
    const/4 v1, 0x2

    move/from16 v0, p5

    if-ne v0, v1, :cond_3

    .line 15208
    const/4 v7, 0x0

    .restart local v7    # "allow":Z
    goto :goto_1

    .line 15209
    .end local v7    # "allow":Z
    :cond_3
    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v5, -0x1

    const/4 v6, 0x1

    move-object v1, p0

    move v3, p1

    move/from16 v4, p2

    invoke-virtual/range {v1 .. v6}, Lcom/android/server/am/ActivityManagerService;->checkComponentPermission(Ljava/lang/String;IIIZ)I

    move-result v1

    if-eqz v1, :cond_4

    .line 15212
    const/4 v7, 0x0

    .restart local v7    # "allow":Z
    goto :goto_1

    .line 15213
    .end local v7    # "allow":Z
    :cond_4
    if-nez p5, :cond_5

    .line 15215
    const/4 v7, 0x1

    .restart local v7    # "allow":Z
    goto :goto_1

    .line 15216
    .end local v7    # "allow":Z
    :cond_5
    const/4 v1, 0x1

    move/from16 v0, p5

    if-ne v0, v1, :cond_7

    .line 15219
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    monitor-enter v2

    .line 15220
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    const/4 v3, -0x1

    invoke-virtual {v1, v10, v3}, Landroid/util/SparseIntArray;->get(II)I

    move-result v9

    .line 15222
    .local v9, "callingProfile":I
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserProfileGroupIdsSelfLocked:Landroid/util/SparseIntArray;

    const/4 v3, -0x1

    invoke-virtual {v1, v13, v3}, Landroid/util/SparseIntArray;->get(II)I

    move-result v12

    .line 15224
    .local v12, "targetProfile":I
    const/4 v1, -0x1

    if-eq v9, v1, :cond_6

    if-ne v9, v12, :cond_6

    const/4 v7, 0x1

    .line 15226
    .restart local v7    # "allow":Z
    :goto_2
    monitor-exit v2

    goto :goto_1

    .end local v7    # "allow":Z
    .end local v9    # "callingProfile":I
    .end local v12    # "targetProfile":I
    :catchall_0
    move-exception v1

    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 15224
    .restart local v9    # "callingProfile":I
    .restart local v12    # "targetProfile":I
    :cond_6
    const/4 v7, 0x0

    goto :goto_2

    .line 15228
    .end local v9    # "callingProfile":I
    .end local v12    # "targetProfile":I
    :cond_7
    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown mode: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 15236
    .restart local v7    # "allow":Z
    :cond_8
    new-instance v8, Ljava/lang/StringBuilder;

    const/16 v1, 0x80

    invoke-direct {v8, v1}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 15237
    .local v8, "builder":Ljava/lang/StringBuilder;
    const-string v1, "Permission Denial: "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15238
    move-object/from16 v0, p6

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15239
    if-eqz p7, :cond_9

    .line 15240
    const-string v1, " from "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15241
    move-object/from16 v0, p7

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15243
    :cond_9
    const-string v1, " asks to run as user "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15244
    move/from16 v0, p3

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 15245
    const-string v1, " but is calling from user "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15246
    invoke-static/range {p2 .. p2}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v1

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    .line 15247
    const-string v1, "; this requires "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15248
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15249
    const/4 v1, 0x2

    move/from16 v0, p5

    if-eq v0, v1, :cond_a

    .line 15250
    const-string v1, " or "

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15251
    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v8, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 15253
    :cond_a
    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v11

    .line 15254
    .local v11, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v11}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15255
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v11}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 15264
    .end local v7    # "allow":Z
    .end local v8    # "builder":Ljava/lang/StringBuilder;
    .end local v11    # "msg":Ljava/lang/String;
    :cond_b
    const/16 v1, 0x7d0

    move/from16 v0, p2

    if-ne v0, v1, :cond_c

    if-ltz v13, :cond_c

    .line 15265
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const-string v2, "no_debugging_features"

    invoke-virtual {v1, v2, v13}, Lcom/android/server/pm/UserManagerService;->hasUserRestriction(Ljava/lang/String;I)Z

    move-result v1

    if-eqz v1, :cond_c

    .line 15267
    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Shell does not have permission to access user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, "\n "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const/4 v3, 0x3

    invoke-static {v3}, Landroid/os/Debug;->getCallers(I)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_c
    move/from16 p3, v13

    .line 15271
    goto/16 :goto_0
.end method

.method public handleIncomingUser(IIIZZLjava/lang/String;Ljava/lang/String;)I
    .locals 8
    .param p1, "callingPid"    # I
    .param p2, "callingUid"    # I
    .param p3, "userId"    # I
    .param p4, "allowAll"    # Z
    .param p5, "requireFull"    # Z
    .param p6, "name"    # Ljava/lang/String;
    .param p7, "callerPackage"    # Ljava/lang/String;

    .prologue
    .line 15176
    if-eqz p5, :cond_0

    const/4 v5, 0x2

    :goto_0
    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move-object v6, p6

    move-object v7, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result v0

    return v0

    :cond_0
    const/4 v5, 0x0

    goto :goto_0
.end method

.method public hang(Landroid/os/IBinder;Z)V
    .locals 5
    .param p1, "who"    # Landroid/os/IBinder;
    .param p2, "allowRestart"    # Z

    .prologue
    .line 10854
    const-string v2, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 10856
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10860
    :cond_0
    new-instance v0, Lcom/android/server/am/ActivityManagerService$11;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$11;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .line 10870
    .local v0, "death":Landroid/os/IBinder$DeathRecipient;
    const/4 v2, 0x0

    :try_start_0
    invoke-interface {p1, v0, v2}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_1

    .line 10876
    monitor-enter p0

    .line 10877
    :try_start_1
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    invoke-virtual {v2, p2}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 10878
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Hanging system process at request of pid "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10879
    monitor-enter v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10880
    :goto_0
    :try_start_2
    invoke-interface {p1}, Landroid/os/IBinder;->isBinderAlive()Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result v2

    if-eqz v2, :cond_1

    .line 10882
    :try_start_3
    invoke-virtual {v0}, Ljava/lang/Object;->wait()V
    :try_end_3
    .catch Ljava/lang/InterruptedException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    goto :goto_0

    .line 10883
    :catch_0
    move-exception v2

    goto :goto_0

    .line 10871
    :catch_1
    move-exception v1

    .line 10872
    .local v1, "e":Landroid/os/RemoteException;
    const-string v2, "ActivityManager"

    const-string v3, "hang: given caller IBinder is already dead."

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10889
    .end local v1    # "e":Landroid/os/RemoteException;
    :goto_1
    return-void

    .line 10886
    :cond_1
    :try_start_4
    monitor-exit v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    .line 10887
    :try_start_5
    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v2

    const/4 v3, 0x1

    invoke-virtual {v2, v3}, Lcom/android/server/Watchdog;->setAllowRestart(Z)V

    .line 10888
    monitor-exit p0

    goto :goto_1

    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    throw v2

    .line 10886
    :catchall_1
    move-exception v2

    :try_start_6
    monitor-exit v0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    throw v2
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0
.end method

.method incProviderCountLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Lcom/android/server/am/ContentProviderConnection;
    .locals 8
    .param p1, "r"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "cpr"    # Lcom/android/server/am/ContentProviderRecord;
    .param p3, "externalProcessToken"    # Landroid/os/IBinder;
    .param p4, "stable"    # Z

    .prologue
    const/4 v1, 0x1

    .line 9088
    if-eqz p1, :cond_4

    .line 9089
    const/4 v7, 0x0

    .local v7, "i":I
    :goto_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v7, v0, :cond_2

    .line 9090
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ContentProviderConnection;

    .line 9091
    .local v6, "conn":Lcom/android/server/am/ContentProviderConnection;
    iget-object v0, v6, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    if-ne v0, p2, :cond_1

    .line 9097
    if-eqz p4, :cond_0

    .line 9098
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 9099
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 9121
    .end local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v7    # "i":I
    :goto_1
    return-object v6

    .line 9101
    .restart local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .restart local v7    # "i":I
    :cond_0
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 9102
    iget v0, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    add-int/lit8 v0, v0, 0x1

    iput v0, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    goto :goto_1

    .line 9089
    :cond_1
    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 9107
    .end local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_2
    new-instance v6, Lcom/android/server/am/ContentProviderConnection;

    invoke-direct {v6, p2, p1}, Lcom/android/server/am/ContentProviderConnection;-><init>(Lcom/android/server/am/ContentProviderRecord;Lcom/android/server/am/ProcessRecord;)V

    .line 9108
    .restart local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    if-eqz p4, :cond_3

    .line 9109
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 9110
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 9115
    :goto_2
    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->connections:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9116
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9117
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->uid:I

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v3, p2, Lcom/android/server/am/ContentProviderRecord;->uid:I

    iget-object v4, p2, Lcom/android/server/am/ContentProviderRecord;->name:Landroid/content/ComponentName;

    iget-object v0, p2, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v5, v0, Landroid/content/pm/ProviderInfo;->processName:Ljava/lang/String;

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->startAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;

    goto :goto_1

    .line 9112
    :cond_3
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 9113
    iput v1, v6, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    goto :goto_2

    .line 9120
    .end local v6    # "conn":Lcom/android/server/am/ContentProviderConnection;
    .end local v7    # "i":I
    :cond_4
    invoke-virtual {p2, p3}, Lcom/android/server/am/ContentProviderRecord;->addExternalProcessHandleLocked(Landroid/os/IBinder;)V

    .line 9121
    const/4 v6, 0x0

    goto :goto_1
.end method

.method public initPowerManagement()V
    .locals 1

    .prologue
    .line 2173
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->initPowerManagement()V

    .line 2174
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v0}, Lcom/android/server/am/BatteryStatsService;->initPowerManagement()V

    .line 2175
    return-void
.end method

.method public inputDispatchingTimedOut(IZLjava/lang/String;)J
    .locals 8
    .param p1, "pid"    # I
    .param p2, "aboveSystem"    # Z
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v2, 0x0

    .line 10372
    const-string v0, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 10374
    new-instance v0, Ljava/lang/SecurityException;

    const-string v2, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10379
    :cond_0
    monitor-enter p0

    .line 10380
    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10381
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v0, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 10382
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10383
    :try_start_2
    invoke-static {v1}, Lcom/android/server/am/ActivityManagerService;->getInputDispatchingTimeoutLocked(Lcom/android/server/am/ProcessRecord;)J

    move-result-wide v6

    .line 10384
    .local v6, "timeout":J
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-object v0, p0

    move-object v3, v2

    move v4, p2

    move-object v5, p3

    .line 10386
    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 10387
    const-wide/16 v6, -0x1

    .line 10390
    .end local v6    # "timeout":J
    :cond_1
    return-wide v6

    .line 10382
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v0

    .line 10384
    :catchall_1
    move-exception v0

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v0
.end method

.method public inputDispatchingTimedOut(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)Z
    .locals 10
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activity"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "parent"    # Lcom/android/server/am/ActivityRecord;
    .param p4, "aboveSystem"    # Z
    .param p5, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v8, 0x1

    const/4 v0, 0x0

    .line 10400
    const-string v1, "android.permission.FILTER_EVENTS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 10402
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.FILTER_EVENTS"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10407
    :cond_0
    if-nez p5, :cond_1

    .line 10408
    const-string v6, "Input dispatching timed out"

    .line 10413
    .local v6, "annotation":Ljava/lang/String;
    :goto_0
    if-eqz p1, :cond_5

    .line 10414
    monitor-enter p0

    .line 10415
    :try_start_0
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->debugging:Z

    if-eqz v1, :cond_2

    .line 10416
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 10441
    :goto_1
    return v0

    .line 10410
    .end local v6    # "annotation":Ljava/lang/String;
    :cond_1
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Input dispatching timed out ("

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ")"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .restart local v6    # "annotation":Ljava/lang/String;
    goto :goto_0

    .line 10419
    :cond_2
    :try_start_1
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z

    if-eqz v1, :cond_3

    .line 10421
    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidDexOpt:Z

    .line 10422
    monitor-exit p0

    goto :goto_1

    .line 10432
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0

    .line 10425
    :cond_3
    :try_start_2
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-eqz v0, :cond_4

    .line 10426
    new-instance v7, Landroid/os/Bundle;

    invoke-direct {v7}, Landroid/os/Bundle;-><init>()V

    .line 10427
    .local v7, "info":Landroid/os/Bundle;
    const-string v0, "shortMsg"

    const-string v1, "keyDispatchingTimedOut"

    invoke-virtual {v7, v0, v1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 10428
    const-string v0, "longMsg"

    invoke-virtual {v7, v0, v6}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 10429
    const/4 v0, 0x0

    invoke-virtual {p0, p1, v0, v7}, Lcom/android/server/am/ActivityManagerService;->finishInstrumentationLocked(Lcom/android/server/am/ProcessRecord;ILandroid/os/Bundle;)V

    .line 10430
    monitor-exit p0

    move v0, v8

    goto :goto_1

    .line 10432
    .end local v7    # "info":Landroid/os/Bundle;
    :cond_4
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 10433
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v0, Lcom/android/server/am/ActivityManagerService$10;

    move-object v1, p0

    move-object v2, p1

    move-object v3, p2

    move-object v4, p3

    move v5, p4

    invoke-direct/range {v0 .. v6}, Lcom/android/server/am/ActivityManagerService$10;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;ZLjava/lang/String;)V

    invoke-virtual {v9, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    :cond_5
    move v0, v8

    .line 10441
    goto :goto_1
.end method

.method public final installSystemProviders()V
    .locals 7

    .prologue
    .line 9785
    monitor-enter p0

    .line 9786
    :try_start_0
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    const-string v5, "system"

    const/16 v6, 0x3e8

    invoke-virtual {v4, v5, v6}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .line 9787
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->generateApplicationProvidersLocked(Lcom/android/server/am/ProcessRecord;)Ljava/util/List;

    move-result-object v3

    .line 9788
    .local v3, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    if-eqz v3, :cond_1

    .line 9789
    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v4

    add-int/lit8 v1, v4, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_1

    .line 9790
    invoke-interface {v3, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ProviderInfo;

    .line 9791
    .local v2, "pi":Landroid/content/pm/ProviderInfo;
    iget-object v4, v2, Landroid/content/pm/ProviderInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x1

    if-nez v4, :cond_0

    .line 9792
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Not installing system proc provider "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v6, v2, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, ": not system .apk"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9794
    invoke-interface {v3, v1}, Ljava/util/List;->remove(I)Ljava/lang/Object;

    .line 9789
    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    .line 9798
    .end local v1    # "i":I
    .end local v2    # "pi":Landroid/content/pm/ProviderInfo;
    :cond_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9799
    if-eqz v3, :cond_2

    .line 9800
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v4, v3}, Landroid/app/ActivityThread;->installSystemProviders(Ljava/util/List;)V

    .line 9803
    :cond_2
    new-instance v4, Lcom/android/server/am/CoreSettingsObserver;

    invoke-direct {v4, p0}, Lcom/android/server/am/CoreSettingsObserver;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    iput-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mCoreSettingsObserver:Lcom/android/server/am/CoreSettingsObserver;

    .line 9806
    return-void

    .line 9798
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v3    # "providers":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ProviderInfo;>;"
    :catchall_0
    move-exception v4

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4
.end method

.method isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z
    .locals 1
    .param p1, "ai"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    .line 2895
    iget v0, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v0, v0, 0x8

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isBackgroundVisibleBehind(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10625
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 10627
    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 10628
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v2

    .line 10629
    .local v2, "stack":Lcom/android/server/am/ActivityStack;
    if-nez v2, :cond_0

    const/4 v3, 0x0

    .line 10632
    .local v3, "visible":Z
    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10635
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return v3

    .line 10629
    .end local v3    # "visible":Z
    :cond_0
    :try_start_2
    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->hasVisibleBehindActivity()Z

    move-result v3

    goto :goto_0

    .line 10633
    .end local v2    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v4
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 10635
    :catchall_1
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method public isImmersive(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10678
    monitor-enter p0

    .line 10679
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10680
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 10681
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1

    .line 10684
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 10683
    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return v1
.end method

.method public isInHomeStack(I)Z
    .locals 5
    .param p1, "taskId"    # I

    .prologue
    .line 8744
    const-string v3, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v4, "getStackInfo()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8746
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 8748
    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 8749
    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .line 8750
    .local v2, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v2, :cond_0

    iget-object v3, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v3, :cond_0

    iget-object v3, v2, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v3

    if-eqz v3, :cond_0

    const/4 v3, 0x1

    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8753
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return v3

    .line 8750
    :cond_0
    const/4 v3, 0x0

    goto :goto_0

    .line 8751
    .end local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 8753
    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public isInLockTaskMode()Z
    .locals 1

    .prologue
    .line 8908
    monitor-enter p0

    .line 8909
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->isInLockTaskMode()Z

    move-result v0

    monitor-exit p0

    return v0

    .line 8910
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public isIntentSenderAnActivity(Landroid/content/IIntentSender;)Z
    .locals 5
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v2, 0x0

    .line 6648
    instance-of v3, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_1

    .line 6659
    :cond_0
    :goto_0
    return v2

    .line 6652
    :cond_1
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v1, v0

    .line 6653
    .local v1, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v3, v1, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget v3, v3, Lcom/android/server/am/PendingIntentRecord$Key;->type:I
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    const/4 v4, 0x2

    if-ne v3, v4, :cond_0

    .line 6654
    const/4 v2, 0x1

    goto :goto_0

    .line 6657
    .end local v1    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v3

    goto :goto_0
.end method

.method public isIntentSenderTargetedToPackage(Landroid/content/IIntentSender;)Z
    .locals 6
    .param p1, "pendingResult"    # Landroid/content/IIntentSender;

    .prologue
    const/4 v4, 0x0

    .line 6626
    instance-of v5, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v5, :cond_1

    .line 6643
    :cond_0
    :goto_0
    return v4

    .line 6630
    :cond_1
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v3, v0

    .line 6631
    .local v3, "res":Lcom/android/server/am/PendingIntentRecord;
    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    if-eqz v5, :cond_0

    .line 6634
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1
    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    array-length v5, v5

    if-ge v1, v5, :cond_3

    .line 6635
    iget-object v5, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object v5, v5, Lcom/android/server/am/PendingIntentRecord$Key;->allIntents:[Landroid/content/Intent;

    aget-object v2, v5, v1

    .line 6636
    .local v2, "intent":Landroid/content/Intent;
    invoke-virtual {v2}, Landroid/content/Intent;->getPackage()Ljava/lang/String;

    move-result-object v5

    if-eqz v5, :cond_2

    invoke-virtual {v2}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    move-result-object v5

    if-nez v5, :cond_0

    .line 6634
    :cond_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .line 6640
    .end local v2    # "intent":Landroid/content/Intent;
    :cond_3
    const/4 v4, 0x1

    goto :goto_0

    .line 6641
    .end local v1    # "i":I
    .end local v3    # "res":Lcom/android/server/am/PendingIntentRecord;
    :catch_0
    move-exception v5

    goto :goto_0
.end method

.method isNextTransitionForward()Z
    .locals 2

    .prologue
    .line 2738
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v1}, Lcom/android/server/wm/WindowManagerService;->getPendingAppTransition()I

    move-result v0

    .line 2739
    .local v0, "transit":I
    const/4 v1, 0x6

    if-eq v0, v1, :cond_0

    const/16 v1, 0x8

    if-eq v0, v1, :cond_0

    const/16 v1, 0xa

    if-ne v0, v1, :cond_1

    :cond_0
    const/4 v1, 0x1

    :goto_0
    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method isPendingBroadcastProcessLocked(I)Z
    .locals 1
    .param p1, "pid"    # I

    .prologue
    .line 15556
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgBroadcastQueue:Lcom/android/server/am/BroadcastQueue;

    invoke-virtual {v0, p1}, Lcom/android/server/am/BroadcastQueue;->isPendingBroadcastProcessLocked(I)Z

    move-result v0

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method isSingleton(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)Z
    .locals 6
    .param p1, "componentProcessName"    # Ljava/lang/String;
    .param p2, "aInfo"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "className"    # Ljava/lang/String;
    .param p4, "flags"    # I

    .prologue
    const/high16 v5, 0x40000000    # 2.0f

    .line 15276
    const/4 v2, 0x0

    .line 15278
    .local v2, "result":Z
    iget v3, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v3

    const/16 v4, 0x2710

    if-lt v3, v4, :cond_2

    .line 15279
    and-int v3, p4, v5

    if-eqz v3, :cond_1

    .line 15280
    const-string v3, "android.permission.INTERACT_ACROSS_USERS"

    iget v4, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v3, v4}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v3

    if-eqz v3, :cond_0

    .line 15283
    new-instance v0, Landroid/content/ComponentName;

    iget-object v3, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-direct {v0, v3, p3}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 15284
    .local v0, "comp":Landroid/content/ComponentName;
    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Permission Denial: Component "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v0}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " requests FLAG_SINGLE_USER, but app does not hold "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 15287
    .local v1, "msg":Ljava/lang/String;
    const-string v3, "ActivityManager"

    invoke-static {v3, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15288
    new-instance v3, Ljava/lang/SecurityException;

    invoke-direct {v3, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 15291
    .end local v0    # "comp":Landroid/content/ComponentName;
    .end local v1    # "msg":Ljava/lang/String;
    :cond_0
    const/4 v2, 0x1

    .line 15304
    :cond_1
    :goto_0
    return v2

    .line 15293
    :cond_2
    const-string v3, "system"

    invoke-virtual {v3, p1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_3

    .line 15294
    const/4 v2, 0x1

    goto :goto_0

    .line 15295
    :cond_3
    and-int v3, p4, v5

    if-eqz v3, :cond_1

    .line 15297
    iget v3, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v4, 0x3e9

    invoke-static {v3, v4}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v3

    if-nez v3, :cond_4

    iget v3, p2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v3, v3, 0x8

    if-eqz v3, :cond_5

    :cond_4
    const/4 v2, 0x1

    :goto_1
    goto :goto_0

    :cond_5
    const/4 v2, 0x0

    goto :goto_1
.end method

.method public isSleeping()Z
    .locals 1

    .prologue
    .line 10007
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    return v0
.end method

.method public isSleepingOrShuttingDown()Z
    .locals 1

    .prologue
    .line 10003
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v0

    if-nez v0, :cond_0

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0
.end method

.method public isTopActivityImmersive()Z
    .locals 3

    .prologue
    .line 10688
    const-string v1, "startActivity"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 10689
    monitor-enter p0

    .line 10690
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v1

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10691
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    iget-boolean v1, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z

    :goto_0
    monitor-exit p0

    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .line 10692
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public isTopOfTask(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 10697
    monitor-enter p0

    .line 10698
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 10699
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    .line 10700
    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1

    .line 10703
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .line 10702
    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v1}, Lcom/android/server/am/TaskRecord;->getTopActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    if-ne v1, v0, :cond_1

    const/4 v1, 0x1

    :goto_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method public isUserAMonkey()Z
    .locals 1

    .prologue
    .line 10348
    monitor-enter p0

    .line 10350
    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    if-eqz v0, :cond_1

    :cond_0
    const/4 v0, 0x1

    :goto_0
    monitor-exit p0

    return v0

    :cond_1
    const/4 v0, 0x0

    goto :goto_0

    .line 10351
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public isUserRunning(IZ)Z
    .locals 3
    .param p1, "userId"    # I
    .param p2, "orStopped"    # Z

    .prologue
    .line 19479
    const-string v1, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 19481
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: isUserRunning() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.INTERACT_ACROSS_USERS"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 19485
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 19486
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 19488
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    monitor-enter p0

    .line 19489
    :try_start_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->isUserRunningLocked(IZ)Z

    move-result v1

    monitor-exit p0

    return v1

    .line 19490
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method isUserRunningLocked(IZ)Z
    .locals 5
    .param p1, "userId"    # I
    .param p2, "orStopped"    # Z

    .prologue
    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 19494
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStartedUsers:Landroid/util/SparseArray;

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/UserStartedState;

    .line 19495
    .local v0, "state":Lcom/android/server/am/UserStartedState;
    if-nez v0, :cond_1

    move v1, v2

    .line 19501
    :cond_0
    :goto_0
    return v1

    .line 19498
    :cond_1
    if-nez p2, :cond_0

    .line 19501
    iget v3, v0, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v4, 0x2

    if-eq v3, v4, :cond_2

    iget v3, v0, Lcom/android/server/am/UserStartedState;->mState:I

    const/4 v4, 0x3

    if-ne v3, v4, :cond_0

    :cond_2
    move v1, v2

    goto :goto_0
.end method

.method isValidSingletonCall(II)Z
    .locals 2
    .param p1, "callingUid"    # I
    .param p2, "componentUid"    # I

    .prologue
    .line 15314
    invoke-static {p2}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v0

    .line 15315
    .local v0, "componentAppId":I
    invoke-static {p1, p2}, Landroid/os/UserHandle;->isSameApp(II)Z

    move-result v1

    if-nez v1, :cond_0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    const/16 v1, 0x3e9

    if-eq v0, v1, :cond_0

    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-static {v1, p2}, Landroid/app/ActivityManager;->checkUidPermission(Ljava/lang/String;I)I

    move-result v1

    if-nez v1, :cond_1

    :cond_0
    const/4 v1, 0x1

    :goto_0
    return v1

    :cond_1
    const/4 v1, 0x0

    goto :goto_0
.end method

.method public keyguardWaitingForActivityDrawn()V
    .locals 4

    .prologue
    .line 6138
    const-string v2, "keyguardWaitingForActivityDrawn"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 6139
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 6141
    .local v0, "token":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 6143
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->keyguardWaitingForActivityDrawn()V

    .line 6144
    iget v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    const/4 v3, 0x2

    if-ne v2, v3, :cond_0

    .line 6145
    const/4 v2, 0x1

    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    .line 6146
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 6148
    :cond_0
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 6150
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 6152
    return-void

    .line 6148
    :catchall_0
    move-exception v2

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v2
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 6150
    :catchall_1
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public killAllBackgroundProcesses()V
    .locals 22

    .prologue
    .line 5230
    const-string v18, "android.permission.KILL_BACKGROUND_PROCESSES"

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v18

    if-eqz v18, :cond_0

    .line 5232
    new-instance v18, Ljava/lang/StringBuilder;

    invoke-direct/range {v18 .. v18}, Ljava/lang/StringBuilder;-><init>()V

    const-string v19, "Permission Denial: killAllBackgroundProcesses() from pid="

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v19

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v18

    const-string v19, ", uid="

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v19

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v18

    const-string v19, " requires "

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    const-string v19, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual/range {v18 .. v19}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v16

    .line 5236
    .local v16, "msg":Ljava/lang/String;
    const-string v18, "ActivityManager"

    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5237
    new-instance v18, Ljava/lang/SecurityException;

    move-object/from16 v0, v18

    move-object/from16 v1, v16

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v18

    .line 5240
    .end local v16    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v12

    .line 5242
    .local v12, "callingId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5243
    :try_start_1
    new-instance v17, Ljava/util/ArrayList;

    invoke-direct/range {v17 .. v17}, Ljava/util/ArrayList;-><init>()V

    .line 5244
    .local v17, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Landroid/util/ArrayMap;->size()I

    move-result v8

    .line 5245
    .local v8, "NP":I
    const/4 v15, 0x0

    .local v15, "ip":I
    :goto_0
    if-ge v15, v8, :cond_5

    .line 5246
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    move-object/from16 v18, v0

    invoke-virtual/range {v18 .. v18}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v18

    move-object/from16 v0, v18

    invoke-virtual {v0, v15}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v10

    check-cast v10, Landroid/util/SparseArray;

    .line 5247
    .local v10, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v10}, Landroid/util/SparseArray;->size()I

    move-result v7

    .line 5248
    .local v7, "NA":I
    const/4 v14, 0x0

    .local v14, "ia":I
    :goto_1
    if-ge v14, v7, :cond_4

    .line 5249
    invoke-virtual {v10, v14}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/android/server/am/ProcessRecord;

    .line 5250
    .local v9, "app":Lcom/android/server/am/ProcessRecord;
    iget-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->persistent:Z

    move/from16 v18, v0

    if-eqz v18, :cond_2

    .line 5248
    :cond_1
    :goto_2
    add-int/lit8 v14, v14, 0x1

    goto :goto_1

    .line 5254
    :cond_2
    iget-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->removed:Z

    move/from16 v18, v0

    if-eqz v18, :cond_3

    .line 5255
    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 5270
    .end local v7    # "NA":I
    .end local v8    # "NP":I
    .end local v9    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v14    # "ia":I
    .end local v15    # "ip":I
    .end local v17    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_0
    move-exception v18

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v18
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 5272
    :catchall_1
    move-exception v18

    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v18

    .line 5256
    .restart local v7    # "NA":I
    .restart local v8    # "NP":I
    .restart local v9    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v14    # "ia":I
    .restart local v15    # "ip":I
    .restart local v17    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_3
    :try_start_3
    iget v0, v9, Lcom/android/server/am/ProcessRecord;->setAdj:I

    move/from16 v18, v0

    const/16 v19, 0x9

    move/from16 v0, v18

    move/from16 v1, v19

    if-lt v0, v1, :cond_1

    .line 5257
    const/16 v18, 0x1

    move/from16 v0, v18

    iput-boolean v0, v9, Lcom/android/server/am/ProcessRecord;->removed:Z

    .line 5258
    move-object/from16 v0, v17

    invoke-virtual {v0, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 5245
    .end local v9    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_4
    add-int/lit8 v15, v15, 0x1

    goto :goto_0

    .line 5263
    .end local v7    # "NA":I
    .end local v10    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v14    # "ia":I
    :cond_5
    invoke-virtual/range {v17 .. v17}, Ljava/util/ArrayList;->size()I

    move-result v6

    .line 5264
    .local v6, "N":I
    const/4 v11, 0x0

    .local v11, "i":I
    :goto_3
    if-ge v11, v6, :cond_6

    .line 5265
    move-object/from16 v0, v17

    invoke-virtual {v0, v11}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v18

    check-cast v18, Lcom/android/server/am/ProcessRecord;

    const/16 v19, 0x0

    const/16 v20, 0x1

    const-string v21, "kill all background"

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    move/from16 v2, v19

    move/from16 v3, v20

    move-object/from16 v4, v21

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z

    .line 5264
    add-int/lit8 v11, v11, 0x1

    goto :goto_3

    .line 5267
    :cond_6
    const/16 v18, 0x1

    move/from16 v0, v18

    move-object/from16 v1, p0

    iput-boolean v0, v1, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    .line 5268
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 5269
    const/16 v18, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v18

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->doLowMemReportIfNeededLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 5270
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 5272
    invoke-static {v12, v13}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5274
    return-void
.end method

.method killAppAtUsersRequest(Lcom/android/server/am/ProcessRecord;Landroid/app/Dialog;)V
    .locals 3
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "fromDialog"    # Landroid/app/Dialog;

    .prologue
    .line 11445
    monitor-enter p0

    .line 11446
    const/4 v0, 0x0

    :try_start_0
    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->crashing:Z

    .line 11447
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->crashingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 11448
    const/4 v0, 0x0

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->notResponding:Z

    .line 11449
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->notRespondingReport:Landroid/app/ActivityManager$ProcessErrorStateInfo;

    .line 11450
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    if-ne v0, p2, :cond_0

    .line 11451
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->anrDialog:Landroid/app/Dialog;

    .line 11453
    :cond_0
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    if-ne v0, p2, :cond_1

    .line 11454
    const/4 v0, 0x0

    iput-object v0, p1, Lcom/android/server/am/ProcessRecord;->waitDialog:Landroid/app/Dialog;

    .line 11456
    :cond_1
    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v0, :cond_2

    iget v0, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v1, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v0, v1, :cond_2

    .line 11457
    const/4 v0, 0x0

    const/4 v1, 0x0

    const/4 v2, 0x0

    invoke-direct {p0, p1, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->handleAppCrashLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z

    .line 11458
    const-string v0, "user request after error"

    const/4 v1, 0x1

    invoke-virtual {p1, v0, v1}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 11460
    :cond_2
    monitor-exit p0

    .line 11461
    return-void

    .line 11460
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public killApplicationProcess(Ljava/lang/String;I)V
    .locals 5
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "uid"    # I

    .prologue
    .line 5477
    if-nez p1, :cond_0

    .line 5501
    :goto_0
    return-void

    .line 5481
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 5483
    .local v1, "callerUid":I
    const/16 v2, 0x3e8

    if-ne v1, v2, :cond_2

    .line 5484
    monitor-enter p0

    .line 5485
    const/4 v2, 0x1

    :try_start_0
    invoke-virtual {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 5486
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v0, :cond_1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    if-eqz v2, :cond_1

    .line 5488
    :try_start_1
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->scheduleSuicide()V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5496
    :goto_1
    :try_start_2
    monitor-exit p0

    goto :goto_0

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2

    .line 5493
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_3
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Process/uid not found attempting kill of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " / "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_1

    .line 5498
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_2
    new-instance v2, Ljava/lang/SecurityException;

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v3, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " cannot kill app process: "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 5489
    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method public killApplicationWithAppId(Ljava/lang/String;ILjava/lang/String;)V
    .locals 6
    .param p1, "pkg"    # Ljava/lang/String;
    .param p2, "appid"    # I
    .param p3, "reason"    # Ljava/lang/String;

    .prologue
    .line 5349
    if-nez p1, :cond_0

    .line 5373
    :goto_0
    return-void

    .line 5353
    :cond_0
    if-gez p2, :cond_1

    .line 5354
    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Invalid appid specified for pkg : "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    .line 5357
    :cond_1
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 5359
    .local v1, "callerUid":I
    const/16 v3, 0x3e8

    if-ne v1, v3, :cond_2

    .line 5361
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v4, 0x16

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v2

    .line 5362
    .local v2, "msg":Landroid/os/Message;
    iput p2, v2, Landroid/os/Message;->arg1:I

    .line 5363
    const/4 v3, 0x0

    iput v3, v2, Landroid/os/Message;->arg2:I

    .line 5364
    new-instance v0, Landroid/os/Bundle;

    invoke-direct {v0}, Landroid/os/Bundle;-><init>()V

    .line 5365
    .local v0, "bundle":Landroid/os/Bundle;
    const-string v3, "pkg"

    invoke-virtual {v0, v3, p1}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 5366
    const-string v3, "reason"

    invoke-virtual {v0, v3, p3}, Landroid/os/Bundle;->putString(Ljava/lang/String;Ljava/lang/String;)V

    .line 5367
    iput-object v0, v2, Landroid/os/Message;->obj:Ljava/lang/Object;

    .line 5368
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    goto :goto_0

    .line 5370
    .end local v0    # "bundle":Landroid/os/Bundle;
    .end local v2    # "msg":Landroid/os/Message;
    :cond_2
    new-instance v3, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v4, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " cannot kill pkg: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3
.end method

.method public killBackgroundProcesses(Ljava/lang/String;I)V
    .locals 14
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "userId"    # I

    .prologue
    .line 5193
    const-string v0, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    const-string v0, "android.permission.RESTART_PACKAGES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    .line 5197
    new-instance v0, Ljava/lang/StringBuilder;

    invoke-direct {v0}, Ljava/lang/StringBuilder;-><init>()V

    const-string v1, "Permission Denial: killBackgroundProcesses() from pid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, ", uid="

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, " requires "

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    const-string v1, "android.permission.KILL_BACKGROUND_PROCESSES"

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    .line 5201
    .local v12, "msg":Ljava/lang/String;
    const-string v0, "ActivityManager"

    invoke-static {v0, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5202
    new-instance v0, Ljava/lang/SecurityException;

    invoke-direct {v0, v12}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 5205
    .end local v12    # "msg":Ljava/lang/String;
    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x1

    const/4 v5, 0x2

    const-string v6, "killBackgroundProcesses"

    const/4 v7, 0x0

    move-object v0, p0

    move/from16 v3, p2

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p2

    .line 5207
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 5209
    .local v10, "callingId":J
    :try_start_0
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v13

    .line 5210
    .local v13, "pm":Landroid/content/pm/IPackageManager;
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 5211
    const/4 v2, -0x1

    .line 5213
    .local v2, "appId":I
    const/4 v0, 0x0

    :try_start_1
    invoke-interface {v13, p1, v0}, Landroid/content/pm/IPackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v0

    invoke-static {v0}, Landroid/os/UserHandle;->getAppId(I)I
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    .line 5216
    :goto_0
    const/4 v0, -0x1

    if-ne v2, v0, :cond_1

    .line 5217
    :try_start_2
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Invalid packageName: "

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 5218
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 5224
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 5226
    :goto_1
    return-void

    .line 5220
    :cond_1
    const/4 v4, 0x5

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/4 v8, 0x0

    :try_start_3
    const-string v9, "kill background"

    move-object v0, p0

    move-object v1, p1

    move/from16 v3, p2

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    .line 5222
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    .line 5224
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_1

    .line 5222
    :catchall_0
    move-exception v0

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    .line 5224
    .end local v2    # "appId":I
    .end local v13    # "pm":Landroid/content/pm/IPackageManager;
    :catchall_1
    move-exception v0

    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .line 5214
    .restart local v2    # "appId":I
    .restart local v13    # "pm":Landroid/content/pm/IPackageManager;
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method public killPids([ILjava/lang/String;Z)Z
    .locals 12
    .param p1, "pids"    # [I
    .param p2, "pReason"    # Ljava/lang/String;
    .param p3, "secure"    # Z

    .prologue
    .line 10757
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v8

    const/16 v9, 0x3e8

    if-eq v8, v9, :cond_0

    .line 10758
    new-instance v8, Ljava/lang/SecurityException;

    const-string v9, "killPids only available to the system"

    invoke-direct {v8, v9}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v8

    .line 10760
    :cond_0
    if-nez p2, :cond_2

    const-string v4, "Unknown"

    .line 10764
    .local v4, "reason":Ljava/lang/String;
    :goto_0
    const/4 v2, 0x0

    .line 10765
    .local v2, "killed":Z
    iget-object v9, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v9

    .line 10766
    :try_start_0
    array-length v8, p1

    new-array v6, v8, [I

    .line 10767
    .local v6, "types":[I
    const/4 v7, 0x0

    .line 10768
    .local v7, "worstType":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_1
    array-length v8, p1

    if-ge v1, v8, :cond_3

    .line 10769
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v10, p1, v1

    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 10770
    .local v3, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v3, :cond_1

    .line 10771
    iget v5, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 10772
    .local v5, "type":I
    aput v5, v6, v1

    .line 10773
    if-le v5, v7, :cond_1

    .line 10774
    move v7, v5

    .line 10768
    .end local v5    # "type":I
    :cond_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    .end local v1    # "i":I
    .end local v2    # "killed":Z
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v4    # "reason":Ljava/lang/String;
    .end local v6    # "types":[I
    .end local v7    # "worstType":I
    :cond_2
    move-object v4, p2

    .line 10760
    goto :goto_0

    .line 10781
    .restart local v1    # "i":I
    .restart local v2    # "killed":Z
    .restart local v4    # "reason":Ljava/lang/String;
    .restart local v6    # "types":[I
    .restart local v7    # "worstType":I
    :cond_3
    const/16 v8, 0xf

    if-ge v7, v8, :cond_4

    const/16 v8, 0x9

    if-le v7, v8, :cond_4

    .line 10783
    const/16 v7, 0x9

    .line 10788
    :cond_4
    if-nez p3, :cond_5

    const/4 v8, 0x5

    if-ge v7, v8, :cond_5

    .line 10789
    const/4 v7, 0x5

    .line 10792
    :cond_5
    const-string v8, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Killing processes "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " at adjustment "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v7}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v8, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 10793
    const/4 v1, 0x0

    :goto_2
    array-length v8, p1

    if-ge v1, v8, :cond_8

    .line 10794
    iget-object v8, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    aget v10, p1, v1

    invoke-virtual {v8, v10}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .line 10795
    .restart local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_7

    .line 10793
    :cond_6
    :goto_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 10798
    :cond_7
    iget v0, v3, Lcom/android/server/am/ProcessRecord;->setAdj:I

    .line 10799
    .local v0, "adj":I
    if-lt v0, v7, :cond_6

    iget-boolean v8, v3, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v8, :cond_6

    .line 10800
    const/4 v8, 0x1

    invoke-virtual {v3, v4, v8}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 10801
    const/4 v2, 0x1

    goto :goto_3

    .line 10804
    .end local v0    # "adj":I
    .end local v3    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_8
    monitor-exit v9

    .line 10805
    return v2

    .line 10804
    .end local v1    # "i":I
    .end local v6    # "types":[I
    .end local v7    # "worstType":I
    :catchall_0
    move-exception v8

    monitor-exit v9
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v8
.end method

.method public killProcessesBelowForeground(Ljava/lang/String;)Z
    .locals 2
    .param p1, "reason"    # Ljava/lang/String;

    .prologue
    .line 10822
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 10823
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "killProcessesBelowForeground() only available to system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10826
    :cond_0
    const/4 v0, 0x0

    invoke-direct {p0, v0, p1}, Lcom/android/server/am/ActivityManagerService;->killProcessesBelowAdj(ILjava/lang/String;)Z

    move-result v0

    return v0
.end method

.method public killUid(ILjava/lang/String;)V
    .locals 10
    .param p1, "uid"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    .line 10810
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    const/16 v1, 0x3e8

    if-eq v0, v1, :cond_0

    .line 10811
    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "killUid only available to the system"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 10813
    :cond_0
    monitor-enter p0

    .line 10814
    const/4 v1, 0x0

    :try_start_0
    invoke-static {p1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v2

    invoke-static {p1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v3

    const/4 v4, -0x1

    const/4 v5, 0x0

    const/4 v6, 0x1

    const/4 v7, 0x1

    const/4 v8, 0x0

    if-eqz p2, :cond_1

    move-object v9, p2

    :goto_0
    move-object v0, p0

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->killPackageProcessesLocked(Ljava/lang/String;IIIZZZZLjava/lang/String;)Z

    .line 10817
    monitor-exit p0

    .line 10818
    return-void

    .line 10814
    :cond_1
    const-string v9, "kill uid"

    goto :goto_0

    .line 10817
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public launchAssistIntent(Landroid/content/Intent;ILjava/lang/String;I)Z
    .locals 1
    .param p1, "intent"    # Landroid/content/Intent;
    .param p2, "requestType"    # I
    .param p3, "hint"    # Ljava/lang/String;
    .param p4, "userHandle"    # I

    .prologue
    .line 10540
    invoke-direct {p0, p2, p1, p3, p4}, Lcom/android/server/am/ActivityManagerService;->enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;I)Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    move-result-object v0

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    :goto_0
    return v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method final logAppTooSlow(Lcom/android/server/am/ProcessRecord;JLjava/lang/String;)V
    .locals 0
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "startTime"    # J
    .param p4, "msg"    # Ljava/lang/String;

    .prologue
    .line 4857
    return-void
.end method

.method logLockScreen(Ljava/lang/String;)V
    .locals 0
    .param p1, "msg"    # Ljava/lang/String;

    .prologue
    .line 10136
    return-void
.end method

.method matchesProvider(Landroid/net/Uri;Landroid/content/pm/ProviderInfo;)Z
    .locals 7
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "cpi"    # Landroid/content/pm/ProviderInfo;

    .prologue
    .line 9073
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v4

    .line 9074
    .local v4, "uriAuth":Ljava/lang/String;
    iget-object v0, p2, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    .line 9075
    .local v0, "cpiAuth":Ljava/lang/String;
    const/16 v5, 0x3b

    invoke-virtual {v0, v5}, Ljava/lang/String;->indexOf(I)I

    move-result v5

    const/4 v6, -0x1

    if-ne v5, v6, :cond_0

    .line 9076
    invoke-virtual {v0, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    .line 9083
    :goto_0
    return v5

    .line 9078
    :cond_0
    const-string v5, ";"

    invoke-virtual {v0, v5}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v1

    .line 9079
    .local v1, "cpiAuths":[Ljava/lang/String;
    array-length v3, v1

    .line 9080
    .local v3, "length":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v3, :cond_2

    .line 9081
    aget-object v5, v1, v2

    invoke-virtual {v5, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_1

    const/4 v5, 0x1

    goto :goto_0

    .line 9080
    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .line 9083
    :cond_2
    const/4 v5, 0x0

    goto :goto_0
.end method

.method public monitor()V
    .locals 1

    .prologue
    .line 18780
    monitor-enter p0

    :try_start_0
    monitor-exit p0

    .line 18781
    return-void

    .line 18780
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public moveActivityTaskToBack(Landroid/os/IBinder;Z)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "nonRoot"    # Z

    .prologue
    const/4 v3, 0x0

    .line 8593
    const-string v4, "moveActivityTaskToBack"

    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 8594
    monitor-enter p0

    .line 8595
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    .line 8597
    .local v0, "origId":J
    if-nez p2, :cond_0

    const/4 v4, 0x1

    :goto_0
    :try_start_1
    invoke-static {p1, v4}, Lcom/android/server/am/ActivityRecord;->getTaskForActivityLocked(Landroid/os/IBinder;Z)I

    move-result v2

    .line 8598
    .local v2, "taskId":I
    if-ltz v2, :cond_2

    .line 8599
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v4, v4, Lcom/android/server/am/ActivityStackSupervisor;->mLockTaskModeTask:Lcom/android/server/am/TaskRecord;

    if-eqz v4, :cond_1

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v4, v4, Lcom/android/server/am/ActivityStackSupervisor;->mLockTaskModeTask:Lcom/android/server/am/TaskRecord;

    iget v4, v4, Lcom/android/server/am/TaskRecord;->taskId:I

    if-ne v4, v2, :cond_1

    .line 8601
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    .line 8607
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 8610
    :goto_1
    return v3

    .end local v2    # "taskId":I
    :cond_0
    move v4, v3

    .line 8597
    goto :goto_0

    .line 8604
    .restart local v2    # "taskId":I
    :cond_1
    :try_start_3
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v3

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityStack;->moveTaskToBackLocked(I)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-result v3

    .line 8607
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_1

    .line 8609
    .end local v0    # "origId":J
    .end local v2    # "taskId":I
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v3

    .line 8607
    .restart local v0    # "origId":J
    .restart local v2    # "taskId":I
    :cond_2
    :try_start_5
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8609
    monitor-exit p0

    goto :goto_1

    .line 8607
    .end local v2    # "taskId":I
    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0
.end method

.method public moveTaskBackwards(I)V
    .locals 8
    .param p1, "task"    # I

    .prologue
    .line 8615
    const-string v0, "android.permission.REORDER_TASKS"

    const-string v1, "moveTaskBackwards()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8618
    monitor-enter p0

    .line 8619
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v3, -0x1

    const/4 v4, -0x1

    const-string v5, "Task backwards"

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 8621
    monitor-exit p0

    .line 8627
    :goto_0
    return-void

    .line 8623
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 8624
    .local v6, "origId":J
    invoke-direct {p0, p1}, Lcom/android/server/am/ActivityManagerService;->moveTaskBackwardsLocked(I)V

    .line 8625
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8626
    monitor-exit p0

    goto :goto_0

    .end local v6    # "origId":J
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public moveTaskToBack(I)V
    .locals 10
    .param p1, "taskId"    # I

    .prologue
    .line 8554
    const-string v0, "android.permission.REORDER_TASKS"

    const-string v1, "moveTaskToBack()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8557
    monitor-enter p0

    .line 8558
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v9

    .line 8559
    .local v9, "tr":Lcom/android/server/am/TaskRecord;
    if-eqz v9, :cond_2

    .line 8560
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v0, v0, Lcom/android/server/am/ActivityStackSupervisor;->mLockTaskModeTask:Lcom/android/server/am/TaskRecord;

    if-ne v9, v0, :cond_0

    .line 8561
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V

    .line 8562
    monitor-exit p0

    .line 8580
    :goto_0
    return-void

    .line 8565
    :cond_0
    iget-object v8, v9, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    .line 8566
    .local v8, "stack":Lcom/android/server/am/ActivityStack;
    iget-object v0, v8, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v0, :cond_1

    iget-object v0, v8, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-ne v0, v9, :cond_1

    .line 8567
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v3, -0x1

    const/4 v4, -0x1

    const-string v5, "Task to back"

    move-object v0, p0

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 8569
    monitor-exit p0

    goto :goto_0

    .line 8579
    .end local v8    # "stack":Lcom/android/server/am/ActivityStack;
    .end local v9    # "tr":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 8572
    .restart local v8    # "stack":Lcom/android/server/am/ActivityStack;
    .restart local v9    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result-wide v6

    .line 8574
    .local v6, "origId":J
    :try_start_2
    invoke-virtual {v8, p1}, Lcom/android/server/am/ActivityStack;->moveTaskToBackLocked(I)Z
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 8576
    :try_start_3
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8579
    .end local v6    # "origId":J
    .end local v8    # "stack":Lcom/android/server/am/ActivityStack;
    :cond_2
    monitor-exit p0

    goto :goto_0

    .line 8576
    .restart local v6    # "origId":J
    .restart local v8    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_1
    move-exception v0

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0
.end method

.method public moveTaskToFront(IILandroid/os/Bundle;)V
    .locals 2
    .param p1, "taskId"    # I
    .param p2, "flags"    # I
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    .line 8514
    const-string v0, "android.permission.REORDER_TASKS"

    const-string v1, "moveTaskToFront()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8518
    monitor-enter p0

    .line 8519
    :try_start_0
    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->moveTaskToFrontLocked(IILandroid/os/Bundle;)V

    .line 8520
    monitor-exit p0

    .line 8521
    return-void

    .line 8520
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method moveTaskToFrontLocked(IILandroid/os/Bundle;)V
    .locals 10
    .param p1, "taskId"    # I
    .param p2, "flags"    # I
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    const/4 v3, -0x1

    .line 8524
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const-string v5, "Task to front"

    move-object v0, p0

    move v4, v3

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->checkAppSwitchAllowedLocked(IIIILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    .line 8526
    invoke-static {p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    .line 8550
    :goto_0
    return-void

    .line 8529
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v6

    .line 8531
    .local v6, "origId":J
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v9

    .line 8532
    .local v9, "task":Lcom/android/server/am/TaskRecord;
    if-nez v9, :cond_1

    .line 8533
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Could not find task for id: "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 8547
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 8536
    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityStackSupervisor;->isLockTaskModeViolation(Lcom/android/server/am/TaskRecord;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 8537
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->showLockTaskToast()V

    .line 8538
    const-string v0, "ActivityManager"

    const-string v1, "moveTaskToFront: Attempt to violate Lock Task Mode"

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8547
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .line 8541
    :cond_2
    :try_start_2
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStackSupervisor;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v8

    .line 8542
    .local v8, "prev":Lcom/android/server/am/ActivityRecord;
    if-eqz v8, :cond_3

    invoke-virtual {v8}, Lcom/android/server/am/ActivityRecord;->isRecentsActivity()Z

    move-result v0

    if-eqz v0, :cond_3

    .line 8543
    const/4 v0, 0x2

    invoke-virtual {v9, v0}, Lcom/android/server/am/TaskRecord;->setTaskToReturnTo(I)V

    .line 8545
    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v1, "moveTaskToFront"

    invoke-virtual {v0, v9, p2, p3, v1}, Lcom/android/server/am/ActivityStackSupervisor;->findTaskToMoveToFrontLocked(Lcom/android/server/am/TaskRecord;ILandroid/os/Bundle;Ljava/lang/String;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 8547
    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8549
    invoke-static {p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    goto :goto_0

    .line 8547
    .end local v8    # "prev":Lcom/android/server/am/ActivityRecord;
    .end local v9    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v0

    invoke-static {v6, v7}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method public moveTaskToStack(IIZ)V
    .locals 6
    .param p1, "taskId"    # I
    .param p2, "stackId"    # I
    .param p3, "toTop"    # Z

    .prologue
    .line 8684
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v3, "moveTaskToStack()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 8686
    if-nez p2, :cond_0

    .line 8687
    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "moveTaskToStack: Attempt to move task "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " to home stack"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    new-instance v4, Ljava/lang/RuntimeException;

    const-string v5, "here"

    invoke-direct {v4, v5}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    invoke-virtual {v4}, Ljava/lang/RuntimeException;->fillInStackTrace()Ljava/lang/Throwable;

    move-result-object v4

    invoke-static {v2, v3, v4}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 8690
    :cond_0
    monitor-enter p0

    .line 8691
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .line 8695
    .local v0, "ident":J
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1, p2, p3}, Lcom/android/server/am/ActivityStackSupervisor;->moveTaskToStackLocked(IIZ)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 8697
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 8699
    monitor-exit p0

    .line 8700
    return-void

    .line 8697
    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 8699
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method moveUserToForeground(Lcom/android/server/am/UserStartedState;II)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    .line 19156
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->switchUserLocked(ILcom/android/server/am/UserStartedState;)Z

    move-result v0

    .line 19157
    .local v0, "homeInFront":Z
    if-eqz v0, :cond_0

    .line 19158
    const-string v1, "moveUserToFroreground"

    invoke-virtual {p0, p3, v1}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;)Z

    .line 19162
    :goto_0
    invoke-static {p3}, Lcom/android/server/am/EventLogTags;->writeAmSwitchUser(I)V

    .line 19163
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v1

    invoke-virtual {v1, p3}, Lcom/android/server/pm/UserManagerService;->userForeground(I)V

    .line 19164
    invoke-virtual {p0, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendUserSwitchBroadcastsLocked(II)V

    .line 19165
    return-void

    .line 19160
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    goto :goto_0
.end method

.method public navigateUpTo(Landroid/os/IBinder;Landroid/content/Intent;ILandroid/content/Intent;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "destIntent"    # Landroid/content/Intent;
    .param p3, "resultCode"    # I
    .param p4, "resultData"    # Landroid/content/Intent;

    .prologue
    .line 16834
    monitor-enter p0

    .line 16835
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .line 16836
    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    .line 16837
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActivityStack;->navigateUpToLocked(Landroid/os/IBinder;Landroid/content/Intent;ILandroid/content/Intent;)Z

    move-result v1

    monitor-exit p0

    .line 16839
    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    goto :goto_0

    .line 16840
    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method final newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;
    .locals 9
    .param p1, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "customProcess"    # Ljava/lang/String;
    .param p3, "isolated"    # Z
    .param p4, "isolatedUid"    # I

    .prologue
    const v8, 0x182b8

    .line 9876
    if-eqz p2, :cond_4

    move-object v0, p2

    .line 9877
    .local v0, "proc":Ljava/lang/String;
    :goto_0
    const/4 v1, 0x0

    .line 9878
    .local v1, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v2

    .line 9879
    .local v2, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    iget v4, p1, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 9880
    .local v4, "uid":I
    if-eqz p3, :cond_3

    .line 9881
    if-nez p4, :cond_6

    .line 9882
    invoke-static {v4}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v5

    .line 9883
    .local v5, "userId":I
    const/16 v3, 0x3e8

    .line 9885
    .local v3, "stepsLeft":I
    :cond_0
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    if-lt v6, v8, :cond_1

    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    const v7, 0x1869f

    if-le v6, v7, :cond_2

    .line 9887
    :cond_1
    iput v8, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 9889
    :cond_2
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    invoke-static {v5, v6}, Landroid/os/UserHandle;->getUid(II)I

    move-result v4

    .line 9890
    iget v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    add-int/lit8 v6, v6, 0x1

    iput v6, p0, Lcom/android/server/am/ActivityManagerService;->mNextIsolatedProcessUid:I

    .line 9891
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    invoke-virtual {v6, v4}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v6

    if-gez v6, :cond_5

    .line 9906
    .end local v3    # "stepsLeft":I
    .end local v5    # "userId":I
    :cond_3
    :goto_1
    new-instance v6, Lcom/android/server/am/ProcessRecord;

    invoke-direct {v6, v2, p1, v0, v4}, Lcom/android/server/am/ProcessRecord;-><init>(Lcom/android/internal/os/BatteryStatsImpl;Landroid/content/pm/ApplicationInfo;Ljava/lang/String;I)V

    :goto_2
    return-object v6

    .line 9876
    .end local v0    # "proc":Ljava/lang/String;
    .end local v1    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v2    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v4    # "uid":I
    :cond_4
    iget-object v0, p1, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    goto :goto_0

    .line 9895
    .restart local v0    # "proc":Ljava/lang/String;
    .restart local v1    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .restart local v2    # "stats":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local v3    # "stepsLeft":I
    .restart local v4    # "uid":I
    .restart local v5    # "userId":I
    :cond_5
    add-int/lit8 v3, v3, -0x1

    .line 9896
    if-gtz v3, :cond_0

    .line 9897
    const/4 v6, 0x0

    goto :goto_2

    .line 9903
    .end local v3    # "stepsLeft":I
    .end local v5    # "userId":I
    :cond_6
    move v4, p4

    goto :goto_1
.end method

.method public newUriPermissionOwner(Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2
    .param p1, "name"    # Ljava/lang/String;

    .prologue
    .line 7639
    const-string v1, "newUriPermissionOwner"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7640
    monitor-enter p0

    .line 7641
    :try_start_0
    new-instance v0, Lcom/android/server/am/UriPermissionOwner;

    invoke-direct {v0, p0, p1}, Lcom/android/server/am/UriPermissionOwner;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/lang/Object;)V

    .line 7642
    .local v0, "owner":Lcom/android/server/am/UriPermissionOwner;
    invoke-virtual {v0}, Lcom/android/server/am/UriPermissionOwner;->getExternalTokenLocked()Landroid/os/Binder;

    move-result-object v1

    monitor-exit p0

    return-object v1

    .line 7643
    .end local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public noteWakeupAlarm(Landroid/content/IIntentSender;ILjava/lang/String;)V
    .locals 7
    .param p1, "sender"    # Landroid/content/IIntentSender;
    .param p2, "sourceUid"    # I
    .param p3, "sourcePkg"    # Ljava/lang/String;

    .prologue
    .line 10738
    instance-of v6, p1, Lcom/android/server/am/PendingIntentRecord;

    if-nez v6, :cond_0

    .line 10754
    .end local p2    # "sourceUid":I
    .end local p3    # "sourcePkg":Ljava/lang/String;
    :goto_0
    return-void

    .line 10741
    .restart local p2    # "sourceUid":I
    .restart local p3    # "sourcePkg":Ljava/lang/String;
    :cond_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v4

    .line 10742
    .local v4, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v4

    .line 10743
    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->isOnBattery()Z

    move-result v6

    if-eqz v6, :cond_1

    .line 10744
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v6}, Lcom/android/server/am/BatteryStatsService;->enforceCallingPermission()V

    .line 10745
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/PendingIntentRecord;

    move-object v3, v0

    .line 10746
    .local v3, "rec":Lcom/android/server/am/PendingIntentRecord;
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v1

    .line 10747
    .local v1, "MY_UID":I
    iget v6, v3, Lcom/android/server/am/PendingIntentRecord;->uid:I

    if-ne v6, v1, :cond_2

    const/16 v5, 0x3e8

    .line 10748
    .local v5, "uid":I
    :goto_1
    if-ltz p2, :cond_3

    .end local p2    # "sourceUid":I
    :goto_2
    if-eqz p3, :cond_4

    .end local p3    # "sourcePkg":Ljava/lang/String;
    :goto_3
    invoke-virtual {v4, p2, p3}, Lcom/android/internal/os/BatteryStatsImpl;->getPackageStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;

    move-result-object v2

    .line 10751
    .local v2, "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    invoke-virtual {v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;->incWakeupsLocked()V

    .line 10753
    .end local v1    # "MY_UID":I
    .end local v2    # "pkg":Lcom/android/internal/os/BatteryStatsImpl$Uid$Pkg;
    .end local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .end local v5    # "uid":I
    :cond_1
    monitor-exit v4

    goto :goto_0

    :catchall_0
    move-exception v6

    monitor-exit v4
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v6

    .line 10747
    .restart local v1    # "MY_UID":I
    .restart local v3    # "rec":Lcom/android/server/am/PendingIntentRecord;
    .restart local p2    # "sourceUid":I
    .restart local p3    # "sourcePkg":Ljava/lang/String;
    :cond_2
    :try_start_1
    iget v5, v3, Lcom/android/server/am/PendingIntentRecord;->uid:I

    goto :goto_1

    .restart local v5    # "uid":I
    :cond_3
    move p2, v5

    .line 10748
    goto :goto_2

    .end local p2    # "sourceUid":I
    :cond_4
    iget-object v6, v3, Lcom/android/server/am/PendingIntentRecord;->key:Lcom/android/server/am/PendingIntentRecord$Key;

    iget-object p3, v6, Lcom/android/server/am/PendingIntentRecord$Key;->packageName:Ljava/lang/String;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_3
.end method

.method public notifyActivityDrawn(Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 2414
    monitor-enter p0

    .line 2415
    :try_start_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->isInAnyStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .line 2416
    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    .line 2417
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityStack;->notifyActivityDrawnLocked(Lcom/android/server/am/ActivityRecord;)V

    .line 2419
    :cond_0
    monitor-exit p0

    .line 2420
    return-void

    .line 2419
    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public final notifyEnterAnimationComplete(Landroid/os/IBinder;)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6379
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x2c

    invoke-virtual {v1, v2, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(ILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6380
    return-void
.end method

.method public final notifyLaunchTaskBehindComplete(Landroid/os/IBinder;)V
    .locals 1
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 6374
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleLaunchTaskBehindComplete(Landroid/os/IBinder;)V

    .line 6375
    return-void
.end method

.method notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V
    .locals 1
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;
    .param p2, "flush"    # Z

    .prologue
    .line 10064
    if-eqz p1, :cond_0

    iget-object v0, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v0, :cond_0

    iget-object v0, p1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v0}, Lcom/android/server/am/ActivityStack;->isHomeStack()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 10069
    :goto_0
    return-void

    .line 10068
    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/TaskPersister;->wakeup(Lcom/android/server/am/TaskRecord;Z)V

    goto :goto_0
.end method

.method notifyTaskStackChangedLocked()V
    .locals 4

    .prologue
    const/16 v2, 0x31

    .line 10073
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 10074
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .line 10075
    .local v0, "nmsg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v2, 0x3e8

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    .line 10076
    return-void
.end method

.method onCoreSettingsChange(Landroid/os/Bundle;)V
    .locals 3
    .param p1, "settings"    # Landroid/os/Bundle;

    .prologue
    .line 18784
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_1

    .line 18785
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 18787
    .local v1, "processRecord":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_0

    .line 18788
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2, p1}, Landroid/app/IApplicationThread;->setCoreSettings(Landroid/os/Bundle;)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0

    .line 18784
    :cond_0
    :goto_1
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .line 18794
    .end local v1    # "processRecord":Lcom/android/server/am/ProcessRecord;
    :cond_1
    return-void

    .line 18790
    .restart local v1    # "processRecord":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v2

    goto :goto_1
.end method

.method public onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    .locals 16
    .param p1, "code"    # I
    .param p2, "data"    # Landroid/os/Parcel;
    .param p3, "reply"    # Landroid/os/Parcel;
    .param p4, "flags"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 2180
    const v12, 0x5f535052

    move/from16 v0, p1

    if-ne v0, v12, :cond_3

    .line 2182
    new-instance v11, Ljava/util/ArrayList;

    invoke-direct {v11}, Ljava/util/ArrayList;-><init>()V

    .line 2183
    .local v11, "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    monitor-enter p0

    .line 2184
    :try_start_0
    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v12}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v12

    invoke-virtual {v12}, Landroid/util/ArrayMap;->size()I

    move-result v3

    .line 2185
    .local v3, "NP":I
    const/4 v10, 0x0

    .local v10, "ip":I
    :goto_0
    if-ge v10, v3, :cond_2

    .line 2186
    move-object/from16 v0, p0

    iget-object v12, v0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    invoke-virtual {v12}, Lcom/android/internal/app/ProcessMap;->getMap()Landroid/util/ArrayMap;

    move-result-object v12

    invoke-virtual {v12, v10}, Landroid/util/ArrayMap;->valueAt(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/util/SparseArray;

    .line 2187
    .local v5, "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    invoke-virtual {v5}, Landroid/util/SparseArray;->size()I

    move-result v2

    .line 2188
    .local v2, "NA":I
    const/4 v9, 0x0

    .local v9, "ia":I
    :goto_1
    if-ge v9, v2, :cond_1

    .line 2189
    invoke-virtual {v5, v9}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .line 2190
    .local v4, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v12, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v12, :cond_0

    .line 2191
    iget-object v12, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v12}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v12

    invoke-virtual {v11, v12}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2188
    :cond_0
    add-int/lit8 v9, v9, 0x1

    goto :goto_1

    .line 2185
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    add-int/lit8 v10, v10, 0x1

    goto :goto_0

    .line 2195
    .end local v2    # "NA":I
    .end local v5    # "apps":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessRecord;>;"
    .end local v9    # "ia":I
    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 2197
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 2198
    .local v1, "N":I
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_2
    if-ge v8, v1, :cond_3

    .line 2199
    invoke-static {}, Landroid/os/Parcel;->obtain()Landroid/os/Parcel;

    move-result-object v6

    .line 2201
    .local v6, "data2":Landroid/os/Parcel;
    :try_start_1
    invoke-virtual {v11, v8}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/os/IBinder;

    const v13, 0x5f535052

    const/4 v14, 0x0

    const/4 v15, 0x0

    invoke-interface {v12, v13, v6, v14, v15}, Landroid/os/IBinder;->transact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_1

    .line 2204
    :goto_3
    invoke-virtual {v6}, Landroid/os/Parcel;->recycle()V

    .line 2198
    add-int/lit8 v8, v8, 0x1

    goto :goto_2

    .line 2195
    .end local v1    # "N":I
    .end local v3    # "NP":I
    .end local v6    # "data2":Landroid/os/Parcel;
    .end local v8    # "i":I
    .end local v10    # "ip":I
    :catchall_0
    move-exception v12

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v12

    .line 2208
    .end local v11    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    :cond_3
    :try_start_3
    invoke-super/range {p0 .. p4}, Landroid/app/ActivityManagerNative;->onTransact(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z
    :try_end_3
    .catch Ljava/lang/RuntimeException; {:try_start_3 .. :try_end_3} :catch_0

    move-result v12

    return v12

    .line 2209
    :catch_0
    move-exception v7

    .line 2212
    .local v7, "e":Ljava/lang/RuntimeException;
    instance-of v12, v7, Ljava/lang/SecurityException;

    if-nez v12, :cond_4

    .line 2213
    const-string v12, "ActivityManager"

    const-string v13, "Activity Manager Crash"

    invoke-static {v12, v13, v7}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    .line 2215
    :cond_4
    throw v7

    .line 2202
    .end local v7    # "e":Ljava/lang/RuntimeException;
    .restart local v1    # "N":I
    .restart local v3    # "NP":I
    .restart local v6    # "data2":Landroid/os/Parcel;
    .restart local v8    # "i":I
    .restart local v10    # "ip":I
    .restart local v11    # "procs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/os/IBinder;>;"
    :catch_1
    move-exception v12

    goto :goto_3
.end method

.method onUserInitialized(Lcom/android/server/am/UserStartedState;ZII)V
    .locals 2
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;
    .param p2, "foreground"    # Z
    .param p3, "oldUserId"    # I
    .param p4, "newUserId"    # I

    .prologue
    .line 19146
    monitor-enter p0

    .line 19147
    if-eqz p2, :cond_0

    .line 19148
    :try_start_0
    invoke-virtual {p0, p1, p3, p4}, Lcom/android/server/am/ActivityManagerService;->moveUserToForeground(Lcom/android/server/am/UserStartedState;II)V

    .line 19150
    :cond_0
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 19152
    const/4 v0, 0x1

    const/4 v1, 0x0

    invoke-virtual {p0, p1, p4, v0, v1}, Lcom/android/server/am/ActivityManagerService;->completeSwitchAndInitalize(Lcom/android/server/am/UserStartedState;IZZ)V

    .line 19153
    return-void

    .line 19150
    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method onWakefulnessChanged(I)V
    .locals 1
    .param p1, "wakefulness"    # I

    .prologue
    .line 10011
    monitor-enter p0

    .line 10012
    :try_start_0
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mWakefulness:I

    .line 10013
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    .line 10014
    monitor-exit p0

    .line 10015
    return-void

    .line 10014
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public openContentUri(Landroid/net/Uri;)Landroid/os/ParcelFileDescriptor;
    .locals 11
    .param p1, "uri"    # Landroid/net/Uri;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const/4 v10, 0x0

    .line 9967
    const-string v0, "openContentUri"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9968
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v9

    .line 9969
    .local v9, "userId":I
    invoke-virtual {p1}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v7

    .line 9970
    .local v7, "name":Ljava/lang/String;
    invoke-direct {p0, v7, v10, v9}, Lcom/android/server/am/ActivityManagerService;->getContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)Landroid/app/IActivityManager$ContentProviderHolder;

    move-result-object v6

    .line 9971
    .local v6, "cph":Landroid/app/IActivityManager$ContentProviderHolder;
    const/4 v8, 0x0

    .line 9972
    .local v8, "pfd":Landroid/os/ParcelFileDescriptor;
    if-eqz v6, :cond_0

    .line 9980
    new-instance v5, Landroid/os/Binder;

    invoke-direct {v5}, Landroid/os/Binder;-><init>()V

    .line 9981
    .local v5, "token":Landroid/os/Binder;
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$Identity;

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    invoke-direct {v1, p0, v5, v2, v3}, Lcom/android/server/am/ActivityManagerService$Identity;-><init>(Lcom/android/server/am/ActivityManagerService;Landroid/os/IBinder;II)V

    invoke-virtual {v0, v1}, Ljava/lang/ThreadLocal;->set(Ljava/lang/Object;)V

    .line 9984
    :try_start_0
    iget-object v0, v6, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    const/4 v1, 0x0

    const-string v3, "r"

    const/4 v4, 0x0

    move-object v2, p1

    invoke-interface/range {v0 .. v5}, Landroid/content/IContentProvider;->openFile(Ljava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/ICancellationSignal;Landroid/os/IBinder;)Landroid/os/ParcelFileDescriptor;
    :try_end_0
    .catch Ljava/io/FileNotFoundException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v8

    .line 9989
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->remove()V

    .line 9993
    :goto_0
    invoke-direct {p0, v7, v10, v9}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V

    .line 9997
    .end local v5    # "token":Landroid/os/Binder;
    :goto_1
    return-object v8

    .line 9985
    .restart local v5    # "token":Landroid/os/Binder;
    :catch_0
    move-exception v0

    .line 9989
    sget-object v0, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v0}, Ljava/lang/ThreadLocal;->remove()V

    goto :goto_0

    :catchall_0
    move-exception v0

    sget-object v1, Lcom/android/server/am/ActivityManagerService;->sCallerIdentity:Ljava/lang/ThreadLocal;

    invoke-virtual {v1}, Ljava/lang/ThreadLocal;->remove()V

    throw v0

    .line 9995
    .end local v5    # "token":Landroid/os/Binder;
    :cond_0
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Failed to get provider for authority \'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "\'"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_1
.end method

.method public overridePendingTransition(Landroid/os/IBinder;Ljava/lang/String;II)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "packageName"    # Ljava/lang/String;
    .param p3, "enterAnim"    # I
    .param p4, "exitAnim"    # I

    .prologue
    .line 4531
    monitor-enter p0

    .line 4532
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 4533
    .local v2, "self":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_0

    .line 4534
    monitor-exit p0

    .line 4547
    :goto_0
    return-void

    .line 4537
    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 4539
    .local v0, "origId":J
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v4, Lcom/android/server/am/ActivityStack$ActivityState;->RESUMED:Lcom/android/server/am/ActivityStack$ActivityState;

    if-eq v3, v4, :cond_1

    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->state:Lcom/android/server/am/ActivityStack$ActivityState;

    sget-object v4, Lcom/android/server/am/ActivityStack$ActivityState;->PAUSING:Lcom/android/server/am/ActivityStack$ActivityState;

    if-ne v3, v4, :cond_2

    .line 4541
    :cond_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/4 v4, 0x0

    invoke-virtual {v3, p2, p3, p4, v4}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransition(Ljava/lang/String;IILandroid/os/IRemoteCallback;)V

    .line 4545
    :cond_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4546
    monitor-exit p0

    goto :goto_0

    .end local v0    # "origId":J
    .end local v2    # "self":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v3
.end method

.method public peekService(Landroid/content/Intent;Ljava/lang/String;)Landroid/os/IBinder;
    .locals 2
    .param p1, "service"    # Landroid/content/Intent;
    .param p2, "resolvedType"    # Ljava/lang/String;

    .prologue
    .line 15146
    const-string v0, "peekService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15148
    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 15149
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15151
    :cond_0
    monitor-enter p0

    .line 15152
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/ActiveServices;->peekServiceLocked(Landroid/content/Intent;Ljava/lang/String;)Landroid/os/IBinder;

    move-result-object v0

    monitor-exit p0

    return-object v0

    .line 15153
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method final performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 2
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 17660
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    iput-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    .line 17661
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v0, :cond_0

    .line 17662
    iget-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    if-eqz v0, :cond_1

    .line 17663
    const/4 v0, 0x0

    iput-boolean v0, p1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    .line 17664
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0}, Landroid/app/IApplicationThread;->scheduleLowMemory()V

    .line 17672
    :cond_0
    :goto_0
    return-void

    .line 17666
    :cond_1
    iget-object v0, p1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v0}, Landroid/app/IApplicationThread;->processInBackground()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    .line 17669
    :catch_0
    move-exception v0

    goto :goto_0
.end method

.method final performAppGcsIfAppropriateLocked()V
    .locals 1

    .prologue
    .line 17725
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 17726
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->performAppGcsLocked()V

    .line 17731
    :goto_0
    return-void

    .line 17730
    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    goto :goto_0
.end method

.method final performAppGcsLocked()V
    .locals 6

    .prologue
    .line 17693
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 17694
    .local v0, "N":I
    if-gtz v0, :cond_1

    .line 17719
    :cond_0
    :goto_0
    return-void

    .line 17697
    :cond_1
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->canGcNowLocked()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 17698
    :cond_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lez v2, :cond_5

    .line 17699
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    const/4 v3, 0x0

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .line 17700
    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    iget v2, v1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/4 v3, 0x2

    if-gt v2, v3, :cond_3

    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->reportLowMemory:Z

    if-eqz v2, :cond_2

    .line 17701
    :cond_3
    iget-wide v2, v1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    cmp-long v2, v2, v4

    if-gtz v2, :cond_4

    .line 17705
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->performAppGcLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 17706
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    goto :goto_0

    .line 17711
    :cond_4
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    .line 17717
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_5
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    goto :goto_0
.end method

.method public performIdleMaintenance()V
    .locals 18

    .prologue
    .line 10929
    const-string v2, "android.permission.SET_ACTIVITY_WATCHER"

    move-object/from16 v0, p0

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    .line 10931
    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10935
    :cond_0
    monitor-enter p0

    .line 10936
    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    .line 10937
    .local v6, "now":J
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    sub-long v14, v6, v2

    .line 10938
    .local v14, "timeSinceLastIdle":J
    move-object/from16 v0, p0

    invoke-direct {v0, v6, v7}, Lcom/android/server/am/ActivityManagerService;->getLowRamTimeSinceIdle(J)J

    move-result-wide v10

    .line 10939
    .local v10, "lowRamSinceLastIdle":J
    move-object/from16 v0, p0

    iput-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLastIdleTime:J

    .line 10940
    const-wide/16 v2, 0x0

    move-object/from16 v0, p0

    iput-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    .line 10941
    move-object/from16 v0, p0

    iget-wide v2, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-eqz v2, :cond_1

    .line 10942
    move-object/from16 v0, p0

    iput-wide v6, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    .line 10945
    :cond_1
    new-instance v13, Ljava/lang/StringBuilder;

    const/16 v2, 0x80

    invoke-direct {v13, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 10946
    .local v13, "sb":Ljava/lang/StringBuilder;
    const-string v2, "Idle maintenance over "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10947
    invoke-static {v14, v15, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 10948
    const-string v2, " low RAM for "

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10949
    invoke-static {v10, v11, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 10950
    const-string v2, "ActivityManager"

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    .line 10954
    const-wide/16 v2, 0x3

    div-long v2, v14, v2

    cmp-long v2, v10, v2

    if-lez v2, :cond_3

    const/4 v8, 0x1

    .line 10956
    .local v8, "doKilling":Z
    :goto_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v9, v2, -0x1

    .local v9, "i":I
    :goto_1
    if-ltz v9, :cond_5

    .line 10957
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lcom/android/server/am/ProcessRecord;

    .line 10958
    .local v12, "proc":Lcom/android/server/am/ProcessRecord;
    iget-boolean v2, v12, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    if-eqz v2, :cond_4

    .line 10959
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v3, 0x2

    if-le v2, v3, :cond_2

    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/4 v3, 0x7

    if-gt v2, v3, :cond_2

    .line 10961
    if-eqz v8, :cond_2

    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-eqz v2, :cond_2

    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v16, 0x3

    mul-long v4, v4, v16

    const-wide/16 v16, 0x2

    div-long v4, v4, v16

    cmp-long v2, v2, v4

    if-lez v2, :cond_2

    .line 10963
    new-instance v13, Ljava/lang/StringBuilder;

    .end local v13    # "sb":Ljava/lang/StringBuilder;
    const/16 v2, 0x80

    invoke-direct {v13, v2}, Ljava/lang/StringBuilder;-><init>(I)V

    .line 10964
    .restart local v13    # "sb":Ljava/lang/StringBuilder;
    const-string v2, "Kill"

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10965
    iget-object v2, v12, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10966
    const-string v2, " in idle maint: pss="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10967
    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    invoke-virtual {v13, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 10968
    const-string v2, ", initialPss="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10969
    iget-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    invoke-virtual {v13, v2, v3}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    .line 10970
    const-string v2, ", period="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10971
    invoke-static {v14, v15, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 10972
    const-string v2, ", lowRamPeriod="

    invoke-virtual {v13, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 10973
    invoke-static {v10, v11, v13}, Landroid/util/TimeUtils;->formatDuration(JLjava/lang/StringBuilder;)V

    .line 10974
    const-string v2, "ActivityManager"

    invoke-virtual {v13}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->wtfQuiet(Ljava/lang/String;Ljava/lang/String;)V

    .line 10975
    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "idle maint (pss "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->lastPss:J

    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, " from "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-wide v4, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    invoke-virtual {v2, v4, v5}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v3, ")"

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    const/4 v3, 0x1

    invoke-virtual {v12, v2, v3}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    .line 10956
    :cond_2
    :goto_2
    add-int/lit8 v9, v9, -0x1

    goto/16 :goto_1

    .line 10954
    .end local v8    # "doKilling":Z
    .end local v9    # "i":I
    .end local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_3
    const/4 v8, 0x0

    goto/16 :goto_0

    .line 10979
    .restart local v8    # "doKilling":Z
    .restart local v9    # "i":I
    .restart local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_4
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->setProcState:I

    const/16 v3, 0x9

    if-ge v2, v3, :cond_2

    .line 10980
    const/4 v2, 0x1

    iput-boolean v2, v12, Lcom/android/server/am/ProcessRecord;->notCachedSinceIdle:Z

    .line 10981
    const-wide/16 v2, 0x0

    iput-wide v2, v12, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 10982
    iget v2, v12, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v3, 0x1

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v5

    invoke-static/range {v2 .. v7}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v2

    iput-wide v2, v12, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    goto :goto_2

    .line 10989
    .end local v6    # "now":J
    .end local v8    # "doKilling":Z
    .end local v9    # "i":I
    .end local v10    # "lowRamSinceLastIdle":J
    .end local v12    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v13    # "sb":Ljava/lang/StringBuilder;
    .end local v14    # "timeSinceLastIdle":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .line 10987
    .restart local v6    # "now":J
    .restart local v8    # "doKilling":Z
    .restart local v9    # "i":I
    .restart local v10    # "lowRamSinceLastIdle":J
    .restart local v13    # "sb":Ljava/lang/StringBuilder;
    .restart local v14    # "timeSinceLastIdle":J
    :cond_5
    :try_start_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x27

    invoke-virtual {v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    .line 10988
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v3, 0x27

    const-wide/32 v4, 0x1d4c0

    invoke-virtual {v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendEmptyMessageDelayed(IJ)Z

    .line 10989
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 10990
    return-void
.end method

.method postFinishBooting(ZZ)V
    .locals 6
    .param p1, "finishBooting"    # Z
    .param p2, "enableScreen"    # Z

    .prologue
    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 6116
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0x2d

    if-eqz p1, :cond_0

    move v2, v0

    :goto_0
    if-eqz p2, :cond_1

    :goto_1
    invoke-virtual {v4, v5, v2, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(III)Landroid/os/Message;

    move-result-object v0

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .line 6118
    return-void

    :cond_0
    move v2, v1

    .line 6116
    goto :goto_0

    :cond_1
    move v0, v1

    goto :goto_1
.end method

.method printOomLevel(Ljava/io/PrintWriter;Ljava/lang/String;I)V
    .locals 4
    .param p1, "pw"    # Ljava/io/PrintWriter;
    .param p2, "name"    # Ljava/lang/String;
    .param p3, "adj"    # I

    .prologue
    const/16 v1, 0x20

    .line 13187
    const-string v0, "    "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13188
    if-ltz p3, :cond_1

    .line 13189
    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13190
    const/16 v0, 0xa

    if-ge p3, v0, :cond_0

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    .line 13194
    :cond_0
    :goto_0
    invoke-virtual {p1, p3}, Ljava/io/PrintWriter;->print(I)V

    .line 13195
    const-string v0, ": "

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13196
    invoke-virtual {p1, p2}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13197
    const-string v0, " ("

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->print(Ljava/lang/String;)V

    .line 13198
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    invoke-virtual {v0, p3}, Lcom/android/server/am/ProcessList;->getMemLevel(I)J

    move-result-wide v0

    const-wide/16 v2, 0x400

    div-long/2addr v0, v2

    invoke-virtual {p1, v0, v1}, Ljava/io/PrintWriter;->print(J)V

    .line 13199
    const-string v0, " kB)"

    invoke-virtual {p1, v0}, Ljava/io/PrintWriter;->println(Ljava/lang/String;)V

    .line 13200
    return-void

    .line 13192
    :cond_1
    const/16 v0, -0xa

    if-le p3, v0, :cond_0

    invoke-virtual {p1, v1}, Ljava/io/PrintWriter;->print(C)V

    goto :goto_0
.end method

.method public profileControl(Ljava/lang/String;IZLandroid/app/ProfilerInfo;I)Z
    .locals 6
    .param p1, "process"    # Ljava/lang/String;
    .param p2, "userId"    # I
    .param p3, "start"    # Z
    .param p4, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p5, "profileType"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 18639
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 18642
    :try_start_1
    const-string v3, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v3

    if-eqz v3, :cond_1

    .line 18644
    new-instance v3, Ljava/lang/SecurityException;

    const-string v4, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v3, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 18687
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v3
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 18688
    :catch_0
    move-exception v0

    .line 18689
    .local v0, "e":Landroid/os/RemoteException;
    :try_start_3
    new-instance v3, Ljava/lang/IllegalStateException;

    const-string v4, "Process disappeared"

    invoke-direct {v3, v4}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 18691
    .end local v0    # "e":Landroid/os/RemoteException;
    :catchall_1
    move-exception v3

    if-eqz p4, :cond_0

    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v4, :cond_0

    .line 18693
    :try_start_4
    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_3

    .line 18695
    :cond_0
    :goto_0
    throw v3

    .line 18648
    :cond_1
    if-eqz p3, :cond_3

    if-eqz p4, :cond_2

    :try_start_5
    iget-object v3, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-nez v3, :cond_3

    .line 18649
    :cond_2
    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "null profile info or fd"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 18652
    :cond_3
    const/4 v2, 0x0

    .line 18653
    .local v2, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz p1, :cond_4

    .line 18654
    const-string v3, "profileControl"

    invoke-direct {p0, p1, p2, v3}, Lcom/android/server/am/ActivityManagerService;->findProcessLocked(Ljava/lang/String;ILjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .line 18657
    :cond_4
    if-eqz p3, :cond_6

    if-eqz v2, :cond_5

    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v3, :cond_6

    .line 18658
    :cond_5
    new-instance v3, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    .line 18661
    :cond_6
    if-eqz p3, :cond_9

    .line 18662
    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-direct {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 18663
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v4, v2, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {p0, v3, v4, p4}, Lcom/android/server/am/ActivityManagerService;->setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V

    .line 18664
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileProc:Lcom/android/server/am/ProcessRecord;

    .line 18665
    iput p5, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    .line 18666
    iget-object v1, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 18668
    .local v1, "fd":Landroid/os/ParcelFileDescriptor;
    :try_start_6
    invoke-virtual {v1}, Landroid/os/ParcelFileDescriptor;->dup()Landroid/os/ParcelFileDescriptor;
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_1
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    move-result-object v1

    .line 18672
    :goto_1
    :try_start_7
    iput-object v1, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    .line 18673
    iget-object v3, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v3, p3, p4, p5}, Landroid/app/IApplicationThread;->profilerControl(ZLandroid/app/ProfilerInfo;I)V

    .line 18674
    const/4 v1, 0x0

    .line 18675
    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    .line 18686
    .end local v1    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_7
    :goto_2
    const/4 v3, 0x1

    monitor-exit p0
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_0

    .line 18691
    if-eqz p4, :cond_8

    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    if-eqz v4, :cond_8

    .line 18693
    :try_start_8
    iget-object v4, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v4}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_8
    .catch Ljava/io/IOException; {:try_start_8 .. :try_end_8} :catch_4

    .line 18695
    :cond_8
    :goto_3
    return v3

    .line 18669
    .restart local v1    # "fd":Landroid/os/ParcelFileDescriptor;
    :catch_1
    move-exception v0

    .line 18670
    .local v0, "e":Ljava/io/IOException;
    const/4 v1, 0x0

    goto :goto_1

    .line 18677
    .end local v0    # "e":Ljava/io/IOException;
    .end local v1    # "fd":Landroid/os/ParcelFileDescriptor;
    :cond_9
    :try_start_9
    invoke-direct {p0, v2, p5}, Lcom/android/server/am/ActivityManagerService;->stopProfilerLocked(Lcom/android/server/am/ProcessRecord;I)V

    .line 18678
    if-eqz p4, :cond_7

    iget-object v3, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_0

    if-eqz v3, :cond_7

    .line 18680
    :try_start_a
    iget-object v3, p4, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v3}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_2
    .catchall {:try_start_a .. :try_end_a} :catchall_0

    goto :goto_2

    .line 18681
    :catch_2
    move-exception v3

    goto :goto_2

    .line 18694
    .end local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_3
    move-exception v4

    goto/16 :goto_0

    .restart local v2    # "proc":Lcom/android/server/am/ProcessRecord;
    :catch_4
    move-exception v4

    goto :goto_3
.end method

.method public final publishContentProviders(Landroid/app/IApplicationThread;Ljava/util/List;)V
    .locals 16
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Landroid/app/IApplicationThread;",
            "Ljava/util/List",
            "<",
            "Landroid/app/IActivityManager$ContentProviderHolder;",
            ">;)V"
        }
    .end annotation

    .prologue
    .line 9599
    .local p2, "providers":Ljava/util/List;, "Ljava/util/List<Landroid/app/IActivityManager$ContentProviderHolder;>;"
    if-nez p2, :cond_0

    .line 9654
    :goto_0
    return-void

    .line 9603
    :cond_0
    const-string v13, "publishContentProviders"

    move-object/from16 v0, p0

    invoke-virtual {v0, v13}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9604
    monitor-enter p0

    .line 9605
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v9

    .line 9608
    .local v9, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v9, :cond_1

    .line 9609
    new-instance v13, Ljava/lang/SecurityException;

    new-instance v14, Ljava/lang/StringBuilder;

    invoke-direct {v14}, Ljava/lang/StringBuilder;-><init>()V

    const-string v15, "Unable to find app for caller "

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    move-object/from16 v0, p1

    invoke-virtual {v14, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v14

    const-string v15, " (pid="

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v15

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v14

    const-string v15, ") when publishing content providers"

    invoke-virtual {v14, v15}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v14

    invoke-virtual {v14}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v14

    invoke-direct {v13, v14}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v13

    .line 9653
    .end local v9    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v13

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v13

    .line 9615
    .restart local v9    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_1
    :try_start_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .line 9617
    .local v10, "origId":J
    invoke-interface/range {p2 .. p2}, Ljava/util/List;->size()I

    move-result v2

    .line 9618
    .local v2, "N":I
    const/4 v6, 0x0

    .local v6, "i":I
    :goto_1
    if-ge v6, v2, :cond_7

    .line 9619
    move-object/from16 v0, p2

    invoke-interface {v0, v6}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Landroid/app/IActivityManager$ContentProviderHolder;

    .line 9620
    .local v12, "src":Landroid/app/IActivityManager$ContentProviderHolder;
    if-eqz v12, :cond_2

    iget-object v13, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    if-eqz v13, :cond_2

    iget-object v13, v12, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    if-nez v13, :cond_3

    .line 9618
    :cond_2
    :goto_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    .line 9623
    :cond_3
    iget-object v13, v9, Lcom/android/server/am/ProcessRecord;->pubProviders:Landroid/util/ArrayMap;

    iget-object v14, v12, Landroid/app/IActivityManager$ContentProviderHolder;->info:Landroid/content/pm/ProviderInfo;

    iget-object v14, v14, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-virtual {v13, v14}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ContentProviderRecord;

    .line 9626
    .local v5, "dst":Lcom/android/server/am/ContentProviderRecord;
    if-eqz v5, :cond_2

    .line 9627
    new-instance v4, Landroid/content/ComponentName;

    iget-object v13, v5, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v13, v13, Landroid/content/pm/ProviderInfo;->packageName:Ljava/lang/String;

    iget-object v14, v5, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v14, v14, Landroid/content/pm/ProviderInfo;->name:Ljava/lang/String;

    invoke-direct {v4, v13, v14}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    .line 9628
    .local v4, "comp":Landroid/content/ComponentName;
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    invoke-virtual {v13, v4, v5}, Lcom/android/server/am/ProviderMap;->putProviderByClass(Landroid/content/ComponentName;Lcom/android/server/am/ContentProviderRecord;)V

    .line 9629
    iget-object v13, v5, Lcom/android/server/am/ContentProviderRecord;->info:Landroid/content/pm/ProviderInfo;

    iget-object v13, v13, Landroid/content/pm/ProviderInfo;->authority:Ljava/lang/String;

    const-string v14, ";"

    invoke-virtual {v13, v14}, Ljava/lang/String;->split(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v8

    .line 9630
    .local v8, "names":[Ljava/lang/String;
    const/4 v7, 0x0

    .local v7, "j":I
    :goto_3
    array-length v13, v8

    if-ge v7, v13, :cond_4

    .line 9631
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mProviderMap:Lcom/android/server/am/ProviderMap;

    aget-object v14, v8, v7

    invoke-virtual {v13, v14, v5}, Lcom/android/server/am/ProviderMap;->putProviderByName(Ljava/lang/String;Lcom/android/server/am/ContentProviderRecord;)V

    .line 9630
    add-int/lit8 v7, v7, 0x1

    goto :goto_3

    .line 9634
    :cond_4
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v13}, Ljava/util/ArrayList;->size()I

    move-result v3

    .line 9636
    .local v3, "NL":I
    const/4 v7, 0x0

    :goto_4
    if-ge v7, v3, :cond_6

    .line 9637
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v13, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v13

    if-ne v13, v5, :cond_5

    .line 9638
    move-object/from16 v0, p0

    iget-object v13, v0, Lcom/android/server/am/ActivityManagerService;->mLaunchingProviders:Ljava/util/ArrayList;

    invoke-virtual {v13, v7}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 9639
    add-int/lit8 v7, v7, -0x1

    .line 9640
    add-int/lit8 v3, v3, -0x1

    .line 9636
    :cond_5
    add-int/lit8 v7, v7, 0x1

    goto :goto_4

    .line 9643
    :cond_6
    monitor-enter v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9644
    :try_start_2
    iget-object v13, v12, Landroid/app/IActivityManager$ContentProviderHolder;->provider:Landroid/content/IContentProvider;

    iput-object v13, v5, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .line 9645
    iput-object v9, v5, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .line 9646
    invoke-virtual {v5}, Ljava/lang/Object;->notifyAll()V

    .line 9647
    monitor-exit v5
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    .line 9648
    :try_start_3
    move-object/from16 v0, p0

    invoke-virtual {v0, v9}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_2

    .line 9647
    :catchall_1
    move-exception v13

    :try_start_4
    monitor-exit v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :try_start_5
    throw v13

    .line 9652
    .end local v3    # "NL":I
    .end local v4    # "comp":Landroid/content/ComponentName;
    .end local v5    # "dst":Lcom/android/server/am/ContentProviderRecord;
    .end local v7    # "j":I
    .end local v8    # "names":[Ljava/lang/String;
    .end local v12    # "src":Landroid/app/IActivityManager$ContentProviderHolder;
    :cond_7
    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9653
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    goto/16 :goto_0
.end method

.method public publishService(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "service"    # Landroid/os/IBinder;

    .prologue
    .line 15346
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    .line 15347
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15350
    :cond_0
    monitor-enter p0

    .line 15351
    :try_start_0
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-nez v0, :cond_1

    .line 15352
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Invalid service token"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 15355
    .end local p1    # "token":Landroid/os/IBinder;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .line 15354
    .restart local p1    # "token":Landroid/os/IBinder;
    :cond_1
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->publishServiceLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Landroid/os/IBinder;)V

    .line 15355
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15356
    return-void
.end method

.method recentTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;
    .locals 4
    .param p1, "id"    # I

    .prologue
    .line 8222
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v0

    .line 8223
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_1

    .line 8224
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v3, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/TaskRecord;

    .line 8225
    .local v2, "tr":Lcom/android/server/am/TaskRecord;
    iget v3, v2, Lcom/android/server/am/TaskRecord;->taskId:I

    if-ne v3, p1, :cond_0

    .line 8229
    .end local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :goto_1
    return-object v2

    .line 8223
    .restart local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 8229
    .end local v2    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_1
    const/4 v2, 0x0

    goto :goto_1
.end method

.method recordPssSample(Lcom/android/server/am/ProcessRecord;IJJJ)V
    .locals 11
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "procState"    # I
    .param p3, "pss"    # J
    .param p5, "uss"    # J
    .param p7, "now"    # J

    .prologue
    .line 17588
    move-wide/from16 v0, p7

    iput-wide v0, p1, Lcom/android/server/am/ProcessRecord;->lastPssTime:J

    .line 17589
    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->baseProcessTracker:Lcom/android/internal/app/ProcessStats$ProcessState;

    const/4 v8, 0x1

    iget-object v9, p1, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-wide v4, p3

    move-wide/from16 v6, p5

    invoke-virtual/range {v3 .. v9}, Lcom/android/internal/app/ProcessStats$ProcessState;->addPss(JJZLandroid/util/ArrayMap;)V

    .line 17593
    iget-wide v2, p1, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    const-wide/16 v4, 0x0

    cmp-long v2, v2, v4

    if-nez v2, :cond_0

    .line 17594
    iput-wide p3, p1, Lcom/android/server/am/ProcessRecord;->initialIdlePss:J

    .line 17596
    :cond_0
    iput-wide p3, p1, Lcom/android/server/am/ProcessRecord;->lastPss:J

    .line 17597
    const/16 v2, 0x9

    if-lt p2, v2, :cond_1

    .line 17598
    iput-wide p3, p1, Lcom/android/server/am/ProcessRecord;->lastCachedPss:J

    .line 17600
    :cond_1
    return-void
.end method

.method public refContentProvider(Landroid/os/IBinder;II)Z
    .locals 7
    .param p1, "connection"    # Landroid/os/IBinder;
    .param p2, "stable"    # I
    .param p3, "unstable"    # I

    .prologue
    .line 9659
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v1, v0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .line 9666
    .local v1, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v1, :cond_0

    .line 9667
    new-instance v4, Ljava/lang/NullPointerException;

    const-string v5, "connection is null"

    invoke-direct {v4, v5}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 9660
    .end local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v2

    .line 9661
    .local v2, "e":Ljava/lang/ClassCastException;
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "refContentProvider: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " not a ContentProviderConnection"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 9663
    .local v3, "msg":Ljava/lang/String;
    const-string v4, "ActivityManager"

    invoke-static {v4, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9664
    new-instance v4, Ljava/lang/IllegalArgumentException;

    invoke-direct {v4, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 9670
    .end local v2    # "e":Ljava/lang/ClassCastException;
    .end local v3    # "msg":Ljava/lang/String;
    .restart local v1    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    monitor-enter p0

    .line 9671
    if-lez p2, :cond_1

    .line 9672
    :try_start_1
    iget v4, v1, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    add-int/2addr v4, p2

    iput v4, v1, Lcom/android/server/am/ContentProviderConnection;->numStableIncs:I

    .line 9674
    :cond_1
    iget v4, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    add-int/2addr p2, v4

    .line 9675
    if-gez p2, :cond_2

    .line 9676
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "stableCount < 0: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 9694
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    .line 9679
    :cond_2
    if-lez p3, :cond_3

    .line 9680
    :try_start_2
    iget v4, v1, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    add-int/2addr v4, p3

    iput v4, v1, Lcom/android/server/am/ContentProviderConnection;->numUnstableIncs:I

    .line 9682
    :cond_3
    iget v4, v1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    add-int/2addr p3, v4

    .line 9683
    if-gez p3, :cond_4

    .line 9684
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "unstableCount < 0: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 9687
    :cond_4
    add-int v4, p2, p3

    if-gtz v4, :cond_5

    .line 9688
    new-instance v4, Ljava/lang/IllegalStateException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "ref counts can\'t go to zero here: stable="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " unstable="

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 9691
    :cond_5
    iput p2, v1, Lcom/android/server/am/ContentProviderConnection;->stableCount:I

    .line 9692
    iput p3, v1, Lcom/android/server/am/ContentProviderConnection;->unstableCount:I

    .line 9693
    iget-boolean v4, v1, Lcom/android/server/am/ContentProviderConnection;->dead:Z

    if-nez v4, :cond_6

    const/4 v4, 0x1

    :goto_0
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    return v4

    :cond_6
    const/4 v4, 0x0

    goto :goto_0
.end method

.method public registerProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 2
    .param p1, "observer"    # Landroid/app/IProcessObserver;

    .prologue
    .line 10544
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string v1, "registerProcessObserver()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 10546
    monitor-enter p0

    .line 10547
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 10548
    monitor-exit p0

    .line 10549
    return-void

    .line 10548
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public registerReceiver(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/IIntentReceiver;Landroid/content/IntentFilter;Ljava/lang/String;I)Landroid/content/Intent;
    .locals 36
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "receiver"    # Landroid/content/IIntentReceiver;
    .param p4, "filter"    # Landroid/content/IntentFilter;
    .param p5, "permission"    # Ljava/lang/String;
    .param p6, "userId"    # I

    .prologue
    .line 15578
    const-string v4, "registerReceiver"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 15581
    monitor-enter p0

    .line 15582
    const/16 v32, 0x0

    .line 15583
    .local v32, "callerApp":Lcom/android/server/am/ProcessRecord;
    if-eqz p1, :cond_2

    .line 15584
    :try_start_0
    invoke-virtual/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v32

    .line 15585
    if-nez v32, :cond_0

    .line 15586
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Unable to find app for caller "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, p1

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " (pid="

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v13

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, ") when registering receiver "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, p3

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {v4, v12}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15694
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 15591
    :cond_0
    :try_start_1
    move-object/from16 v0, v32

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    const/16 v12, 0x3e8

    if-eq v4, v12, :cond_1

    move-object/from16 v0, v32

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->pkgList:Landroid/util/ArrayMap;

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Landroid/util/ArrayMap;->containsKey(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1

    const-string v4, "android"

    move-object/from16 v0, p2

    invoke-virtual {v4, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_1

    .line 15594
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Given caller package "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, p2

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " is not running in process "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move-object/from16 v0, v32

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {v4, v12}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15597
    :cond_1
    move-object/from16 v0, v32

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    .line 15598
    .local v6, "callingUid":I
    move-object/from16 v0, v32

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    .line 15605
    .local v5, "callingPid":I
    :goto_0
    const/4 v8, 0x1

    const/4 v9, 0x2

    const-string v10, "registerReceiver"

    move-object/from16 v4, p0

    move/from16 v7, p6

    move-object/from16 v11, p2

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p6

    .line 15608
    const/16 v31, 0x0

    .line 15611
    .local v31, "allSticky":Ljava/util/List;
    invoke-virtual/range {p4 .. p4}, Landroid/content/IntentFilter;->actionsIterator()Ljava/util/Iterator;

    move-result-object v30

    .line 15612
    .local v30, "actions":Ljava/util/Iterator;
    if-eqz v30, :cond_3

    .line 15613
    :goto_1
    invoke-interface/range {v30 .. v30}, Ljava/util/Iterator;->hasNext()Z

    move-result v4

    if-eqz v4, :cond_4

    .line 15614
    invoke-interface/range {v30 .. v30}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Ljava/lang/String;

    .line 15615
    .local v29, "action":Ljava/lang/String;
    const/4 v4, -0x1

    move-object/from16 v0, p0

    move-object/from16 v1, v29

    move-object/from16 v2, p4

    move-object/from16 v3, v31

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->getStickiesLocked(Ljava/lang/String;Landroid/content/IntentFilter;Ljava/util/List;I)Ljava/util/List;

    move-result-object v31

    .line 15617
    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v4

    move-object/from16 v0, p0

    move-object/from16 v1, v29

    move-object/from16 v2, p4

    move-object/from16 v3, v31

    invoke-direct {v0, v1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->getStickiesLocked(Ljava/lang/String;Landroid/content/IntentFilter;Ljava/util/List;I)Ljava/util/List;

    move-result-object v31

    .line 15619
    goto :goto_1

    .line 15600
    .end local v5    # "callingPid":I
    .end local v6    # "callingUid":I
    .end local v29    # "action":Ljava/lang/String;
    .end local v30    # "actions":Ljava/util/Iterator;
    .end local v31    # "allSticky":Ljava/util/List;
    :cond_2
    const/16 p2, 0x0

    .line 15601
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    .line 15602
    .restart local v6    # "callingUid":I
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    .restart local v5    # "callingPid":I
    goto :goto_0

    .line 15621
    .restart local v30    # "actions":Ljava/util/Iterator;
    .restart local v31    # "allSticky":Ljava/util/List;
    :cond_3
    const/4 v4, 0x0

    const/4 v12, -0x1

    move-object/from16 v0, p0

    move-object/from16 v1, p4

    move-object/from16 v2, v31

    invoke-direct {v0, v4, v1, v2, v12}, Lcom/android/server/am/ActivityManagerService;->getStickiesLocked(Ljava/lang/String;Landroid/content/IntentFilter;Ljava/util/List;I)Ljava/util/List;

    move-result-object v31

    .line 15623
    const/4 v4, 0x0

    invoke-static {v6}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v12

    move-object/from16 v0, p0

    move-object/from16 v1, p4

    move-object/from16 v2, v31

    invoke-direct {v0, v4, v1, v2, v12}, Lcom/android/server/am/ActivityManagerService;->getStickiesLocked(Ljava/lang/String;Landroid/content/IntentFilter;Ljava/util/List;I)Ljava/util/List;

    move-result-object v31

    .line 15629
    :cond_4
    if-eqz v31, :cond_5

    const/4 v4, 0x0

    move-object/from16 v0, v31

    invoke-interface {v0, v4}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Landroid/content/Intent;

    move-object/from16 v35, v4

    .line 15634
    .local v35, "sticky":Landroid/content/Intent;
    :goto_2
    if-nez p3, :cond_6

    .line 15635
    monitor-exit p0

    .line 15693
    :goto_3
    return-object v35

    .line 15629
    .end local v35    # "sticky":Landroid/content/Intent;
    :cond_5
    const/16 v35, 0x0

    goto :goto_2

    .line 15638
    .restart local v35    # "sticky":Landroid/content/Intent;
    :cond_6
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v12

    invoke-virtual {v4, v12}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/android/server/am/ReceiverList;

    .line 15640
    .local v7, "rl":Lcom/android/server/am/ReceiverList;
    if-nez v7, :cond_a

    .line 15641
    new-instance v7, Lcom/android/server/am/ReceiverList;

    .end local v7    # "rl":Lcom/android/server/am/ReceiverList;
    move-object/from16 v8, p0

    move-object/from16 v9, v32

    move v10, v5

    move v11, v6

    move/from16 v12, p6

    move-object/from16 v13, p3

    invoke-direct/range {v7 .. v13}, Lcom/android/server/am/ReceiverList;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ProcessRecord;IIILandroid/content/IIntentReceiver;)V

    .line 15643
    .restart local v7    # "rl":Lcom/android/server/am/ReceiverList;
    iget-object v4, v7, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v4, :cond_9

    .line 15644
    iget-object v4, v7, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v4, v4, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v4, v7}, Landroid/util/ArraySet;->add(Ljava/lang/Object;)Z

    .line 15653
    :goto_4
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v12

    invoke-virtual {v4, v12, v7}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 15667
    :cond_7
    new-instance v8, Lcom/android/server/am/BroadcastFilter;

    move-object/from16 v9, p4

    move-object v10, v7

    move-object/from16 v11, p2

    move-object/from16 v12, p5

    move v13, v6

    move/from16 v14, p6

    invoke-direct/range {v8 .. v14}, Lcom/android/server/am/BroadcastFilter;-><init>(Landroid/content/IntentFilter;Lcom/android/server/am/ReceiverList;Ljava/lang/String;Ljava/lang/String;II)V

    .line 15669
    .local v8, "bf":Lcom/android/server/am/BroadcastFilter;
    invoke-virtual {v7, v8}, Lcom/android/server/am/ReceiverList;->add(Ljava/lang/Object;)Z

    .line 15670
    invoke-virtual {v8}, Lcom/android/server/am/BroadcastFilter;->debugCheck()Z

    move-result v4

    if-nez v4, :cond_8

    .line 15671
    const-string v4, "ActivityManager"

    const-string v12, "==> For Dynamic broadast"

    invoke-static {v4, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 15673
    :cond_8
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {v4, v8}, Lcom/android/server/IntentResolver;->addFilter(Landroid/content/IntentFilter;)V

    .line 15677
    if-eqz v31, :cond_d

    .line 15678
    new-instance v19, Ljava/util/ArrayList;

    invoke-direct/range {v19 .. v19}, Ljava/util/ArrayList;-><init>()V

    .line 15679
    .local v19, "receivers":Ljava/util/ArrayList;
    move-object/from16 v0, v19

    invoke-virtual {v0, v8}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 15681
    invoke-interface/range {v31 .. v31}, Ljava/util/List;->size()I

    move-result v28

    .line 15682
    .local v28, "N":I
    const/16 v34, 0x0

    .local v34, "i":I
    :goto_5
    move/from16 v0, v34

    move/from16 v1, v28

    if-ge v0, v1, :cond_d

    .line 15683
    move-object/from16 v0, v31

    move/from16 v1, v34

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Landroid/content/Intent;

    .line 15684
    .local v11, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    invoke-virtual {v0, v11}, Lcom/android/server/am/ActivityManagerService;->broadcastQueueForIntent(Landroid/content/Intent;)Lcom/android/server/am/BroadcastQueue;

    move-result-object v10

    .line 15685
    .local v10, "queue":Lcom/android/server/am/BroadcastQueue;
    new-instance v9, Lcom/android/server/am/BroadcastRecord;

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/4 v15, -0x1

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, -0x1

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x1

    const/16 v26, 0x1

    const/16 v27, -0x1

    invoke-direct/range {v9 .. v27}, Lcom/android/server/am/BroadcastRecord;-><init>(Lcom/android/server/am/BroadcastQueue;Landroid/content/Intent;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;ILjava/util/List;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;ZZZI)V

    .line 15688
    .local v9, "r":Lcom/android/server/am/BroadcastRecord;
    invoke-virtual {v10, v9}, Lcom/android/server/am/BroadcastQueue;->enqueueParallelBroadcastLocked(Lcom/android/server/am/BroadcastRecord;)V

    .line 15689
    invoke-virtual {v10}, Lcom/android/server/am/BroadcastQueue;->scheduleBroadcastsLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 15682
    add-int/lit8 v34, v34, 0x1

    goto :goto_5

    .line 15647
    .end local v8    # "bf":Lcom/android/server/am/BroadcastFilter;
    .end local v9    # "r":Lcom/android/server/am/BroadcastRecord;
    .end local v10    # "queue":Lcom/android/server/am/BroadcastQueue;
    .end local v11    # "intent":Landroid/content/Intent;
    .end local v19    # "receivers":Ljava/util/ArrayList;
    .end local v28    # "N":I
    .end local v34    # "i":I
    :cond_9
    :try_start_2
    invoke-interface/range {p3 .. p3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v4

    const/4 v12, 0x0

    invoke-interface {v4, v7, v12}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 15651
    const/4 v4, 0x1

    :try_start_3
    iput-boolean v4, v7, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    goto/16 :goto_4

    .line 15648
    :catch_0
    move-exception v33

    .line 15649
    .local v33, "e":Landroid/os/RemoteException;
    monitor-exit p0

    goto/16 :goto_3

    .line 15654
    .end local v33    # "e":Landroid/os/RemoteException;
    :cond_a
    iget v4, v7, Lcom/android/server/am/ReceiverList;->uid:I

    if-eq v4, v6, :cond_b

    .line 15655
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Receiver requested to register for uid "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " was previously registered for uid "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget v13, v7, Lcom/android/server/am/ReceiverList;->uid:I

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {v4, v12}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15658
    :cond_b
    iget v4, v7, Lcom/android/server/am/ReceiverList;->pid:I

    if-eq v4, v5, :cond_c

    .line 15659
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Receiver requested to register for pid "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " was previously registered for pid "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget v13, v7, Lcom/android/server/am/ReceiverList;->pid:I

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {v4, v12}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15662
    :cond_c
    iget v4, v7, Lcom/android/server/am/ReceiverList;->userId:I

    move/from16 v0, p6

    if-eq v4, v0, :cond_7

    .line 15663
    new-instance v4, Ljava/lang/IllegalArgumentException;

    new-instance v12, Ljava/lang/StringBuilder;

    invoke-direct {v12}, Ljava/lang/StringBuilder;-><init>()V

    const-string v13, "Receiver requested to register for user "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    move/from16 v0, p6

    invoke-virtual {v12, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    const-string v13, " was previously registered for user "

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v12

    iget v13, v7, Lcom/android/server/am/ReceiverList;->userId:I

    invoke-virtual {v12, v13}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v12

    invoke-virtual {v12}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    invoke-direct {v4, v12}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 15693
    .restart local v8    # "bf":Lcom/android/server/am/BroadcastFilter;
    :cond_d
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto/16 :goto_3
.end method

.method public registerTaskStackListener(Landroid/app/ITaskStackListener;)V
    .locals 1
    .param p1, "listener"    # Landroid/app/ITaskStackListener;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    .line 2404
    monitor-enter p0

    .line 2405
    if-eqz p1, :cond_0

    .line 2406
    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskStackListeners:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 2408
    :cond_0
    monitor-exit p0

    .line 2409
    return-void

    .line 2408
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public registerUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 3
    .param p1, "observer"    # Landroid/app/IUserSwitchObserver;

    .prologue
    .line 19545
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    .line 19547
    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: registerUserSwitchObserver() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .line 19551
    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 19552
    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 19555
    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v1, p1}, Landroid/os/RemoteCallbackList;->register(Landroid/os/IInterface;)Z

    .line 19556
    return-void
.end method

.method public releaseActivityInstance(Landroid/os/IBinder;)Z
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 4490
    monitor-enter p0

    .line 4491
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-wide v0

    .line 4493
    .local v0, "origId":J
    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .line 4494
    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v3, :cond_0

    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-nez v3, :cond_1

    .line 4495
    :cond_0
    const/4 v3, 0x0

    .line 4499
    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :goto_0
    return v3

    .line 4497
    :cond_1
    :try_start_3
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v3, v3, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    const-string v4, "app-req"

    invoke-virtual {v3, v2, v4}, Lcom/android/server/am/ActivityStack;->safelyDestroyActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    move-result v3

    .line 4499
    :try_start_4
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_0

    .line 4501
    .end local v0    # "origId":J
    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    throw v3

    .line 4499
    .restart local v0    # "origId":J
    :catchall_1
    move-exception v3

    :try_start_5
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0
.end method

.method public releasePersistableUriPermission(Landroid/net/Uri;II)V
    .locals 7
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "modeFlags"    # I
    .param p3, "userId"    # I

    .prologue
    .line 7876
    const-string v4, "releasePersistableUriPermission"

    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 7878
    const/4 v4, 0x3

    invoke-static {p2, v4}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    .line 7881
    monitor-enter p0

    .line 7882
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .line 7883
    .local v0, "callingUid":I
    const/4 v2, 0x0

    .line 7885
    .local v2, "persistChanged":Z
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v5, 0x0

    invoke-direct {v4, p3, p1, v5}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v0, v4}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .line 7887
    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    new-instance v4, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v5, 0x1

    invoke-direct {v4, p3, p1, v5}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v0, v4}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v3

    .line 7889
    .local v3, "prefixPerm":Lcom/android/server/am/UriPermission;
    if-nez v1, :cond_0

    if-nez v3, :cond_0

    .line 7890
    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "No permission grants found for UID "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " and Uri "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {p1}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .line 7906
    .end local v0    # "callingUid":I
    .end local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .end local v2    # "persistChanged":Z
    .end local v3    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .line 7894
    .restart local v0    # "callingUid":I
    .restart local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .restart local v2    # "persistChanged":Z
    .restart local v3    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :cond_0
    if-eqz v1, :cond_1

    .line 7895
    :try_start_1
    invoke-virtual {v1, p2}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    move-result v4

    or-int/2addr v2, v4

    .line 7896
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 7898
    :cond_1
    if-eqz v3, :cond_2

    .line 7899
    invoke-virtual {v3, p2}, Lcom/android/server/am/UriPermission;->releasePersistableModes(I)Z

    move-result v4

    or-int/2addr v2, v4

    .line 7900
    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V

    .line 7903
    :cond_2
    if-eqz v2, :cond_3

    .line 7904
    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    .line 7906
    :cond_3
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 7907
    return-void
.end method

.method public releaseSomeActivities(Landroid/app/IApplicationThread;)V
    .locals 5
    .param p1, "appInt"    # Landroid/app/IApplicationThread;

    .prologue
    .line 4506
    monitor-enter p0

    .line 4507
    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v2

    .line 4509
    .local v2, "origId":J
    :try_start_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .line 4510
    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const-string v4, "low-mem"

    invoke-virtual {v1, v0, v4}, Lcom/android/server/am/ActivityStackSupervisor;->releaseSomeActivitiesLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 4512
    :try_start_2
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 4514
    monitor-exit p0

    .line 4515
    return-void

    .line 4512
    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v1

    .line 4514
    .end local v2    # "origId":J
    :catchall_1
    move-exception v1

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v1
.end method

.method public removeContentProvider(Landroid/os/IBinder;Z)V
    .locals 9
    .param p1, "connection"    # Landroid/os/IBinder;
    .param p2, "stable"    # Z

    .prologue
    .line 9533
    const-string v7, "removeContentProvider"

    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    .line 9534
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v4

    .line 9536
    .local v4, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    .line 9539
    :try_start_1
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v2, v0
    :try_end_1
    .catch Ljava/lang/ClassCastException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 9546
    .local v2, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v2, :cond_0

    .line 9547
    :try_start_2
    new-instance v7, Ljava/lang/NullPointerException;

    const-string v8, "connection is null"

    invoke-direct {v7, v8}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 9552
    .end local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v7
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .line 9554
    :catchall_1
    move-exception v7

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v7

    .line 9540
    :catch_0
    move-exception v3

    .line 9541
    .local v3, "e":Ljava/lang/ClassCastException;
    :try_start_4
    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "removeContentProvider: "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    const-string v8, " not a ContentProviderConnection"

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 9543
    .local v6, "msg":Ljava/lang/String;
    const-string v7, "ActivityManager"

    invoke-static {v7, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    .line 9544
    new-instance v7, Ljava/lang/IllegalArgumentException;

    invoke-direct {v7, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v7

    .line 9549
    .end local v3    # "e":Ljava/lang/ClassCastException;
    .end local v6    # "msg":Ljava/lang/String;
    .restart local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    const/4 v7, 0x0

    const/4 v8, 0x0

    invoke-virtual {p0, v2, v7, v8, p2}, Lcom/android/server/am/ActivityManagerService;->decProviderCountLocked(Lcom/android/server/am/ContentProviderConnection;Lcom/android/server/am/ContentProviderRecord;Landroid/os/IBinder;Z)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 9550
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .line 9552
    :cond_1
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    .line 9554
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9556
    return-void
.end method

.method public removeContentProviderExternal(Ljava/lang/String;Landroid/os/IBinder;)V
    .locals 5
    .param p1, "name"    # Ljava/lang/String;
    .param p2, "token"    # Landroid/os/IBinder;

    .prologue
    .line 9559
    const-string v3, "android.permission.ACCESS_CONTENT_PROVIDERS_EXTERNALLY"

    const-string v4, "Do not have permission in call removeContentProviderExternal()"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    .line 9561
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v2

    .line 9562
    .local v2, "userId":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .line 9564
    .local v0, "ident":J
    :try_start_0
    invoke-direct {p0, p1, p2, v2}, Lcom/android/server/am/ActivityManagerService;->removeContentProviderExternalUnchecked(Ljava/lang/String;Landroid/os/IBinder;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 9566
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .line 9568
    return-void

    .line 9566
    :catchall_0
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method final removeLruProcessLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    .line 2477
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, p1}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v0

    .line 2478
    .local v0, "lrui":I
    if-ltz v0, :cond_3

    .line 2479
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->killed:Z

    if-nez v1, :cond_0

    .line 2480
    const-string v1, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Removing process that hasn\'t been killed: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v1, v2}, Landroid/util/Slog;->wtfStack(Ljava/lang/String;Ljava/lang/String;)I

    .line 2481
    iget v1, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1}, Landroid/os/Process;->killProcessQuiet(I)V

    .line 2482
    iget-object v1, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v1, v1, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v2, p1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v1, v2}, Landroid/os/Process;->killProcessGroup(II)I

    .line 2484
    :cond_0
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    if-gt v0, v1, :cond_1

    .line 2485
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    .line 2487
    :cond_1
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-gt v0, v1, :cond_2

    .line 2488
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v1, v1, -0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .line 2490
    :cond_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 2492
    :cond_3
    return-void
.end method

.method removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V
    .locals 4
    .param p1, "rl"    # Lcom/android/server/am/ReceiverList;

    .prologue
    .line 15742
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    iget-object v3, p1, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v3}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v3

    invoke-virtual {v2, v3}, Ljava/util/HashMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 15743
    invoke-virtual {p1}, Lcom/android/server/am/ReceiverList;->size()I

    move-result v0

    .line 15744
    .local v0, "N":I
    const/4 v1, 0x0

    .local v1, "i":I
    :goto_0
    if-ge v1, v0, :cond_0

    .line 15745
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mReceiverResolver:Lcom/android/server/IntentResolver;

    invoke-virtual {p1, v1}, Lcom/android/server/am/ReceiverList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/IntentFilter;

    invoke-virtual {v3, v2}, Lcom/android/server/IntentResolver;->removeFilter(Landroid/content/IntentFilter;)V

    .line 15744
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 15747
    :cond_0
    return-void
.end method

.method public removeTask(I)Z
    .locals 4
    .param p1, "taskId"    # I

    .prologue
    invoke-static/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->shouldKeepAppProcess(Lcom/android/server/am/ActivityManagerService;I)Z

    move-result v0

    if-eqz v0, :cond_flyme_0

    invoke-static/range {p0 .. p1}, Lcom/android/server/am/ActivityManagerService$FlymeActivityManagerServiceInjector;->removeTaskNotKillProcess(Lcom/android/server/am/ActivityManagerService;I)Z

    move-result v0

    return v0

    :cond_flyme_0

    monitor-enter p0

    :try_start_0
    const-string v2, "android.permission.REMOVE_TASKS"

    const-string v3, "removeTask()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .local v0, "ident":J
    const/4 v2, 0x1

    :try_start_1
    invoke-direct {p0, p1, v2}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-result v2

    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    return v2

    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method removeUriPermissionIfNeededLocked(Lcom/android/server/am/UriPermission;)V
    .locals 3
    .param p1, "perm"    # Lcom/android/server/am/UriPermission;

    .prologue
    iget v1, p1, Lcom/android/server/am/UriPermission;->modeFlags:I

    if-nez v1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/UriPermission;->targetUid:I

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/util/ArrayMap;

    .local v0, "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    if-eqz v0, :cond_0

    iget-object v1, p1, Lcom/android/server/am/UriPermission;->uri:Lcom/android/server/am/ActivityManagerService$GrantUri;

    invoke-virtual {v0, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    invoke-virtual {v0}, Landroid/util/ArrayMap;->isEmpty()Z

    move-result v1

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mGrantedUriPermissions:Landroid/util/SparseArray;

    iget v2, p1, Lcom/android/server/am/UriPermission;->targetUid:I

    invoke-virtual {v1, v2}, Landroid/util/SparseArray;->remove(I)V

    .end local v0    # "perms":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Lcom/android/server/am/ActivityManagerService$GrantUri;Lcom/android/server/am/UriPermission;>;"
    :cond_0
    return-void
.end method

.method public reportActivityFullyDrawn(Landroid/os/IBinder;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    .line 8497
    monitor-enter p0

    .line 8498
    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    monitor-exit p0

    :goto_0
    return-void

    :cond_0
    invoke-virtual {v0}, Lcom/android/server/am/ActivityRecord;->reportFullyDrawnLocked()V

    monitor-exit p0

    goto :goto_0

    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "extras"    # Landroid/os/Bundle;

    .prologue
    const/4 v5, 0x1

    move-object v2, p1

    check-cast v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;

    .local v2, "pae":Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;
    monitor-enter v2

    :try_start_0
    iput-object p2, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->result:Landroid/os/Bundle;

    const/4 v3, 0x1

    iput-boolean v3, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->haveResult:Z

    invoke-virtual {v2}, Ljava/lang/Object;->notifyAll()V

    iget-object v3, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    if-nez v3, :cond_0

    monitor-exit v2

    :goto_0
    return-void

    :cond_0
    monitor-exit v2
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    monitor-enter p0

    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPendingAssistExtras:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v1

    .local v1, "exists":Z
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeCallbacks(Ljava/lang/Runnable;)V

    if-nez v1, :cond_1

    monitor-exit p0

    goto :goto_0

    .end local v1    # "exists":Z
    :catchall_0
    move-exception v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3

    :catchall_1
    move-exception v3

    .line 8504
    :try_start_2
    monitor-exit v2
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v3

    .restart local v1    # "exists":Z
    :cond_1
    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    iget-object v3, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    invoke-virtual {v3, p2}, Landroid/content/Intent;->replaceExtras(Landroid/os/Bundle;)Landroid/content/Intent;

    iget-object v3, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->hint:Ljava/lang/String;

    if-eqz v3, :cond_2

    iget-object v3, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    iget-object v4, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->hint:Ljava/lang/String;

    invoke-virtual {v3, v4, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    :cond_2
    iget-object v3, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    const/high16 v4, 0x34000000

    invoke-virtual {v3, v4}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    const-string v3, "assist"

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->closeSystemDialogs(Ljava/lang/String;)V

    :try_start_4
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v4, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->intent:Landroid/content/Intent;

    new-instance v5, Landroid/os/UserHandle;

    iget v6, v2, Lcom/android/server/am/ActivityManagerService$PendingAssistExtras;->userHandle:I

    invoke-direct {v5, v6}, Landroid/os/UserHandle;-><init>(I)V

    invoke-virtual {v3, v4, v5}, Landroid/content/Context;->startActivityAsUser(Landroid/content/Intent;Landroid/os/UserHandle;)V
    :try_end_4
    .catch Landroid/content/ActivityNotFoundException; {:try_start_4 .. :try_end_4} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    .local v0, "e":Landroid/content/ActivityNotFoundException;
    const-string v3, "ActivityManager"

    const-string v4, "No activity to handle assist action."

    invoke-static {v3, v4, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I

    goto :goto_0
.end method

.method reportMemUsage(Ljava/util/ArrayList;)V
    .locals 56
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/ArrayList",
            "<",
            "Lcom/android/server/am/ProcessMemInfo;",
            ">;)V"
        }
    .end annotation

    .prologue
    .local p1, "memInfos":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessMemInfo;>;"
    new-instance v37, Landroid/util/SparseArray;

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v5

    move-object/from16 v0, v37

    invoke-direct {v0, v5}, Landroid/util/SparseArray;-><init>(I)V

    .local v37, "infoMap":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Lcom/android/server/am/ProcessMemInfo;>;"
    const/16 v36, 0x0

    .local v36, "i":I
    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    .local v28, "N":I
    :goto_0
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_0

    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .local v4, "mi":Lcom/android/server/am/ProcessMemInfo;
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->pid:I

    move-object/from16 v0, v37

    invoke-virtual {v0, v5, v4}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    add-int/lit8 v36, v36, 0x1

    goto :goto_0

    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    :cond_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCpuStatsNow()V

    const/4 v5, 0x1

    new-array v0, v5, [J

    move-object/from16 v44, v0

    .local v44, "memtrackTmp":[J
    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    monitor-enter v14

    :try_start_0
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    invoke-virtual {v5}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v28

    const/16 v36, 0x0

    :goto_1
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_2

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move/from16 v0, v36

    invoke-virtual {v5, v0}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v45

    .local v45, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v45

    iget-wide v8, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->vsize:J

    const-wide/16 v18, 0x0

    cmp-long v5, v8, v18

    if-lez v5, :cond_1

    move-object/from16 v0, v45

    iget v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/4 v6, 0x0

    move-object/from16 v0, v44

    invoke-static {v5, v6, v0}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v48

    .local v48, "pss":J
    const-wide/16 v8, 0x0

    cmp-long v5, v48, v8

    if-lez v5, :cond_1

    move-object/from16 v0, v45

    iget v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move-object/from16 v0, v37

    invoke-virtual {v0, v5}, Landroid/util/SparseArray;->indexOfKey(I)I

    move-result v5

    if-gez v5, :cond_1

    new-instance v4, Lcom/android/server/am/ProcessMemInfo;

    move-object/from16 v0, v45

    iget-object v5, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v0, v45

    iget v6, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    const/16 v7, -0x11

    const/4 v8, -0x1

    const-string v9, "native"

    const/4 v10, 0x0

    invoke-direct/range {v4 .. v10}, Lcom/android/server/am/ProcessMemInfo;-><init>(Ljava/lang/String;IIILjava/lang/String;Ljava/lang/String;)V

    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    move-wide/from16 v0, v48

    iput-wide v0, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const/4 v5, 0x0

    aget-wide v8, v44, v5

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    move-object/from16 v0, p1

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    .end local v48    # "pss":J
    :cond_1
    add-int/lit8 v36, v36, 0x1

    goto :goto_1

    .end local v45    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_2
    monitor-exit v14
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const-wide/16 v54, 0x0

    .local v54, "totalPss":J
    const-wide/16 v52, 0x0

    .local v52, "totalMemtrack":J
    const/16 v36, 0x0

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    :goto_2
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_4

    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_3

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->pid:I

    const/4 v6, 0x0

    move-object/from16 v0, v44

    invoke-static {v5, v6, v0}, Landroid/os/Debug;->getPss(I[J[J)J

    move-result-wide v8

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const/4 v5, 0x0

    aget-wide v8, v44, v5

    iput-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    :cond_3
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long v54, v54, v8

    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    add-long v52, v52, v8

    add-int/lit8 v36, v36, 0x1

    goto :goto_2

    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    .end local v52    # "totalMemtrack":J
    .end local v54    # "totalPss":J
    :catchall_0
    move-exception v5

    :try_start_1
    monitor-exit v14
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v5

    .restart local v52    # "totalMemtrack":J
    .restart local v54    # "totalPss":J
    :cond_4
    new-instance v5, Lcom/android/server/am/ActivityManagerService$22;

    move-object/from16 v0, p0

    invoke-direct {v5, v0}, Lcom/android/server/am/ActivityManagerService$22;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    move-object/from16 v0, p1

    invoke-static {v0, v5}, Ljava/util/Collections;->sort(Ljava/util/List;Ljava/util/Comparator;)V

    new-instance v51, Ljava/lang/StringBuilder;

    const/16 v5, 0x80

    move-object/from16 v0, v51

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .local v51, "tag":Ljava/lang/StringBuilder;
    new-instance v50, Ljava/lang/StringBuilder;

    const/16 v5, 0x80

    move-object/from16 v0, v50

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .local v50, "stack":Ljava/lang/StringBuilder;
    const-string v5, "Low on memory -- "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "total"

    const/4 v6, 0x0

    move-object/from16 v0, v51

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    const-string v5, "total"

    const/4 v6, 0x1

    move-object/from16 v0, v50

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    new-instance v35, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v35

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .local v35, "fullNativeBuilder":Ljava/lang/StringBuilder;
    new-instance v7, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    invoke-direct {v7, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .local v7, "shortNativeBuilder":Ljava/lang/StringBuilder;
    new-instance v34, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v34

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .local v34, "fullJavaBuilder":Ljava/lang/StringBuilder;
    const/16 v33, 0x1

    .local v33, "firstLine":Z
    const/high16 v41, -0x80000000

    .local v41, "lastOomAdj":I
    const-wide/16 v10, 0x0

    .local v10, "extraNativeRam":J
    const-wide/16 v12, 0x0

    .local v12, "extraNativeMemtrack":J
    const-wide/16 v30, 0x0

    .local v30, "cachedPss":J
    const/16 v36, 0x0

    invoke-virtual/range {p1 .. p1}, Ljava/util/ArrayList;->size()I

    move-result v28

    :goto_3
    move/from16 v0, v36

    move/from16 v1, v28

    if-ge v0, v1, :cond_13

    move-object/from16 v0, p1

    move/from16 v1, v36

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessMemInfo;

    .restart local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, 0x9

    if-lt v5, v6, :cond_5

    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long v30, v30, v8

    :cond_5
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, -0x11

    if-eq v5, v6, :cond_f

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x5

    if-lt v5, v6, :cond_6

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x6

    if-eq v5, v6, :cond_6

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/4 v6, 0x7

    if-ne v5, v6, :cond_f

    :cond_6
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v0, v41

    if-eq v0, v5, :cond_d

    iget v0, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v41, v0

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-gtz v5, :cond_7

    const-string v5, " / "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_7
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ltz v5, :cond_c

    if-eqz v33, :cond_8

    const-string v5, ":"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v33, 0x0

    :cond_8
    const-string v5, "\n\t at "

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :goto_4
    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-gtz v5, :cond_9

    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-object v5, v4, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    const/4 v6, 0x0

    move-object/from16 v0, v51

    invoke-static {v0, v8, v9, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    :cond_9
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    iget-object v5, v4, Lcom/android/server/am/ProcessMemInfo;->name:Ljava/lang/String;

    const/4 v6, 0x1

    move-object/from16 v0, v50

    invoke-static {v0, v8, v9, v5, v6}, Lcom/android/server/am/ActivityManagerService;->appendMemBucket(Ljava/lang/StringBuilder;JLjava/lang/String;Z)V

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ltz v5, :cond_f

    add-int/lit8 v5, v36, 0x1

    move/from16 v0, v28

    if-ge v5, v0, :cond_a

    add-int/lit8 v5, v36, 0x1

    move-object/from16 v0, p1

    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/ProcessMemInfo;

    iget v5, v5, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    move/from16 v0, v41

    if-eq v5, v0, :cond_f

    :cond_a
    const-string v5, "("

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v39, 0x0

    .local v39, "k":I
    :goto_5
    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    array-length v5, v5

    move/from16 v0, v39

    if-ge v0, v5, :cond_e

    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v5, v5, v39

    iget v6, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    if-ne v5, v6, :cond_b

    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_LABEL:[Ljava/lang/String;

    aget-object v5, v5, v39

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, ":"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sget-object v5, Lcom/android/server/am/ActivityManagerService;->DUMP_MEM_OOM_ADJ:[I

    aget v5, v5, v39

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    :cond_b
    add-int/lit8 v39, v39, 0x1

    goto :goto_5

    .end local v39    # "k":I
    :cond_c
    const-string v5, "$"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_4

    :cond_d
    const-string v5, " "

    move-object/from16 v0, v51

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "$"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    goto :goto_4

    .restart local v39    # "k":I
    :cond_e
    const-string v5, ")"

    move-object/from16 v0, v50

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .end local v39    # "k":I
    :cond_f
    move-object/from16 v0, p0

    move-object/from16 v1, v35

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    iget v5, v4, Lcom/android/server/am/ProcessMemInfo;->oomAdj:I

    const/16 v6, -0x11

    if-ne v5, v6, :cond_11

    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    const-wide/16 v14, 0x200

    cmp-long v5, v8, v14

    if-ltz v5, :cond_10

    move-object/from16 v0, p0

    invoke-direct {v0, v7, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    :goto_6
    add-int/lit8 v36, v36, 0x1

    goto/16 :goto_3

    :cond_10
    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->pss:J

    add-long/2addr v10, v8

    iget-wide v8, v4, Lcom/android/server/am/ProcessMemInfo;->memtrack:J

    add-long/2addr v12, v8

    goto :goto_6

    :cond_11
    const-wide/16 v8, 0x0

    cmp-long v5, v10, v8

    if-lez v5, :cond_12

    const/16 v8, -0x11

    const/4 v9, -0x1

    const-string v14, "(Other native)"

    move-object/from16 v6, p0

    invoke-direct/range {v6 .. v14}, Lcom/android/server/am/ActivityManagerService;->appendBasicMemEntry(Ljava/lang/StringBuilder;IIJJLjava/lang/String;)V

    const/16 v5, 0xa

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    const-wide/16 v10, 0x0

    :cond_12
    move-object/from16 v0, p0

    move-object/from16 v1, v34

    invoke-direct {v0, v1, v4}, Lcom/android/server/am/ActivityManagerService;->appendMemInfo(Ljava/lang/StringBuilder;Lcom/android/server/am/ProcessMemInfo;)V

    goto :goto_6

    .end local v4    # "mi":Lcom/android/server/am/ProcessMemInfo;
    :cond_13
    const-string v5, "           "

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v0, v34

    move-wide/from16 v1, v54

    invoke-static {v0, v1, v2}, Lcom/android/server/am/ProcessList;->appendRamKb(Ljava/lang/StringBuilder;J)V

    const-string v5, " kB: TOTAL"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-wide/16 v8, 0x0

    cmp-long v5, v52, v8

    if-lez v5, :cond_14

    const-string v5, " ("

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v0, v34

    move-wide/from16 v1, v52

    invoke-virtual {v0, v1, v2}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB memtrack)"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_14
    const-string v5, "\n"

    move-object/from16 v0, v34

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    new-instance v42, Lcom/android/internal/util/MemInfoReader;

    invoke-direct/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;-><init>()V

    .local v42, "memInfo":Lcom/android/internal/util/MemInfoReader;
    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->readMemInfo()V

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getRawInfo()[J

    move-result-object v38

    .local v38, "infos":[J
    new-instance v43, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v43

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .local v43, "memInfoBuilder":Ljava/lang/StringBuilder;
    invoke-static/range {v38 .. v38}, Landroid/os/Debug;->getMemInfo([J)V

    const-string v5, "  MemInfo: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x5

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB slab, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x4

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB shmem, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v5, 0xa

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB vm alloc, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v5, 0xb

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB page tables "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v5, 0xc

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB kernel stack\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "           "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x2

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB buffers, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x3

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB cached, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v5, 0x9

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB mapped, "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x1

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " kB free\n"

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v5, 0x8

    aget-wide v8, v38, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-eqz v5, :cond_15

    const-string v5, "  ZRAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/16 v5, 0x8

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB RAM, "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x6

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB swap total, "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x7

    aget-wide v8, v38, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB swap free\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_15
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getKsmInfo()[J

    move-result-object v40

    .local v40, "ksm":[J
    const/4 v5, 0x1

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_16

    const/4 v5, 0x0

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_16

    const/4 v5, 0x2

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-nez v5, :cond_16

    const/4 v5, 0x3

    aget-wide v8, v40, v5

    const-wide/16 v14, 0x0

    cmp-long v5, v8, v14

    if-eqz v5, :cond_17

    :cond_16
    const-string v5, "  KSM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x1

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB saved from shared "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x0

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "       "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x2

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB unshared; "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const/4 v5, 0x3

    aget-wide v8, v40, v5

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB volatile\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    :cond_17
    const-string v5, "  Free RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v8

    add-long v8, v8, v30

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v14

    add-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "  Used RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    sub-long v8, v54, v30

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v14

    add-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "  Lost RAM: "

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getTotalSizeKb()J

    move-result-wide v8

    sub-long v8, v8, v54

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getFreeSizeKb()J

    move-result-wide v14

    sub-long/2addr v8, v14

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getCachedSizeKb()J

    move-result-wide v14

    sub-long/2addr v8, v14

    invoke-virtual/range {v42 .. v42}, Lcom/android/internal/util/MemInfoReader;->getKernelUsedSizeKb()J

    move-result-wide v14

    sub-long/2addr v8, v14

    move-object/from16 v0, v43

    invoke-virtual {v0, v8, v9}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    const-string v5, " kB\n"

    move-object/from16 v0, v43

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v5, "ActivityManager"

    const-string v6, "Low on memory:"

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v5, "ActivityManager"

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v5, "ActivityManager"

    invoke-virtual/range {v34 .. v34}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const-string v5, "ActivityManager"

    invoke-virtual/range {v43 .. v43}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v5, v6}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v32, Ljava/lang/StringBuilder;

    const/16 v5, 0x400

    move-object/from16 v0, v32

    invoke-direct {v0, v5}, Ljava/lang/StringBuilder;-><init>(I)V

    .local v32, "dropBuilder":Ljava/lang/StringBuilder;
    const-string v5, "Low on memory:"

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-object/from16 v0, v32

    move-object/from16 v1, v50

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-object/from16 v0, v32

    move-object/from16 v1, v35

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    move-object/from16 v0, v32

    move-object/from16 v1, v34

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    move-object/from16 v0, v32

    move-object/from16 v1, v43

    invoke-virtual {v0, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;

    const/16 v5, 0xa

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    new-instance v29, Ljava/io/StringWriter;

    invoke-direct/range {v29 .. v29}, Ljava/io/StringWriter;-><init>()V

    .local v29, "catSw":Ljava/io/StringWriter;
    monitor-enter p0

    :try_start_2
    new-instance v16, Lcom/android/internal/util/FastPrintWriter;

    const/4 v5, 0x0

    const/16 v6, 0x100

    move-object/from16 v0, v16

    move-object/from16 v1, v29

    invoke-direct {v0, v1, v5, v6}, Lcom/android/internal/util/FastPrintWriter;-><init>(Ljava/io/Writer;ZI)V

    .local v16, "catPw":Ljava/io/PrintWriter;
    const/4 v5, 0x0

    new-array v0, v5, [Ljava/lang/String;

    move-object/from16 v17, v0

    .local v17, "emptyArgs":[Ljava/lang/String;
    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    move-object/from16 v14, p0

    invoke-virtual/range {v14 .. v20}, Lcom/android/server/am/ActivityManagerService;->dumpProcessesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZLjava/lang/String;)V

    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    move-object/from16 v0, p0

    iget-object v14, v0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    invoke-virtual/range {v14 .. v21}, Lcom/android/server/am/ActiveServices;->dumpServicesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->println()V

    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    move-object/from16 v14, p0

    invoke-virtual/range {v14 .. v21}, Lcom/android/server/am/ActivityManagerService;->dumpActivitiesLocked(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;IZZLjava/lang/String;)V

    invoke-virtual/range {v16 .. v16}, Ljava/io/PrintWriter;->flush()V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-virtual/range {v29 .. v29}, Ljava/io/StringWriter;->toString()Ljava/lang/String;

    move-result-object v5

    move-object/from16 v0, v32

    invoke-virtual {v0, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v19, "lowmem"

    const/16 v20, 0x0

    const-string v21, "system_server"

    const/16 v22, 0x0

    const/16 v23, 0x0

    invoke-virtual/range {v51 .. v51}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v24

    invoke-virtual/range {v32 .. v32}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v25

    const/16 v26, 0x0

    const/16 v27, 0x0

    move-object/from16 v18, p0

    invoke-virtual/range {v18 .. v27}, Lcom/android/server/am/ActivityManagerService;->addErrorToDropBox(Ljava/lang/String;Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;Ljava/lang/String;Ljava/lang/String;Ljava/io/File;Landroid/app/ApplicationErrorReport$CrashInfo;)V

    monitor-enter p0

    :try_start_3
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v46

    .local v46, "now":J
    move-object/from16 v0, p0

    iget-wide v8, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    cmp-long v5, v8, v46

    if-gez v5, :cond_18

    move-wide/from16 v0, v46

    move-object/from16 v2, p0

    iput-wide v0, v2, Lcom/android/server/am/ActivityManagerService;->mLastMemUsageReportTime:J

    :cond_18
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    return-void

    .end local v16    # "catPw":Ljava/io/PrintWriter;
    .end local v17    # "emptyArgs":[Ljava/lang/String;
    .end local v46    # "now":J
    :catchall_1
    move-exception v5

    :try_start_4
    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    throw v5

    .restart local v16    # "catPw":Ljava/io/PrintWriter;
    .restart local v17    # "emptyArgs":[Ljava/lang/String;
    :catchall_2
    move-exception v5

    :try_start_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_2

    throw v5
.end method

.method public requestBugReport()V
    .locals 2

    .prologue
    const-string v0, "android.permission.DUMP"

    const-string v1, "requestBugReport"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    const-string v0, "ctl.start"

    const-string v1, "bugreport"

    invoke-static {v0, v1}, Landroid/os/SystemProperties;->set(Ljava/lang/String;Ljava/lang/String;)V

    return-void
.end method

.method requestPssAllProcsLocked(JZZ)V
    .locals 9
    .param p1, "now"    # J
    .param p3, "always"    # Z
    .param p4, "memLowered"    # Z

    .prologue
    const/4 v1, 0x1

    if-nez p3, :cond_1

    iget-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    if-eqz p4, :cond_0

    const v0, 0x1d4c0

    :goto_0
    int-to-long v4, v0

    add-long/2addr v2, v4

    cmp-long v0, p1, v2

    if-gez v0, :cond_1

    :goto_1
    return-void

    :cond_0
    const v0, 0x927c0

    goto :goto_0

    :cond_1
    iput-wide p1, p0, Lcom/android/server/am/ActivityManagerService;->mLastFullPssTime:J

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mFullPssPending:Z

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->ensureCapacity(I)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v7, v0, -0x1

    .local v7, "i":I
    :goto_2
    if-ltz v7, :cond_4

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/android/server/am/ProcessRecord;

    .local v6, "app":Lcom/android/server/am/ProcessRecord;
    if-nez p4, :cond_2

    iget-wide v2, v6, Lcom/android/server/am/ProcessRecord;->lastStateTime:J

    const-wide/32 v4, 0x927c0

    add-long/2addr v2, v4

    cmp-long v0, p1, v2

    if-lez v0, :cond_3

    :cond_2
    iget v0, v6, Lcom/android/server/am/ProcessRecord;->setProcState:I

    iput v0, v6, Lcom/android/server/am/ProcessRecord;->pssProcState:I

    iget v0, v6, Lcom/android/server/am/ProcessRecord;->curProcState:I

    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v3

    move-wide v4, p1

    invoke-static/range {v0 .. v5}, Lcom/android/server/am/ProcessList;->computeNextPssTime(IZZZJ)J

    move-result-wide v2

    iput-wide v2, v6, Lcom/android/server/am/ProcessRecord;->nextPssTime:J

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_3
    add-int/lit8 v7, v7, -0x1

    goto :goto_2

    .end local v6    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_4
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    goto :goto_1
.end method

.method requestPssLocked(Lcom/android/server/am/ProcessRecord;I)V
    .locals 2
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "procState"    # I

    .prologue
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    :goto_0
    return-void

    :cond_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBgHandler:Landroid/os/Handler;

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Landroid/os/Handler;->sendEmptyMessage(I)Z

    :cond_1
    iput p2, p1, Lcom/android/server/am/ProcessRecord;->pssProcState:I

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mPendingPssProcesses:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0
.end method

.method public requestVisibleBehind(Landroid/os/IBinder;Z)Z
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "visible"    # Z

    .prologue
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "origId":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v2, :cond_0

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, v2, p2}, Lcom/android/server/am/ActivityStackSupervisor;->requestVisibleBehindLocked(Lcom/android/server/am/ActivityRecord;Z)Z

    move-result v3

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_0
    return v3

    :cond_0
    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    const/4 v3, 0x0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public resizeStack(ILandroid/graphics/Rect;)V
    .locals 4
    .param p1, "stackBoxId"    # I
    .param p2, "bounds"    # Landroid/graphics/Rect;

    .prologue
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v3, "resizeStackBox()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "ident":J
    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, p1, p2}, Lcom/android/server/wm/WindowManagerService;->resizeStack(ILandroid/graphics/Rect;)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public restart()V
    .locals 4

    .prologue
    const-string v2, "android.permission.SET_ACTIVITY_WATCHER"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SET_ACTIVITY_WATCHER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_0
    const-string v2, "ActivityManager"

    const-string v3, "Sending shutdown broadcast..."

    invoke-static {v2, v3}, Landroid/util/Log;->i(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v0, Lcom/android/server/am/ActivityManagerService$12;

    invoke-direct {v0, p0}, Lcom/android/server/am/ActivityManagerService$12;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .local v0, "br":Landroid/content/BroadcastReceiver;
    new-instance v1, Landroid/content/Intent;

    const-string v2, "android.intent.action.ACTION_SHUTDOWN"

    invoke-direct {v1, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .local v1, "intent":Landroid/content/Intent;
    const/high16 v2, 0x10000000

    invoke-virtual {v1, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const-string v2, "android.intent.extra.SHUTDOWN_USERSPACE_ONLY"

    const/4 v3, 0x1

    invoke-virtual {v1, v2, v3}, Landroid/content/Intent;->putExtra(Ljava/lang/String;Z)Landroid/content/Intent;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0, v2, v1}, Landroid/content/BroadcastReceiver;->onReceive(Landroid/content/Context;Landroid/content/Intent;)V

    return-void
.end method

.method public resumeAppSwitches()V
    .locals 2

    .prologue
    const-string v0, "android.permission.STOP_APP_SWITCHES"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v0

    if-eqz v0, :cond_0

    new-instance v0, Ljava/lang/SecurityException;

    const-string v1, "Requires permission android.permission.STOP_APP_SWITCHES"

    invoke-direct {v0, v1}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    monitor-enter p0

    const-wide/16 v0, 0x0

    :try_start_0
    iput-wide v0, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public revokeUriPermission(Landroid/app/IApplicationThread;Landroid/net/Uri;II)V
    .locals 7
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "modeFlags"    # I
    .param p4, "userId"    # I

    .prologue
    const-string v4, "revokeUriPermission"

    invoke-virtual {p0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    monitor-enter p0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .local v3, "r":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_0

    new-instance v4, Ljava/lang/SecurityException;

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Unable to find app for caller "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    const-string v6, " when revoking permission to uri "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-direct {v4, v5}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .end local v3    # "r":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .restart local v3    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_0
    if-nez p2, :cond_1

    :try_start_1
    const-string v4, "ActivityManager"

    const-string v5, "revokeUriPermission: null uri"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    monitor-exit p0

    :goto_0
    return-void

    :cond_1
    invoke-static {p3}, Landroid/content/Intent;->isAccessUriMode(I)Z

    move-result v4

    if-nez v4, :cond_2

    monitor-exit p0

    goto :goto_0

    :cond_2
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    .local v2, "pm":Landroid/content/pm/IPackageManager;
    invoke-virtual {p2}, Landroid/net/Uri;->getAuthority()Ljava/lang/String;

    move-result-object v0

    .local v0, "authority":Ljava/lang/String;
    invoke-direct {p0, v0, p4}, Lcom/android/server/am/ActivityManagerService;->getProviderInfoLocked(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;

    move-result-object v1

    .local v1, "pi":Landroid/content/pm/ProviderInfo;
    if-nez v1, :cond_3

    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "No content provider found for permission revoke: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {p2}, Landroid/net/Uri;->toSafeString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    monitor-exit p0

    goto :goto_0

    :cond_3
    iget v4, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    new-instance v5, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v6, 0x0

    invoke-direct {v5, p4, p2, v6}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v4, v5, p3}, Lcom/android/server/am/ActivityManagerService;->revokeUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;I)V

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method public revokeUriPermissionFromOwner(Landroid/os/IBinder;Landroid/net/Uri;II)V
    .locals 4
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "uri"    # Landroid/net/Uri;
    .param p3, "mode"    # I
    .param p4, "userId"    # I

    .prologue
    monitor-enter p0

    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/UriPermissionOwner;->fromExternalToken(Landroid/os/IBinder;)Lcom/android/server/am/UriPermissionOwner;

    move-result-object v0

    .local v0, "owner":Lcom/android/server/am/UriPermissionOwner;
    if-nez v0, :cond_0

    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Unknown owner: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    .end local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .restart local v0    # "owner":Lcom/android/server/am/UriPermissionOwner;
    :cond_0
    if-nez p2, :cond_1

    :try_start_1
    invoke-virtual {v0, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionsLocked(I)V

    :goto_0
    monitor-exit p0

    return-void

    :cond_1
    new-instance v1, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v2, 0x0

    invoke-direct {v1, p4, p2, v2}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-virtual {v0, v1, p3}, Lcom/android/server/am/UriPermissionOwner;->removeUriPermissionLocked(Lcom/android/server/am/ActivityManagerService$GrantUri;I)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_0
.end method

.method final scheduleAppGcLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .local v0, "now":J
    iget-wide v2, p1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v4, 0xea60

    add-long/2addr v2, v4

    cmp-long v2, v2, v0

    if-lez v2, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->addProcessToGcListLocked(Lcom/android/server/am/ProcessRecord;)V

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->scheduleAppGcsLocked()V

    goto :goto_0
.end method

.method final scheduleAppGcsLocked()V
    .locals 12

    .prologue
    const-wide/16 v10, 0x1388

    const/4 v8, 0x5

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-lez v6, :cond_1

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesToGc:Ljava/util/ArrayList;

    const/4 v7, 0x0

    invoke-virtual {v6, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v8}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .local v0, "msg":Landroid/os/Message;
    iget-wide v6, v1, Lcom/android/server/am/ProcessRecord;->lastRequestedGc:J

    const-wide/32 v8, 0xea60

    add-long v4, v6, v8

    .local v4, "when":J
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    .local v2, "now":J
    add-long v6, v2, v10

    cmp-long v6, v4, v6

    if-gez v6, :cond_0

    add-long v4, v2, v10

    :cond_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v6, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageAtTime(Landroid/os/Message;J)Z

    .end local v0    # "msg":Landroid/os/Message;
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v2    # "now":J
    .end local v4    # "when":J
    :cond_1
    return-void
.end method

.method scheduleStartProfilesLocked()V
    .locals 4

    .prologue
    const/16 v2, 0x28

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v0, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->hasMessages(I)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v1

    const-wide/16 v2, 0x3e8

    invoke-virtual {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    :cond_0
    return-void
.end method

.method sendContinueUserSwitchLocked(Lcom/android/server/am/UserStartedState;II)V
    .locals 3
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    const/4 v0, 0x0

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurUserSwitchCallback:Ljava/lang/Object;

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v1, 0x24

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x23

    invoke-virtual {v1, v2, p2, p3, p1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    return-void
.end method

.method sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 6
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v1, 0x0

    .local v1, "didSomething":Z
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v3, v0

    .local v3, "len$":I
    const/4 v2, 0x0

    .local v2, "i$":I
    :goto_0
    if-ge v2, v3, :cond_0

    aget-object v4, v0, v2

    .local v4, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v4, p1}, Lcom/android/server/am/BroadcastQueue;->sendPendingBroadcastsLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v5

    or-int/2addr v1, v5

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .end local v4    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return v1
.end method

.method sendUserSwitchBroadcastsLocked(II)V
    .locals 39
    .param p1, "oldUserId"    # I
    .param p2, "newUserId"    # I

    .prologue
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v36

    .local v36, "ident":J
    if-ltz p1, :cond_0

    :try_start_0
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const/4 v3, 0x0

    move/from16 v0, p1

    invoke-virtual {v2, v0, v3}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v38

    .local v38, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface/range {v38 .. v38}, Ljava/util/List;->size()I

    move-result v34

    .local v34, "count":I
    const/16 v35, 0x0

    .local v35, "i":I
    :goto_0
    move/from16 v0, v35

    move/from16 v1, v34

    if-ge v0, v1, :cond_0

    move-object/from16 v0, v38

    move/from16 v1, v35

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    iget v0, v2, Landroid/content/pm/UserInfo;->id:I

    move/from16 v17, v0

    .local v17, "profileUserId":I
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.USER_BACKGROUND"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .local v5, "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const-string v2, "android.intent.extra.user_handle"

    move/from16 v0, v17

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    const/4 v13, 0x0

    const/4 v14, 0x0

    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    add-int/lit8 v35, v35, 0x1

    goto :goto_0

    .end local v5    # "intent":Landroid/content/Intent;
    .end local v17    # "profileUserId":I
    .end local v34    # "count":I
    .end local v35    # "i":I
    .end local v38    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_0
    if-ltz p2, :cond_2

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mUserManager:Lcom/android/server/pm/UserManagerService;

    const/4 v3, 0x0

    move/from16 v0, p2

    invoke-virtual {v2, v0, v3}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v38

    .restart local v38    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface/range {v38 .. v38}, Ljava/util/List;->size()I

    move-result v34

    .restart local v34    # "count":I
    const/16 v35, 0x0

    .restart local v35    # "i":I
    :goto_1
    move/from16 v0, v35

    move/from16 v1, v34

    if-ge v0, v1, :cond_1

    move-object/from16 v0, v38

    move/from16 v1, v35

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/UserInfo;

    iget v0, v2, Landroid/content/pm/UserInfo;->id:I

    move/from16 v17, v0

    .restart local v17    # "profileUserId":I
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.USER_FOREGROUND"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .restart local v5    # "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const-string v2, "android.intent.extra.user_handle"

    move/from16 v0, v17

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, -0x1

    const/4 v13, 0x0

    const/4 v14, 0x0

    sget v15, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v16, 0x3e8

    move-object/from16 v2, p0

    invoke-direct/range {v2 .. v17}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    add-int/lit8 v35, v35, 0x1

    goto :goto_1

    .end local v5    # "intent":Landroid/content/Intent;
    .end local v17    # "profileUserId":I
    :cond_1
    new-instance v5, Landroid/content/Intent;

    const-string v2, "android.intent.action.USER_SWITCHED"

    invoke-direct {v5, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .restart local v5    # "intent":Landroid/content/Intent;
    const/high16 v2, 0x50000000

    invoke-virtual {v5, v2}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const-string v2, "android.intent.extra.user_handle"

    move/from16 v0, p2

    invoke-virtual {v5, v2, v0}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v22, 0x0

    const/16 v23, 0x0

    const/16 v24, 0x0

    const/16 v25, 0x0

    const/16 v26, 0x0

    const-string v27, "android.permission.MANAGE_USERS"

    const/16 v28, -0x1

    const/16 v29, 0x0

    const/16 v30, 0x0

    sget v31, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v32, 0x3e8

    const/16 v33, -0x1

    move-object/from16 v18, p0

    move-object/from16 v21, v5

    invoke-direct/range {v18 .. v33}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .end local v5    # "intent":Landroid/content/Intent;
    .end local v34    # "count":I
    .end local v35    # "i":I
    .end local v38    # "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    :cond_2
    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v2

    invoke-static/range {v36 .. v37}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public serviceDoneExecuting(Landroid/os/IBinder;III)V
    .locals 3
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "type"    # I
    .param p3, "startId"    # I
    .param p4, "res"    # I

    .prologue
    monitor-enter p0

    :try_start_0
    instance-of v0, p1, Lcom/android/server/am/ServiceRecord;

    if-nez v0, :cond_0

    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "serviceDoneExecuting: Invalid service token="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Invalid service token"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .end local p1    # "token":Landroid/os/IBinder;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .restart local p1    # "token":Landroid/os/IBinder;
    :cond_0
    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->serviceDoneExecutingLocked(Lcom/android/server/am/ServiceRecord;III)V

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-void
.end method

.method public setActivityController(Landroid/app/IActivityController;)V
    .locals 2
    .param p1, "controller"    # Landroid/app/IActivityController;

    .prologue
    const-string v0, "android.permission.SET_ACTIVITY_WATCHER"

    const-string v1, "setActivityController()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    monitor-enter p0

    :try_start_0
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mController:Landroid/app/IActivityController;

    invoke-static {}, Lcom/android/server/Watchdog;->getInstance()Lcom/android/server/Watchdog;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/android/server/Watchdog;->setActivityController(Landroid/app/IActivityController;)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setAlwaysFinish(Z)V
    .locals 3
    .param p1, "enabled"    # Z

    .prologue
    const-string v0, "android.permission.SET_ALWAYS_FINISH"

    const-string v1, "setAlwaysFinish()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v1

    const-string v2, "always_finish_activities"

    if-eqz p1, :cond_0

    const/4 v0, 0x1

    :goto_0
    invoke-static {v1, v2, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    monitor-enter p0

    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    monitor-exit p0

    return-void

    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setDebugApp(Ljava/lang/String;ZZ)V
    .locals 13
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "waitForDebugger"    # Z
    .param p3, "persistent"    # Z

    .prologue
    const-string v0, "android.permission.SET_DEBUG_APP"

    const-string v1, "setDebugApp()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v10

    .local v10, "ident":J
    if-eqz p3, :cond_0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v0}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v12

    .local v12, "resolver":Landroid/content/ContentResolver;
    const-string v0, "debug_app"

    invoke-static {v12, v0, p1}, Landroid/provider/Settings$Global;->putString(Landroid/content/ContentResolver;Ljava/lang/String;Ljava/lang/String;)Z

    const-string v1, "wait_for_debugger"

    if-eqz p2, :cond_3

    const/4 v0, 0x1

    :goto_0
    invoke-static {v12, v1, v0}, Landroid/provider/Settings$Global;->putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z

    .end local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    if-nez p3, :cond_1

    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    iput-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigDebugApp:Ljava/lang/String;

    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mOrigWaitForDebugger:Z

    :cond_1
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mDebugApp:Ljava/lang/String;

    iput-boolean p2, p0, Lcom/android/server/am/ActivityManagerService;->mWaitForDebugger:Z

    if-nez p3, :cond_4

    const/4 v0, 0x1

    :goto_1
    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mDebugTransient:Z

    if-eqz p1, :cond_2

    const/4 v2, -0x1

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x1

    const/4 v7, 0x0

    const/4 v8, -0x1

    const-string v9, "set debug app"

    move-object v0, p0

    move-object v1, p1

    invoke-direct/range {v0 .. v9}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    :cond_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    .restart local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_3
    const/4 v0, 0x0

    goto :goto_0

    .end local v12    # "resolver":Landroid/content/ContentResolver;
    :cond_4
    const/4 v0, 0x0

    goto :goto_1

    :catchall_0
    move-exception v0

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :catchall_1
    move-exception v0

    invoke-static {v10, v11}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0
.end method

.method final setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V
    .locals 5
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x1

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-eq v0, p1, :cond_1

    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v0, :cond_2

    iget-object v0, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v0, v0, Lcom/android/server/am/TaskRecord;->voiceInteractor:Lcom/android/internal/app/IVoiceInteractor;

    if-eqz v0, :cond_2

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->startRunningVoiceLocked()V

    :goto_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " setFocusedActivity"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, p1, v1}, Lcom/android/server/am/ActivityStackSupervisor;->setFocusedStack(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V

    if-eqz p1, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v0, v1, v4}, Lcom/android/server/wm/WindowManagerService;->setFocusedApp(Landroid/os/IBinder;Z)V

    :cond_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V

    :cond_1
    const/16 v1, 0x755b

    const/4 v0, 0x2

    new-array v2, v0, [Ljava/lang/Object;

    const/4 v0, 0x0

    iget v3, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v2, v0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-nez v0, :cond_3

    const-string v0, "NULL"

    :goto_1
    aput-object v0, v2, v4

    invoke-static {v1, v2}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    return-void

    :cond_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->finishRunningVoiceLocked()V

    goto :goto_0

    :cond_3
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->shortComponentName:Ljava/lang/String;

    goto :goto_1
.end method

.method public setFocusedStack(I)V
    .locals 3
    .param p1, "stackId"    # I

    .prologue
    monitor-enter p0

    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v2, p1}, Lcom/android/server/am/ActivityStackSupervisor;->getStack(I)Lcom/android/server/am/ActivityStack;

    move-result-object v1

    .local v1, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v1, :cond_0

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    const-string v2, "setFocusedStack"

    invoke-virtual {p0, v0, v2}, Lcom/android/server/am/ActivityManagerService;->setFocusedActivityLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)V

    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    monitor-exit p0

    return-void

    .end local v1    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method public setFrontActivityScreenCompatMode(I)V
    .locals 2
    .param p1, "mode"    # I

    .prologue
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string v1, "setFrontActivityScreenCompatMode"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1}, Lcom/android/server/am/CompatModePackages;->setFrontActivityScreenCompatModeLocked(I)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setImmersive(Landroid/os/IBinder;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "immersive"    # Z

    .prologue
    monitor-enter p0

    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v0, :cond_0

    new-instance v1, Ljava/lang/IllegalArgumentException;

    invoke-direct {v1}, Ljava/lang/IllegalArgumentException;-><init>()V

    throw v1

    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .restart local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    :try_start_1
    iput-boolean p2, v0, Lcom/android/server/am/ActivityRecord;->immersive:Z

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mFocusedActivity:Lcom/android/server/am/ActivityRecord;

    if-ne v0, v1, :cond_1

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->applyUpdateLockStateLocked(Lcom/android/server/am/ActivityRecord;)V

    :cond_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-void
.end method

.method public setInstaller(Lcom/android/server/pm/Installer;)V
    .locals 0
    .param p1, "installer"    # Lcom/android/server/pm/Installer;

    .prologue
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mInstaller:Lcom/android/server/pm/Installer;

    return-void
.end method

.method public setLockScreenShown(Z)V
    .locals 4
    .param p1, "shown"    # Z

    .prologue
    const-string v2, "android.permission.DEVICE_POWER"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_0

    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.DEVICE_POWER"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .local v0, "ident":J
    if-eqz p1, :cond_1

    const/4 v2, 0x2

    :goto_0
    :try_start_1
    iput v2, p0, Lcom/android/server/am/ActivityManagerService;->mLockScreenShown:I

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    return-void

    :cond_1
    const/4 v2, 0x0

    goto :goto_0

    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .line 8506
    .end local v0    # "ident":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method setOpenGlTraceApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;)V
    .locals 4
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;

    .prologue
    monitor-enter p0

    :try_start_0
    const-string v1, "1"

    const-string v2, "ro.debuggable"

    const-string v3, "0"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .local v0, "isDebuggable":Z
    if-nez v0, :cond_0

    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Process not debuggable: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .end local v0    # "isDebuggable":Z
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .restart local v0    # "isDebuggable":Z
    :cond_0
    :try_start_1
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mOpenGlTraceApp:Ljava/lang/String;

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-void
.end method

.method public setPackageAskScreenCompat(Ljava/lang/String;Z)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "ask"    # Z

    .prologue
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string v1, "setPackageAskScreenCompat"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageAskCompatModeLocked(Ljava/lang/String;Z)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setPackageScreenCompatMode(Ljava/lang/String;I)V
    .locals 2
    .param p1, "packageName"    # Ljava/lang/String;
    .param p2, "mode"    # I

    .prologue
    const-string v0, "android.permission.SET_SCREEN_COMPATIBILITY"

    const-string v1, "setPackageScreenCompatMode"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCompatModePackages:Lcom/android/server/am/CompatModePackages;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/am/CompatModePackages;->setPackageScreenCompatModeLocked(Ljava/lang/String;I)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setProcessForeground(Landroid/os/IBinder;IZ)V
    .locals 8
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "pid"    # I
    .param p3, "isForeground"    # Z

    .prologue
    const-string v4, "android.permission.SET_PROCESS_LIMIT"

    const-string v5, "setProcessForeground()"

    invoke-virtual {p0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    monitor-enter p0

    const/4 v0, 0x0

    .local v0, "changed":Z
    :try_start_0
    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :try_start_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/android/server/am/ProcessRecord;

    .local v3, "pr":Lcom/android/server/am/ProcessRecord;
    if-nez v3, :cond_0

    if-eqz p3, :cond_0

    const-string v4, "ActivityManager"

    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    const-string v7, "setProcessForeground called on unknown pid: "

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v6

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-static {v4, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    monitor-exit v5
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :goto_0
    return-void

    :cond_0
    :try_start_3
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;

    .local v2, "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    if-eqz v2, :cond_2

    iget-object v4, v2, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;

    const/4 v6, 0x0

    invoke-interface {v4, v2, v6}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, p2}, Landroid/util/SparseArray;->remove(I)V

    if-eqz v3, :cond_1

    const/4 v4, 0x0

    iput-object v4, v3, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;

    :cond_1
    const/4 v0, 0x1

    :cond_2
    if-eqz p3, :cond_3

    if-eqz p1, :cond_3

    new-instance v1, Lcom/android/server/am/ActivityManagerService$9;

    invoke-direct {v1, p0}, Lcom/android/server/am/ActivityManagerService$9;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .local v1, "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    iput p2, v1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->pid:I

    iput-object p1, v1, Lcom/android/server/am/ActivityManagerService$ForegroundToken;->token:Landroid/os/IBinder;
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    const/4 v4, 0x0

    :try_start_4
    invoke-interface {p1, v1, v4}, Landroid/os/IBinder;->linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundProcesses:Landroid/util/SparseArray;

    invoke-virtual {v4, p2, v1}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    iput-object p1, v3, Lcom/android/server/am/ProcessRecord;->forcingToForeground:Landroid/os/IBinder;
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    const/4 v0, 0x1

    .end local v1    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    :cond_3
    :goto_1
    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    if-eqz v0, :cond_4

    :try_start_6
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    :cond_4
    monitor-exit p0

    goto :goto_0

    .end local v2    # "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .end local v3    # "pr":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    throw v4

    .line 10513
    :catchall_1
    move-exception v4

    :try_start_7
    monitor-exit v5
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    :try_start_8
    throw v4
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    .restart local v1    # "newToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v2    # "oldToken":Lcom/android/server/am/ActivityManagerService$ForegroundToken;
    .restart local v3    # "pr":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v4

    goto :goto_1
.end method

.method public setProcessLimit(I)V
    .locals 2
    .param p1, "max"    # I

    .prologue
    const-string v0, "android.permission.SET_PROCESS_LIMIT"

    const-string v1, "setProcessLimit()"

    invoke-virtual {p0, v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    monitor-enter p0

    if-gez p1, :cond_0

    const/16 v0, 0x20

    :goto_0
    :try_start_0
    iput v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessLimitOverride:I

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V

    return-void

    :cond_0
    move v0, p1

    goto :goto_0

    :catchall_0
    move-exception v0

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v0
.end method

.method setProfileApp(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;Landroid/app/ProfilerInfo;)V
    .locals 4
    .param p1, "app"    # Landroid/content/pm/ApplicationInfo;
    .param p2, "processName"    # Ljava/lang/String;
    .param p3, "profilerInfo"    # Landroid/app/ProfilerInfo;

    .prologue
    monitor-enter p0

    :try_start_0
    const-string v1, "1"

    const-string v2, "ro.debuggable"

    const-string v3, "0"

    invoke-static {v2, v3}, Landroid/os/SystemProperties;->get(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    .local v0, "isDebuggable":Z
    if-nez v0, :cond_0

    iget v1, p1, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v1, v1, 0x2

    if-nez v1, :cond_0

    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Process not debuggable: "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .end local v0    # "isDebuggable":Z
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    .restart local v0    # "isDebuggable":Z
    :cond_0
    :try_start_1
    iput-object p2, p0, Lcom/android/server/am/ActivityManagerService;->mProfileApp:Ljava/lang/String;

    iget-object v1, p3, Landroid/app/ProfilerInfo;->profileFile:Ljava/lang/String;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFile:Ljava/lang/String;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v1, :cond_1

    :try_start_2
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    invoke-virtual {v1}, Landroid/os/ParcelFileDescriptor;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_0
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :goto_0
    const/4 v1, 0x0

    :try_start_3
    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    :cond_1
    iget-object v1, p3, Landroid/app/ProfilerInfo;->profileFd:Landroid/os/ParcelFileDescriptor;

    iput-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileFd:Landroid/os/ParcelFileDescriptor;

    iget v1, p3, Landroid/app/ProfilerInfo;->samplingInterval:I

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mSamplingInterval:I

    iget-boolean v1, p3, Landroid/app/ProfilerInfo;->autoStopProfiler:Z

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mAutoStopProfiler:Z

    const/4 v1, 0x0

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mProfileType:I

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    return-void

    :catch_0
    move-exception v1

    goto :goto_0
.end method

.method public setRequestedOrientation(Landroid/os/IBinder;I)V
    .locals 7
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "requestedOrientation"    # I

    .prologue
    monitor-enter p0

    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v1

    .local v1, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v1, :cond_0

    monitor-exit p0

    :goto_0
    return-void

    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .local v2, "origId":J
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v5, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    invoke-virtual {v4, v5, p2}, Lcom/android/server/wm/WindowManagerService;->setAppOrientation(Landroid/view/IApplicationToken;I)V

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    invoke-virtual {v1, v4}, Lcom/android/server/am/ActivityRecord;->mayFreezeScreenLocked(Lcom/android/server/am/ProcessRecord;)Z

    move-result v4

    if-eqz v4, :cond_2

    iget-object v4, v1, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    :goto_1
    invoke-virtual {v5, v6, v4}, Lcom/android/server/wm/WindowManagerService;->updateOrientationFromAppTokens(Landroid/content/res/Configuration;Landroid/os/IBinder;)Landroid/content/res/Configuration;

    move-result-object v0

    .local v0, "config":Landroid/content/res/Configuration;
    if-eqz v0, :cond_1

    const/4 v4, 0x1

    iput-boolean v4, v1, Lcom/android/server/am/ActivityRecord;->frozenBeforeDestroy:Z

    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v0, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    move-result v4

    if-nez v4, :cond_1

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    :cond_1
    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto :goto_0

    .end local v0    # "config":Landroid/content/res/Configuration;
    .end local v1    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v2    # "origId":J
    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    .restart local v1    # "r":Lcom/android/server/am/ActivityRecord;
    .restart local v2    # "origId":J
    :cond_2
    const/4 v4, 0x0

    goto :goto_1
.end method

.method public setServiceForeground(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V
    .locals 6
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "id"    # I
    .param p4, "notification"    # Landroid/app/Notification;
    .param p5, "removeNotification"    # Z

    .prologue
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move v5, p5

    invoke-virtual/range {v0 .. v5}, Lcom/android/server/am/ActiveServices;->setServiceForegroundLocked(Landroid/content/ComponentName;Landroid/os/IBinder;ILandroid/app/Notification;Z)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setSystemProcess()V
    .locals 6

    .prologue
    :try_start_0
    const-string v3, "activity"

    const/4 v4, 0x1

    invoke-static {v3, p0, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;Z)V

    const-string v3, "procstats"

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string v3, "meminfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$MemBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$MemBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string v3, "gfxinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$GraphicsBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string v3, "dbinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$DbBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$DbBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string v3, "cpuinfo"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$CpuBinder;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$CpuBinder;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    const-string v3, "permission"

    new-instance v4, Lcom/android/server/am/ActivityManagerService$PermissionController;

    invoke-direct {v4, p0}, Lcom/android/server/am/ActivityManagerService$PermissionController;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-static {v3, v4}, Landroid/os/ServiceManager;->addService(Ljava/lang/String;Landroid/os/IBinder;)V

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v3}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v3

    const-string v4, "android"

    const/16 v5, 0x400

    invoke-virtual {v3, v4, v5}, Landroid/content/pm/PackageManager;->getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v2

    .local v2, "info":Landroid/content/pm/ApplicationInfo;
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {p0}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/Class;->getClassLoader()Ljava/lang/ClassLoader;

    move-result-object v4

    invoke-virtual {v3, v2, v4}, Landroid/app/ActivityThread;->installSystemApplicationInfo(Landroid/content/pm/ApplicationInfo;Ljava/lang/ClassLoader;)V

    monitor-enter p0
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    :try_start_1
    iget-object v3, v2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v2, v3, v4, v5}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    const/4 v3, 0x1

    iput-boolean v3, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    sget v3, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    const/16 v3, -0x10

    iput v3, v0, Lcom/android/server/am/ProcessRecord;->maxAdj:I

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    invoke-virtual {v3}, Landroid/app/ActivityThread;->getApplicationThread()Landroid/app/ActivityThread$ApplicationThread;

    move-result-object v3

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v0, v3, v4}, Lcom/android/server/am/ProcessRecord;->makeActive(Landroid/app/IApplicationThread;Lcom/android/server/am/ProcessStatsService;)V

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v3, v4, v5, v0}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v4
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    iget v5, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v3, v5, v0}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    monitor-exit v4
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    const/4 v3, 0x0

    const/4 v4, 0x0

    :try_start_3
    invoke-virtual {p0, v0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    return-void

    :catchall_0
    move-exception v3

    :try_start_4
    monitor-exit v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    :try_start_5
    throw v3

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v3

    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :try_start_6
    throw v3
    :try_end_6
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_6 .. :try_end_6} :catch_0

    .end local v2    # "info":Landroid/content/pm/ApplicationInfo;
    :catch_0
    move-exception v1

    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    new-instance v3, Ljava/lang/RuntimeException;

    const-string v4, "Unable to find android system package"

    invoke-direct {v3, v4, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3
.end method

.method public setSystemServiceManager(Lcom/android/server/SystemServiceManager;)V
    .locals 0
    .param p1, "mgr"    # Lcom/android/server/SystemServiceManager;

    .prologue
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    return-void
.end method

.method public setTaskDescription(Landroid/os/IBinder;Landroid/app/ActivityManager$TaskDescription;)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "td"    # Landroid/app/ActivityManager$TaskDescription;

    .prologue
    monitor-enter p0

    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .local v0, "r":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_0

    invoke-virtual {v0, p2}, Lcom/android/server/am/ActivityRecord;->setTaskDescription(Landroid/app/ActivityManager$TaskDescription;)V

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {v1}, Lcom/android/server/am/TaskRecord;->updateTaskDescription()V

    :cond_0
    monitor-exit p0

    return-void

    .end local v0    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public setTestPssMode(Z)V
    .locals 4
    .param p1, "enabled"    # Z

    .prologue
    monitor-enter p0

    :try_start_0
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mTestPssMode:Z

    if-eqz p1, :cond_0

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    const/4 v2, 0x1

    const/4 v3, 0x1

    invoke-virtual {p0, v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->requestPssAllProcsLocked(JZZ)V

    :cond_0
    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public setUsageStatsManager(Landroid/app/usage/UsageStatsManagerInternal;)V
    .locals 0
    .param p1, "usageStatsManager"    # Landroid/app/usage/UsageStatsManagerInternal;

    .prologue
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    return-void
.end method

.method public setUserIsMonkey(Z)V
    .locals 6
    .param p1, "userIsMonkey"    # Z

    .prologue
    monitor-enter p0

    :try_start_0
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v0

    .local v0, "callingPid":I
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v2, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .local v1, "precessRecord":Lcom/android/server/am/ProcessRecord;
    if-nez v1, :cond_0

    new-instance v2, Ljava/lang/SecurityException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unknown process: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    .end local v0    # "callingPid":I
    .end local v1    # "precessRecord":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    throw v2

    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2

    .restart local v0    # "callingPid":I
    .restart local v1    # "precessRecord":Lcom/android/server/am/ProcessRecord;
    :cond_0
    :try_start_3
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    if-nez v2, :cond_1

    new-instance v2, Ljava/lang/SecurityException;

    const-string v4, "Only an instrumentation process with a UiAutomation can call setUserIsMonkey"

    invoke-direct {v2, v4}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_1
    monitor-exit v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    iput-boolean p1, p0, Lcom/android/server/am/ActivityManagerService;->mUserIsMonkey:Z

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    return-void
.end method

.method public setWindowManager(Lcom/android/server/wm/WindowManagerService;)V
    .locals 1
    .param p1, "wm"    # Lcom/android/server/wm/WindowManagerService;

    .prologue
    iput-object p1, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStackSupervisor;->setWindowManager(Lcom/android/server/wm/WindowManagerService;)V

    return-void
.end method

.method public shouldUpRecreateTask(Landroid/os/IBinder;Ljava/lang/String;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "destAffinity"    # Ljava/lang/String;

    .prologue
    monitor-enter p0

    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forToken(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .local v0, "srec":Lcom/android/server/am/ActivityRecord;
    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    if-eqz v1, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    if-eqz v1, :cond_0

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-object v1, v1, Lcom/android/server/am/TaskRecord;->stack:Lcom/android/server/am/ActivityStack;

    invoke-virtual {v1, v0, p2}, Lcom/android/server/am/ActivityStack;->shouldUpRecreateTaskLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;)Z

    move-result v1

    monitor-exit p0

    :goto_0
    return v1

    :cond_0
    monitor-exit p0

    const/4 v1, 0x0

    goto :goto_0

    .end local v0    # "srec":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method final showAskCompatModeDialogLocked(Lcom/android/server/am/ActivityRecord;)V
    .locals 2
    .param p1, "r"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v0

    .local v0, "msg":Landroid/os/Message;
    const/16 v1, 0x1e

    iput v1, v0, Landroid/os/Message;->what:I

    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    iget-boolean v1, v1, Lcom/android/server/am/TaskRecord;->askedCompatMode:Z

    if-eqz v1, :cond_0

    const/4 p1, 0x0

    .end local p1    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_0
    iput-object p1, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    return-void
.end method

.method public showBootMessage(Ljava/lang/CharSequence;Z)V
    .locals 1
    .param p1, "msg"    # Ljava/lang/CharSequence;
    .param p2, "always"    # Z

    .prologue
    const-string v0, "showBootMessage"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0, p1, p2}, Lcom/android/server/wm/WindowManagerService;->showBootMessage(Ljava/lang/CharSequence;Z)V

    return-void
.end method

.method final showLaunchWarningLocked(Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V
    .locals 2
    .param p1, "cur"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "next"    # Lcom/android/server/am/ActivityRecord;

    .prologue
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mLaunchWarningShown:Z

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v1, Lcom/android/server/am/ActivityManagerService$6;

    invoke-direct {v1, p0, p1, p2}, Lcom/android/server/am/ActivityManagerService$6;-><init>(Lcom/android/server/am/ActivityManagerService;Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityRecord;)V

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    :cond_0
    return-void
.end method

.method public final showSafeModeOverlay()V
    .locals 6

    .prologue
    const/4 v5, -0x2

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-static {v2}, Landroid/view/LayoutInflater;->from(Landroid/content/Context;)Landroid/view/LayoutInflater;

    move-result-object v2

    const v3, #android:layout@safe_mode#t

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Landroid/view/LayoutInflater;->inflate(ILandroid/view/ViewGroup;)Landroid/view/View;

    move-result-object v1

    .local v1, "v":Landroid/view/View;
    new-instance v0, Landroid/view/WindowManager$LayoutParams;

    invoke-direct {v0}, Landroid/view/WindowManager$LayoutParams;-><init>()V

    .local v0, "lp":Landroid/view/WindowManager$LayoutParams;
    const/16 v2, 0x7df

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->type:I

    iput v5, v0, Landroid/view/WindowManager$LayoutParams;->width:I

    iput v5, v0, Landroid/view/WindowManager$LayoutParams;->height:I

    const v2, 0x800053

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->gravity:I

    invoke-virtual {v1}, Landroid/view/View;->getBackground()Landroid/graphics/drawable/Drawable;

    move-result-object v2

    invoke-virtual {v2}, Landroid/graphics/drawable/Drawable;->getOpacity()I

    move-result v2

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->format:I

    const/16 v2, 0x18

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->flags:I

    iget v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    or-int/lit8 v2, v2, 0x10

    iput v2, v0, Landroid/view/WindowManager$LayoutParams;->privateFlags:I

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    const-string v3, "window"

    invoke-virtual {v2, v3}, Landroid/content/Context;->getSystemService(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/view/WindowManager;

    invoke-interface {v2, v1, v0}, Landroid/view/WindowManager;->addView(Landroid/view/View;Landroid/view/ViewGroup$LayoutParams;)V

    return-void
.end method

.method public showWaitingForDebugger(Landroid/app/IApplicationThread;Z)V
    .locals 3
    .param p1, "who"    # Landroid/app/IApplicationThread;
    .param p2, "waiting"    # Z

    .prologue
    monitor-enter p0

    if-eqz p1, :cond_0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->getRecordForAppLocked(Landroid/app/IApplicationThread;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    :goto_0
    if-nez v0, :cond_1

    monitor-exit p0

    :goto_1
    return-void

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_0
    const/4 v0, 0x0

    goto :goto_0

    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v1

    .local v1, "msg":Landroid/os/Message;
    const/4 v2, 0x6

    iput v2, v1, Landroid/os/Message;->what:I

    iput-object v0, v1, Landroid/os/Message;->obj:Ljava/lang/Object;

    if-eqz p2, :cond_2

    const/4 v2, 0x1

    :goto_2
    iput v2, v1, Landroid/os/Message;->arg1:I

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v2, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    monitor-exit p0

    goto :goto_1

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v1    # "msg":Landroid/os/Message;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .restart local v0    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v1    # "msg":Landroid/os/Message;
    :cond_2
    const/4 v2, 0x0

    goto :goto_2
.end method

.method public shutdown(I)Z
    .locals 3
    .param p1, "timeout"    # I

    .prologue
    const-string v1, "android.permission.SHUTDOWN"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires permission android.permission.SHUTDOWN"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_0
    const/4 v0, 0x0

    .local v0, "timedout":Z
    monitor-enter p0

    const/4 v1, 0x1

    :try_start_0
    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mShuttingDown:Z

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->updateEventDispatchingLocked()V

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1, p1}, Lcom/android/server/am/ActivityStackSupervisor;->shutdownLocked(I)Z

    move-result v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v1}, Lcom/android/server/AppOpsService;->shutdown()V

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    invoke-virtual {v1}, Landroid/app/usage/UsageStatsManagerInternal;->prepareShutdown()V

    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->shutdown()V

    monitor-enter p0

    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/ProcessStatsService;->shutdownLocked()V

    const/4 v1, 0x0

    const/4 v2, 0x1

    invoke-virtual {p0, v1, v2}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    return v0

    :catchall_0
    move-exception v1

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v1

    :catchall_1
    move-exception v1

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    throw v1
.end method

.method public signalPersistentProcesses(I)V
    .locals 4
    .param p1, "sig"    # I
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const/16 v2, 0xa

    if-eq p1, v2, :cond_0

    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Only SIGNAL_USR1 is allowed"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_0
    monitor-enter p0

    :try_start_0
    const-string v2, "android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v2

    if-eqz v2, :cond_1

    new-instance v2, Ljava/lang/SecurityException;

    const-string v3, "Requires permission android.permission.SIGNAL_PERSISTENT_PROCESSES"

    invoke-direct {v2, v3}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v2

    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    :cond_1
    :try_start_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v0, v2, -0x1

    .local v0, "i":I
    :goto_0
    if-ltz v0, :cond_3

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/android/server/am/ProcessRecord;

    .local v1, "r":Lcom/android/server/am/ProcessRecord;
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_2

    iget-boolean v2, v1, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_2

    iget v2, v1, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v2, p1}, Landroid/os/Process;->sendSignal(II)V

    :cond_2
    add-int/lit8 v0, v0, -0x1

    goto :goto_0

    .end local v1    # "r":Lcom/android/server/am/ProcessRecord;
    :cond_3
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-void
.end method

.method skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 4
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_0

    aget-object v3, v0, v1

    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method skipPendingBroadcastLocked(I)V
    .locals 6
    .param p1, "pid"    # I

    .prologue
    const-string v4, "ActivityManager"

    const-string v5, "Unattached app died before broadcast acknowledged, skipping"

    invoke-static {v4, v5}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mBroadcastQueues:[Lcom/android/server/am/BroadcastQueue;

    .local v0, "arr$":[Lcom/android/server/am/BroadcastQueue;
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_0

    aget-object v3, v0, v1

    .local v3, "queue":Lcom/android/server/am/BroadcastQueue;
    invoke-virtual {v3, p1}, Lcom/android/server/am/BroadcastQueue;->skipPendingBroadcastLocked(I)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .end local v3    # "queue":Lcom/android/server/am/BroadcastQueue;
    :cond_0
    return-void
.end method

.method public final startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
    .locals 10
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intents"    # [Landroid/content/Intent;
    .param p4, "resolvedTypes"    # [Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "options"    # Landroid/os/Bundle;
    .param p7, "userId"    # I

    .prologue
    const-string v0, "startActivities"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string v6, "startActivity"

    const/4 v7, 0x0

    move-object v0, p0

    move/from16 v3, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, -0x1

    move-object v1, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->startActivities(Landroid/app/IApplicationThread;ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I

    move-result v9

    .local v9, "ret":I
    return v9
.end method

.method final startActivitiesInPackage(ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I
    .locals 10
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intents"    # [Landroid/content/Intent;
    .param p4, "resolvedTypes"    # [Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "options"    # Landroid/os/Bundle;
    .param p7, "userId"    # I

    .prologue
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    const/4 v4, 0x0

    const/4 v5, 0x2

    const-string v6, "startActivityInPackage"

    const/4 v7, 0x0

    move-object v0, p0

    move/from16 v3, p7

    invoke-virtual/range {v0 .. v7}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v1, 0x0

    move v2, p1

    move-object v3, p2

    move-object v4, p3

    move-object v5, p4

    move-object v6, p5

    move-object/from16 v7, p6

    move/from16 v8, p7

    invoke-virtual/range {v0 .. v8}, Lcom/android/server/am/ActivityStackSupervisor;->startActivities(Landroid/app/IApplicationThread;ILjava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I

    move-result v9

    .local v9, "ret":I
    return v9
.end method

.method public final startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I
    .locals 12
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;

    .prologue
    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v11

    move-object v0, p0

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move-object/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move-object/from16 v9, p9

    move-object/from16 v10, p10

    invoke-virtual/range {v0 .. v11}, Lcom/android/server/am/ActivityManagerService;->startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I

    move-result v0

    return v0
.end method

.method public final startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/IActivityManager$WaitResult;
    .locals 20
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    const-string v1, "startActivityAndWait"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string v7, "startActivityAndWait"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p11

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    new-instance v14, Landroid/app/IActivityManager$WaitResult;

    invoke-direct {v14}, Landroid/app/IActivityManager$WaitResult;-><init>()V

    .local v14, "res":Landroid/app/IActivityManager$WaitResult;
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object/from16 v2, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v13, p9

    move-object/from16 v16, p10

    move/from16 v17, p11

    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    return-object v14
.end method

.method public final startActivityAsCaller(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 23
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    monitor-enter p0

    if-nez p5, :cond_0

    :try_start_0
    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Must be called from an activity"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    :cond_0
    :try_start_1
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p5

    invoke-virtual {v1, v0}, Lcom/android/server/am/ActivityStackSupervisor;->isInAnyStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v22

    .local v22, "sourceRecord":Lcom/android/server/am/ActivityRecord;
    if-nez v22, :cond_1

    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Called with bad activity token: "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, p5

    invoke-virtual {v2, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_1
    move-object/from16 v0, v22

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v1, v1, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    const-string v2, "android"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_2

    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Must be called from an activity that is declared in the android package"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_2
    move-object/from16 v0, v22

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-nez v1, :cond_3

    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Called without a process attached to activity"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_3
    move-object/from16 v0, v22

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getAppId(I)I

    move-result v1

    const/16 v2, 0x3e8

    if-eq v1, v2, :cond_4

    move-object/from16 v0, v22

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    move-object/from16 v0, v22

    iget v2, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    if-eq v1, v2, :cond_4

    new-instance v1, Ljava/lang/SecurityException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Calling activity in uid "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v22

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v5, v5, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, " must be system uid or original calling uid "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    move-object/from16 v0, v22

    iget v5, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_4
    move-object/from16 v0, v22

    iget v3, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    .local v3, "targetUid":I
    move-object/from16 v0, v22

    iget-object v4, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    .local v4, "targetPackage":Ljava/lang/String;
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    const/16 v1, -0x2710

    move/from16 v0, p11

    if-ne v0, v1, :cond_5

    move-object/from16 v0, v22

    iget-object v1, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-static {v1}, Landroid/os/UserHandle;->getUserId(I)I

    move-result p11

    :cond_5
    :try_start_2
    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v16, p10

    move/from16 v17, p11

    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I
    :try_end_2
    .catch Ljava/lang/SecurityException; {:try_start_2 .. :try_end_2} :catch_0

    move-result v21

    .local v21, "ret":I
    return v21

    .end local v21    # "ret":I
    :catch_0
    move-exception v20

    .local v20, "e":Ljava/lang/SecurityException;
    throw v20
.end method

.method public final startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 20
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    const-string v1, "startActivity"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string v7, "startActivity"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p11

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object/from16 v2, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v13, p9

    move-object/from16 v16, p10

    move/from16 v17, p11

    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v1

    return v1
.end method

.method public final startActivityFromRecents(ILandroid/os/Bundle;)I
    .locals 2
    .param p1, "taskId"    # I
    .param p2, "options"    # Landroid/os/Bundle;

    .prologue
    const-string v1, "android.permission.START_TASKS_FROM_RECENTS"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    const-string v0, "Permission Denial: startActivityFromRecents called without android.permission.START_TASKS_FROM_RECENTS"

    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    invoke-virtual {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->startActivityFromRecentsInner(ILandroid/os/Bundle;)I

    move-result v1

    return v1
.end method

.method final startActivityFromRecentsInner(ILandroid/os/Bundle;)I
    .locals 13
    .param p1, "taskId"    # I
    .param p2, "options"    # Landroid/os/Bundle;

    .prologue
    const/4 v7, 0x0

    const/4 v4, 0x0

    monitor-enter p0

    :try_start_0
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->recentTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v12

    .local v12, "task":Lcom/android/server/am/TaskRecord;
    if-nez v12, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Task "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " not found."

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v0, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    .end local v12    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0

    .restart local v12    # "task":Lcom/android/server/am/TaskRecord;
    :cond_0
    :try_start_1
    invoke-virtual {v12}, Lcom/android/server/am/TaskRecord;->getRootActivity()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    if-eqz v0, :cond_1

    iget v0, v12, Lcom/android/server/am/TaskRecord;->taskId:I

    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->moveTaskToFrontLocked(IILandroid/os/Bundle;)V

    const/4 v0, 0x2

    monitor-exit p0

    :goto_0
    return v0

    :cond_1
    iget v1, v12, Lcom/android/server/am/TaskRecord;->mCallingUid:I

    .local v1, "callingUid":I
    iget-object v2, v12, Lcom/android/server/am/TaskRecord;->mCallingPackage:Ljava/lang/String;

    .local v2, "callingPackage":Ljava/lang/String;
    iget-object v3, v12, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    .local v3, "intent":Landroid/content/Intent;
    const/high16 v0, 0x100000

    invoke-virtual {v3, v0}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    iget v10, v12, Lcom/android/server/am/TaskRecord;->userId:I

    .local v10, "userId":I
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    move-object v0, p0

    move-object v5, v4

    move-object v6, v4

    move v8, v7

    move-object v9, p2

    move-object v11, v4

    invoke-virtual/range {v0 .. v12}, Lcom/android/server/am/ActivityManagerService;->startActivityInPackage(ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v0

    goto :goto_0
.end method

.method final startActivityInPackage(ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I
    .locals 21
    .param p1, "uid"    # I
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "options"    # Landroid/os/Bundle;
    .param p10, "userId"    # I
    .param p11, "container"    # Landroid/app/IActivityContainer;
    .param p12, "inTask"    # Lcom/android/server/am/TaskRecord;

    .prologue
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string v7, "startActivityInPackage"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p10

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p10

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    move/from16 v3, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v16, p9

    move/from16 v17, p10

    move-object/from16 v18, p11

    move-object/from16 v19, p12

    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v20

    .local v20, "ret":I
    return v20
.end method

.method public startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IntentSender;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I
    .locals 18
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/IntentSender;
    .param p3, "fillInIntent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "flagsMask"    # I
    .param p9, "flagsValues"    # I
    .param p10, "options"    # Landroid/os/Bundle;

    .prologue
    const-string v3, "startActivityIntentSender"

    move-object/from16 v0, p0

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    if-eqz p3, :cond_0

    invoke-virtual/range {p3 .. p3}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v3

    if-eqz v3, :cond_0

    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "File descriptors passed in Intent"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    :cond_0
    invoke-virtual/range {p2 .. p2}, Landroid/content/IntentSender;->getTarget()Landroid/content/IIntentSender;

    move-result-object v16

    .local v16, "sender":Landroid/content/IIntentSender;
    move-object/from16 v0, v16

    instance-of v3, v0, Lcom/android/server/am/PendingIntentRecord;

    if-nez v3, :cond_1

    new-instance v3, Ljava/lang/IllegalArgumentException;

    const-string v4, "Bad PendingIntent object"

    invoke-direct {v3, v4}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v3

    :cond_1
    move-object/from16 v2, v16

    check-cast v2, Lcom/android/server/am/PendingIntentRecord;

    .local v2, "pir":Lcom/android/server/am/PendingIntentRecord;
    monitor-enter p0

    :try_start_0
    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v17

    .local v17, "stack":Lcom/android/server/am/ActivityStack;
    move-object/from16 v0, v17

    iget-object v3, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    if-eqz v3, :cond_2

    move-object/from16 v0, v17

    iget-object v3, v0, Lcom/android/server/am/ActivityStack;->mResumedActivity:Lcom/android/server/am/ActivityRecord;

    iget-object v3, v3, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v4

    if-ne v3, v4, :cond_2

    const-wide/16 v4, 0x0

    move-object/from16 v0, p0

    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    :cond_2
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    const/4 v3, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v14, 0x0

    move-object/from16 v4, p3

    move-object/from16 v5, p4

    move-object/from16 v8, p5

    move-object/from16 v9, p6

    move/from16 v10, p7

    move/from16 v11, p8

    move/from16 v12, p9

    move-object/from16 v13, p10

    invoke-virtual/range {v2 .. v14}, Lcom/android/server/am/PendingIntentRecord;->sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;Landroid/app/IActivityContainer;)I

    move-result v15

    .local v15, "ret":I
    return v15

    .end local v15    # "ret":I
    .end local v17    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v3

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v3
.end method

.method public final startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I
    .locals 21
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "callingPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/os/IBinder;
    .param p6, "resultWho"    # Ljava/lang/String;
    .param p7, "requestCode"    # I
    .param p8, "startFlags"    # I
    .param p9, "config"    # Landroid/content/res/Configuration;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    const-string v1, "startActivityWithConfig"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string v7, "startActivityWithConfig"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v4, p11

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, -0x1

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    move-object/from16 v2, p1

    move-object/from16 v4, p2

    move-object/from16 v5, p3

    move-object/from16 v6, p4

    move-object/from16 v9, p5

    move-object/from16 v10, p6

    move/from16 v11, p7

    move/from16 v12, p8

    move-object/from16 v15, p9

    move-object/from16 v16, p10

    move/from16 v17, p11

    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v20

    .local v20, "ret":I
    return v20
.end method

.method startAppProblemLocked(Lcom/android/server/am/ProcessRecord;)V
    .locals 7
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/4 v4, 0x0

    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentProfileIds:[I

    .local v0, "arr$":[I
    array-length v2, v0

    .local v2, "len$":I
    const/4 v1, 0x0

    .local v1, "i$":I
    :goto_0
    if-ge v1, v2, :cond_1

    aget v3, v0, v1

    .local v3, "userId":I
    iget v4, p1, Lcom/android/server/am/ProcessRecord;->userId:I

    if-ne v4, v3, :cond_0

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    iget-object v5, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v5, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v6, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->flags:I

    invoke-static {v4, v5, v6}, Landroid/app/ApplicationErrorReport;->getErrorReportReceiver(Landroid/content/Context;Ljava/lang/String;I)Landroid/content/ComponentName;

    move-result-object v4

    iput-object v4, p1, Lcom/android/server/am/ProcessRecord;->errorReportReceiver:Landroid/content/ComponentName;

    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .end local v3    # "userId":I
    :cond_1
    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->skipCurrentReceiverLocked(Lcom/android/server/am/ProcessRecord;)V

    return-void
.end method

.method startAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)Lcom/android/server/am/ActivityManagerService$Association;
    .locals 9
    .param p1, "sourceUid"    # I
    .param p2, "sourceProcess"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "targetComponent"    # Landroid/content/ComponentName;
    .param p5, "targetProcess"    # Ljava/lang/String;

    .prologue
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v1, :cond_1

    const/4 v0, 0x0

    :cond_0
    :goto_0
    return-object v0

    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/util/ArrayMap;

    .local v6, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    if-nez v6, :cond_2

    new-instance v6, Landroid/util/ArrayMap;

    .end local v6    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    invoke-direct {v6}, Landroid/util/ArrayMap;-><init>()V

    .restart local v6    # "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v1, p3, v6}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    :cond_2
    invoke-virtual {v6, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Landroid/util/SparseArray;

    .local v8, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    if-nez v8, :cond_3

    new-instance v8, Landroid/util/SparseArray;

    .end local v8    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    invoke-direct {v8}, Landroid/util/SparseArray;-><init>()V

    .restart local v8    # "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    invoke-virtual {v6, p4, v8}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_3
    invoke-virtual {v8, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Landroid/util/ArrayMap;

    .local v7, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-nez v7, :cond_4

    new-instance v7, Landroid/util/ArrayMap;

    .end local v7    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    invoke-direct {v7}, Landroid/util/ArrayMap;-><init>()V

    .restart local v7    # "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    invoke-virtual {v8, p1, v7}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    :cond_4
    invoke-virtual {v7, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Association;

    .local v0, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-nez v0, :cond_5

    new-instance v0, Lcom/android/server/am/ActivityManagerService$Association;

    .end local v0    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    move v1, p1

    move-object v2, p2

    move v3, p3

    move-object v4, p4

    move-object v5, p5

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService$Association;-><init>(ILjava/lang/String;ILandroid/content/ComponentName;Ljava/lang/String;)V

    .restart local v0    # "ass":Lcom/android/server/am/ActivityManagerService$Association;
    invoke-virtual {v7, p2, v0}, Landroid/util/ArrayMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    :cond_5
    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    add-int/lit8 v1, v1, 0x1

    iput v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mCount:I

    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/lit8 v1, v1, 0x1

    iput v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    iget v1, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    const/4 v2, 0x1

    if-ne v1, v2, :cond_0

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    iput-wide v2, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    goto :goto_0
.end method

.method startHomeActivityLocked(ILjava/lang/String;)Z
    .locals 8
    .param p1, "userId"    # I
    .param p2, "reason"    # Ljava/lang/String;

    .prologue
    const/4 v4, 0x1

    iget v5, p0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    if-ne v5, v4, :cond_1

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    if-nez v5, :cond_1

    const/4 v4, 0x0

    :cond_0
    :goto_0
    return v4

    :cond_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getHomeIntent()Landroid/content/Intent;

    move-result-object v3

    .local v3, "intent":Landroid/content/Intent;
    const/16 v5, 0x400

    invoke-direct {p0, v3, v5, p1}, Lcom/android/server/am/ActivityManagerService;->resolveActivityInfo(Landroid/content/Intent;II)Landroid/content/pm/ActivityInfo;

    move-result-object v0

    .local v0, "aInfo":Landroid/content/pm/ActivityInfo;
    if-eqz v0, :cond_0

    new-instance v5, Landroid/content/ComponentName;

    iget-object v6, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v6, v6, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v7, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v5, v6, v7}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v3, v5}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    new-instance v1, Landroid/content/pm/ActivityInfo;

    invoke-direct {v1, v0}, Landroid/content/pm/ActivityInfo;-><init>(Landroid/content/pm/ActivityInfo;)V

    .end local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    .local v1, "aInfo":Landroid/content/pm/ActivityInfo;
    iget-object v5, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    invoke-virtual {p0, v5, p1}, Lcom/android/server/am/ActivityManagerService;->getAppInfoForUser(Landroid/content/pm/ApplicationInfo;I)Landroid/content/pm/ApplicationInfo;

    move-result-object v5

    iput-object v5, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v5, v1, Landroid/content/pm/ActivityInfo;->processName:Ljava/lang/String;

    iget-object v6, v1, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v6, v6, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {p0, v5, v6, v4}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v2

    .local v2, "app":Lcom/android/server/am/ProcessRecord;
    if-eqz v2, :cond_2

    iget-object v5, v2, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    if-nez v5, :cond_3

    :cond_2
    invoke-virtual {v3}, Landroid/content/Intent;->getFlags()I

    move-result v5

    const/high16 v6, 0x10000000

    or-int/2addr v5, v6

    invoke-virtual {v3, v5}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    iget-object v5, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v5, v3, v1, p2}, Lcom/android/server/am/ActivityStackSupervisor;->startHomeActivity(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Ljava/lang/String;)V

    :cond_3
    move-object v0, v1

    .end local v1    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v0    # "aInfo":Landroid/content/pm/ActivityInfo;
    goto :goto_0
.end method

.method public startInPlaceAnimationOnFrontMostApplication(Landroid/app/ActivityOptions;)V
    .locals 3
    .param p1, "opts"    # Landroid/app/ActivityOptions;
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getAnimationType()I

    move-result v0

    const/16 v1, 0xa

    if-ne v0, v1, :cond_0

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getCustomInPlaceResId()I

    move-result v0

    if-nez v0, :cond_1

    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Expected in-place ActivityOption with valid animation"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    const/16 v1, 0x11

    const/4 v2, 0x0

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->prepareAppTransition(IZ)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getPackageName()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {p1}, Landroid/app/ActivityOptions;->getCustomInPlaceResId()I

    move-result v2

    invoke-virtual {v0, v1, v2}, Lcom/android/server/wm/WindowManagerService;->overridePendingAppTransitionInPlace(Ljava/lang/String;I)V

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v0}, Lcom/android/server/wm/WindowManagerService;->executeAppTransition()V

    return-void
.end method

.method public startInstrumentation(Landroid/content/ComponentName;Ljava/lang/String;ILandroid/os/Bundle;Landroid/app/IInstrumentationWatcher;Landroid/app/IUiAutomationConnection;ILjava/lang/String;)Z
    .locals 22
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "profileFile"    # Ljava/lang/String;
    .param p3, "flags"    # I
    .param p4, "arguments"    # Landroid/os/Bundle;
    .param p5, "watcher"    # Landroid/app/IInstrumentationWatcher;
    .param p6, "uiAutomationConnection"    # Landroid/app/IUiAutomationConnection;
    .param p7, "userId"    # I
    .param p8, "abiOverride"    # Ljava/lang/String;

    .prologue
    const-string v4, "startInstrumentation"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v6

    const/4 v8, 0x0

    const/4 v9, 0x2

    const-string v10, "startInstrumentation"

    const/4 v11, 0x0

    move-object/from16 v4, p0

    move/from16 v7, p7

    invoke-virtual/range {v4 .. v11}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p7

    if-eqz p4, :cond_0

    invoke-virtual/range {p4 .. p4}, Landroid/os/Bundle;->hasFileDescriptors()Z

    move-result v4

    if-eqz v4, :cond_0

    new-instance v4, Ljava/lang/IllegalArgumentException;

    const-string v5, "File descriptors passed in Bundle"

    invoke-direct {v4, v5}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v4

    :cond_0
    monitor-enter p0

    const/16 v16, 0x0

    .local v16, "ii":Landroid/content/pm/InstrumentationInfo;
    const/4 v14, 0x0

    .local v14, "ai":Landroid/content/pm/ApplicationInfo;
    :try_start_0
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    const/16 v5, 0x400

    .line 14543
    move-object/from16 v0, p1

    invoke-virtual {v4, v0, v5}, Landroid/content/pm/PackageManager;->getInstrumentationInfo(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;

    move-result-object v16

    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/16 v6, 0x400

    move/from16 v0, p7

    invoke-interface {v4, v5, v6, v0}, Landroid/content/pm/IPackageManager;->getApplicationInfo(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo;
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_1
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    move-result-object v14

    :goto_0
    if-nez v16, :cond_1

    :try_start_1
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unable to find instrumentation info for: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    const/4 v4, 0x0

    monitor-exit p0

    :goto_1
    return v4

    :cond_1
    if-nez v14, :cond_2

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Unable to find instrumentation target package: "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    invoke-direct {v0, v1, v2, v4}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    const/4 v4, 0x0

    monitor-exit p0

    goto :goto_1

    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v4

    :cond_2
    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    move-object/from16 v0, v16

    iget-object v6, v0, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5, v6}, Landroid/content/pm/PackageManager;->checkSignatures(Ljava/lang/String;Ljava/lang/String;)I

    move-result v17

    .local v17, "match":I
    if-gez v17, :cond_3

    const/4 v4, -0x1

    move/from16 v0, v17

    if-eq v0, v4, :cond_3

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Permission Denial: starting instrumentation "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, p1

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " from pid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ", uid="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " not allowed because package "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " does not have a signature matching the target "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v18

    .local v18, "msg":Ljava/lang/String;
    move-object/from16 v0, p0

    move-object/from16 v1, p5

    move-object/from16 v2, p1

    move-object/from16 v3, v18

    invoke-direct {v0, v1, v2, v3}, Lcom/android/server/am/ActivityManagerService;->reportStartInstrumentationFailure(Landroid/app/IInstrumentationWatcher;Landroid/content/ComponentName;Ljava/lang/String;)V

    new-instance v4, Ljava/lang/SecurityException;

    move-object/from16 v0, v18

    invoke-direct {v4, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v4

    .end local v18    # "msg":Ljava/lang/String;
    :cond_3
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v20

    .local v20, "origId":J
    move-object/from16 v0, v16

    iget-object v5, v0, Landroid/content/pm/InstrumentationInfo;->targetPackage:Ljava/lang/String;

    const/4 v6, -0x1

    const/4 v7, 0x1

    const/4 v8, 0x0

    const/4 v9, 0x1

    const/4 v10, 0x1

    const/4 v11, 0x0

    const-string v13, "start instr"

    move-object/from16 v4, p0

    move/from16 v12, p7

    invoke-direct/range {v4 .. v13}, Lcom/android/server/am/ActivityManagerService;->forceStopPackageLocked(Ljava/lang/String;IZZZZZILjava/lang/String;)Z

    const/4 v4, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, p8

    invoke-virtual {v0, v14, v4, v1}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;

    move-result-object v15

    .local v15, "app":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p1

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationClass:Landroid/content/ComponentName;

    iput-object v14, v15, Lcom/android/server/am/ProcessRecord;->instrumentationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p2

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationProfileFile:Ljava/lang/String;

    move-object/from16 v0, p4

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationArguments:Landroid/os/Bundle;

    move-object/from16 v0, p5

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationWatcher:Landroid/app/IInstrumentationWatcher;

    move-object/from16 v0, p6

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationUiAutomationConnection:Landroid/app/IUiAutomationConnection;

    move-object/from16 v0, p1

    iput-object v0, v15, Lcom/android/server/am/ProcessRecord;->instrumentationResultClass:Landroid/content/ComponentName;

    invoke-static/range {v20 .. v21}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    const/4 v4, 0x1

    goto/16 :goto_1

    .end local v15    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v17    # "match":I
    .end local v20    # "origId":J
    :catch_0
    move-exception v4

    goto/16 :goto_0

    :catch_1
    move-exception v4

    goto/16 :goto_0
.end method

.method startIsolatedProcess(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Runnable;)I
    .locals 17
    .param p1, "entryPoint"    # Ljava/lang/String;
    .param p2, "entryPointArgs"    # [Ljava/lang/String;
    .param p3, "processName"    # Ljava/lang/String;
    .param p4, "abiOverride"    # Ljava/lang/String;
    .param p5, "uid"    # I
    .param p6, "crashHandler"    # Ljava/lang/Runnable;

    .prologue
    monitor-enter p0

    .line 14549
    :try_start_0
    new-instance v3, Landroid/content/pm/ApplicationInfo;

    invoke-direct {v3}, Landroid/content/pm/ApplicationInfo;-><init>()V

    .local v3, "info":Landroid/content/pm/ApplicationInfo;
    const/16 v1, 0x3e8

    iput v1, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    move-object/from16 v0, p3

    iput-object v0, v3, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    move-object/from16 v0, p1

    iput-object v0, v3, Landroid/content/pm/ApplicationInfo;->className:Ljava/lang/String;

    const-string v1, "android"

    iput-object v1, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const/4 v4, 0x0

    const/4 v5, 0x0

    const-string v6, ""

    const/4 v7, 0x0

    const/4 v8, 0x1

    const/4 v9, 0x1

    const/4 v11, 0x1

    move-object/from16 v1, p0

    move-object/from16 v2, p3

    move/from16 v10, p5

    move-object/from16 v12, p4

    move-object/from16 v13, p1

    move-object/from16 v14, p2

    move-object/from16 v15, p6

    invoke-virtual/range {v1 .. v15}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v16

    .local v16, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v16, :cond_0

    move-object/from16 v0, v16

    iget v1, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    :goto_0
    monitor-exit p0

    return v1

    :cond_0
    const/4 v1, 0x0

    goto :goto_0

    .end local v3    # "info":Landroid/content/pm/ApplicationInfo;
    .end local v16    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public startLockTaskMode(I)V
    .locals 4
    .param p1, "taskId"    # I

    .prologue
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3, p1}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object v2

    .local v2, "task":Lcom/android/server/am/TaskRecord;
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    if-eqz v2, :cond_0

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->startLockTaskMode(Lcom/android/server/am/TaskRecord;)V

    :cond_0
    return-void

    .end local v2    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v3

    :try_start_2
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v3
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public startLockTaskMode(Landroid/os/IBinder;)V
    .locals 5
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "ident":J
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->forToken(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v2, :cond_1

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :cond_0
    :goto_0
    return-void

    :cond_1
    :try_start_2
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    .local v3, "task":Lcom/android/server/am/TaskRecord;
    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    if-eqz v3, :cond_0

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->startLockTaskMode(Lcom/android/server/am/TaskRecord;)V

    goto :goto_0

    .end local v2    # "r":Lcom/android/server/am/ActivityRecord;
    .end local v3    # "task":Lcom/android/server/am/TaskRecord;
    :catchall_0
    move-exception v4

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v4
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception v4

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
.end method

.method startLockTaskMode(Lcom/android/server/am/TaskRecord;)V
    .locals 9
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;

    .prologue
    const/4 v5, 0x1

    const/4 v6, 0x0

    monitor-enter p0

    :try_start_0
    iget-object v7, p1, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v7}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v7

    invoke-virtual {v7}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v3

    .local v3, "pkg":Ljava/lang/String;
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v7

    const/16 v8, 0x3e8

    if-ne v7, v8, :cond_1

    move v2, v5

    .local v2, "isSystemInitiated":Z
    :goto_0
    if-nez v2, :cond_2

    invoke-direct {p0, v3}, Lcom/android/server/am/ActivityManagerService;->isLockTaskAuthorized(Ljava/lang/String;)Z

    move-result v7

    if-nez v7, :cond_2

    const-class v5, Lcom/android/server/statusbar/StatusBarManagerInternal;

    invoke-static {v5}, Lcom/android/server/LocalServices;->getService(Ljava/lang/Class;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/statusbar/StatusBarManagerInternal;

    .local v4, "statusBarManager":Lcom/android/server/statusbar/StatusBarManagerInternal;
    if-eqz v4, :cond_0

    invoke-interface {v4}, Lcom/android/server/statusbar/StatusBarManagerInternal;->showScreenPinningRequest()V

    .end local v4    # "statusBarManager":Lcom/android/server/statusbar/StatusBarManagerInternal;
    :cond_0
    :goto_1
    return-void

    .end local v2    # "isSystemInitiated":Z
    .end local v3    # "pkg":Ljava/lang/String;
    :catchall_0
    move-exception v5

    :try_start_1
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v5

    .restart local v3    # "pkg":Ljava/lang/String;
    :cond_1
    move v2, v6

    goto :goto_0

    .restart local v2    # "isSystemInitiated":Z
    :cond_2
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "ident":J
    :try_start_2
    monitor-enter p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_2

    :try_start_3
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget v8, p1, Lcom/android/server/am/TaskRecord;->taskId:I

    invoke-virtual {v7, v8}, Lcom/android/server/am/ActivityStackSupervisor;->anyTaskForIdLocked(I)Lcom/android/server/am/TaskRecord;

    move-result-object p1

    if-eqz p1, :cond_5

    if-nez v2, :cond_4

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v7}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v7

    if-eqz v7, :cond_3

    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v7}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v7

    invoke-virtual {v7}, Lcom/android/server/am/ActivityStack;->topTask()Lcom/android/server/am/TaskRecord;

    move-result-object v7

    if-eq p1, v7, :cond_4

    :cond_3
    new-instance v5, Ljava/lang/IllegalArgumentException;

    const-string v6, "Invalid task, not in foreground"

    invoke-direct {v5, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v5

    :catchall_1
    move-exception v5

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    throw v5
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    :catchall_2
    move-exception v5

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v5

    :cond_4
    :try_start_5
    iget-object v7, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    if-nez v2, :cond_6

    :goto_2
    const-string v6, "startLockTask"

    invoke-virtual {v7, p1, v5, v6}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ZLjava/lang/String;)V

    :cond_5
    monitor-exit p0
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_1

    :cond_6
    move v5, v6

    goto :goto_2
.end method

.method public startLockTaskModeOnCurrent()V
    .locals 5
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const-string v3, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v4, "startLockTaskModeOnCurrent"

    invoke-virtual {p0, v3, v4}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "ident":J
    const/4 v2, 0x0

    .local v2, "r":Lcom/android/server/am/ActivityRecord;
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->topRunningActivityLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    iget-object v3, v2, Lcom/android/server/am/ActivityRecord;->task:Lcom/android/server/am/TaskRecord;

    invoke-virtual {p0, v3}, Lcom/android/server/am/ActivityManagerService;->startLockTaskMode(Lcom/android/server/am/TaskRecord;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v3

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v3
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception v3

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v3
.end method

.method public startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z
    .locals 34
    .param p1, "callingActivity"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "options"    # Landroid/os/Bundle;

    .prologue
    if-eqz p2, :cond_0

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_0

    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static/range {p1 .. p1}, Lcom/android/server/am/ActivityRecord;->isInStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityRecord;

    move-result-object v28

    .local v28, "r":Lcom/android/server/am/ActivityRecord;
    if-nez v28, :cond_1

    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    const/4 v2, 0x0

    monitor-exit p0

    :goto_0
    return v2

    :cond_1
    move-object/from16 v0, v28

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_2

    move-object/from16 v0, v28

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_3

    :cond_2
    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    const/4 v2, 0x0

    monitor-exit p0

    goto :goto_0

    .end local v28    # "r":Lcom/android/server/am/ActivityRecord;
    :catchall_0
    move-exception v2

    :goto_1
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .restart local v28    # "r":Lcom/android/server/am/ActivityRecord;
    :cond_3
    :try_start_1
    new-instance v4, Landroid/content/Intent;

    move-object/from16 v0, p2

    invoke-direct {v4, v0}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .end local p2    # "intent":Landroid/content/Intent;
    .local v4, "intent":Landroid/content/Intent;
    :try_start_2
    move-object/from16 v0, v28

    iget-object v2, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v2}, Landroid/content/Intent;->getData()Landroid/net/Uri;

    move-result-object v2

    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v3}, Landroid/content/Intent;->getType()Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v4, v2, v3}, Landroid/content/Intent;->setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent;

    const/4 v2, 0x0

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result v2

    and-int/lit8 v2, v2, 0x8

    if-eqz v2, :cond_7

    const/16 v24, 0x1

    .local v24, "debug":Z
    :goto_2
    const/4 v6, 0x0

    .local v6, "aInfo":Landroid/content/pm/ActivityInfo;
    :try_start_3
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v2

    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;

    const v5, 0x10400

    invoke-static {}, Landroid/os/UserHandle;->getCallingUserId()I

    move-result v7

    invoke-interface {v2, v4, v3, v5, v7}, Landroid/content/pm/IPackageManager;->queryIntentActivities(Landroid/content/Intent;Ljava/lang/String;II)Ljava/util/List;

    move-result-object v31

    .local v31, "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    if-eqz v31, :cond_8

    invoke-interface/range {v31 .. v31}, Ljava/util/List;->size()I

    move-result v23

    .local v23, "N":I
    :goto_3
    const/16 v25, 0x0

    .local v25, "i":I
    :goto_4
    move/from16 v0, v25

    move/from16 v1, v23

    if-ge v0, v1, :cond_5

    move-object/from16 v0, v31

    move/from16 v1, v25

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v29

    check-cast v29, Landroid/content/pm/ResolveInfo;

    .local v29, "rInfo":Landroid/content/pm/ResolveInfo;
    move-object/from16 v0, v29

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    move-object/from16 v0, v29

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    add-int/lit8 v25, v25, 0x1

    move/from16 v0, v25

    move/from16 v1, v23

    if-ge v0, v1, :cond_4

    move-object/from16 v0, v31

    move/from16 v1, v25

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v6, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    :cond_4
    if-eqz v24, :cond_5

    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Next matching activity: found current "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v28

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "/"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move-object/from16 v0, v28

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->info:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I

    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Next matching activity: next is "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v5, v6, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "/"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    iget-object v5, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->v(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_0
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    .end local v23    # "N":I
    .end local v25    # "i":I
    .end local v29    # "rInfo":Landroid/content/pm/ResolveInfo;
    .end local v31    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_5
    :goto_5
    if-nez v6, :cond_a

    :try_start_4
    invoke-static/range {p3 .. p3}, Landroid/app/ActivityOptions;->abort(Landroid/os/Bundle;)V

    if-eqz v24, :cond_6

    const-string v2, "ActivityManager"

    const-string v3, "Next matching activity: nothing found"

    invoke-static {v2, v3}, Landroid/util/Slog;->d(Ljava/lang/String;Ljava/lang/String;)I

    :cond_6
    const/4 v2, 0x0

    monitor-exit p0

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto/16 :goto_0

    .end local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .end local v24    # "debug":Z
    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    :cond_7
    const/16 v24, 0x0

    goto/16 :goto_2

    .restart local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v24    # "debug":Z
    .restart local v31    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_8
    const/16 v23, 0x0

    goto/16 :goto_3

    .restart local v23    # "N":I
    .restart local v25    # "i":I
    .restart local v29    # "rInfo":Landroid/content/pm/ResolveInfo;
    :cond_9
    add-int/lit8 v25, v25, 0x1

    goto/16 :goto_4

    .end local v23    # "N":I
    .end local v25    # "i":I
    .end local v29    # "rInfo":Landroid/content/pm/ResolveInfo;
    .end local v31    # "resolves":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    :cond_a
    new-instance v2, Landroid/content/ComponentName;

    iget-object v3, v6, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v5, v6, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    invoke-virtual {v4}, Landroid/content/Intent;->getFlags()I

    move-result v2

    const v3, -0x1e000001

    and-int/2addr v2, v3

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    move-object/from16 v0, v28

    iget-boolean v0, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    move/from16 v33, v0

    .local v33, "wasFinishing":Z
    const/4 v2, 0x1

    move-object/from16 v0, v28

    iput-boolean v2, v0, Lcom/android/server/am/ActivityRecord;->finishing:Z

    move-object/from16 v0, v28

    iget-object v0, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    move-object/from16 v32, v0

    .local v32, "resultTo":Lcom/android/server/am/ActivityRecord;
    move-object/from16 v0, v28

    iget-object v10, v0, Lcom/android/server/am/ActivityRecord;->resultWho:Ljava/lang/String;

    .local v10, "resultWho":Ljava/lang/String;
    move-object/from16 v0, v28

    iget v11, v0, Lcom/android/server/am/ActivityRecord;->requestCode:I

    .local v11, "requestCode":I
    const/4 v2, 0x0

    move-object/from16 v0, v28

    iput-object v2, v0, Lcom/android/server/am/ActivityRecord;->resultTo:Lcom/android/server/am/ActivityRecord;

    if-eqz v32, :cond_b

    move-object/from16 v0, v32

    move-object/from16 v1, v28

    invoke-virtual {v0, v1, v10, v11}, Lcom/android/server/am/ActivityRecord;->removeResultsLocked(Lcom/android/server/am/ActivityRecord;Ljava/lang/String;I)V

    :cond_b
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v26

    .local v26, "origId":J
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, v28

    iget-object v3, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v3, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v28

    iget-object v5, v0, Lcom/android/server/am/ActivityRecord;->resolvedType:Ljava/lang/String;

    const/4 v7, 0x0

    const/4 v8, 0x0

    if-eqz v32, :cond_c

    move-object/from16 v0, v32

    iget-object v9, v0, Lcom/android/server/am/ActivityRecord;->appToken:Landroid/view/IApplicationToken$Stub;

    :goto_6
    const/4 v12, -0x1

    move-object/from16 v0, v28

    iget v13, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    move-object/from16 v0, v28

    iget-object v14, v0, Lcom/android/server/am/ActivityRecord;->launchedFromPackage:Ljava/lang/String;

    const/4 v15, -0x1

    move-object/from16 v0, v28

    iget v0, v0, Lcom/android/server/am/ActivityRecord;->launchedFromUid:I

    move/from16 v16, v0

    const/16 v17, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    move-object/from16 v18, p3

    invoke-virtual/range {v2 .. v22}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/pm/ActivityInfo;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IIILjava/lang/String;IIILandroid/os/Bundle;Z[Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v30

    .local v30, "res":I
    invoke-static/range {v26 .. v27}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    move/from16 v0, v33

    move-object/from16 v1, v28

    iput-boolean v0, v1, Lcom/android/server/am/ActivityRecord;->finishing:Z

    if-eqz v30, :cond_d

    const/4 v2, 0x0

    monitor-exit p0

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto/16 :goto_0

    .end local v30    # "res":I
    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    :cond_c
    const/4 v9, 0x0

    goto :goto_6

    .restart local v30    # "res":I
    :cond_d
    const/4 v2, 0x1

    monitor-exit p0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto/16 :goto_0

    .end local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .end local v10    # "resultWho":Ljava/lang/String;
    .end local v11    # "requestCode":I
    .end local v24    # "debug":Z
    .end local v26    # "origId":J
    .end local v30    # "res":I
    .end local v32    # "resultTo":Lcom/android/server/am/ActivityRecord;
    .end local v33    # "wasFinishing":Z
    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    :catchall_1
    move-exception v2

    move-object/from16 p2, v4

    .end local v4    # "intent":Landroid/content/Intent;
    .restart local p2    # "intent":Landroid/content/Intent;
    goto/16 :goto_1

    .end local p2    # "intent":Landroid/content/Intent;
    .restart local v4    # "intent":Landroid/content/Intent;
    .restart local v6    # "aInfo":Landroid/content/pm/ActivityInfo;
    .restart local v24    # "debug":Z
    :catch_0
    move-exception v2

    goto/16 :goto_5
.end method

.method public startObservingNativeCrashes()V
    .locals 1

    .prologue
    new-instance v0, Lcom/android/server/am/NativeCrashListener;

    invoke-direct {v0, p0}, Lcom/android/server/am/NativeCrashListener;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    .local v0, "ncl":Lcom/android/server/am/NativeCrashListener;
    invoke-virtual {v0}, Lcom/android/server/am/NativeCrashListener;->start()V

    return-void
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;
    .locals 12
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingType"    # Ljava/lang/String;
    .param p6, "hostingName"    # Landroid/content/ComponentName;
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z
    .param p9, "isolatedUid"    # I
    .param p10, "keepIfLarge"    # Z
    .param p11, "abiOverride"    # Ljava/lang/String;
    .param p12, "entryPoint"    # Ljava/lang/String;
    .param p13, "entryPointArgs"    # [Ljava/lang/String;
    .param p14, "crashHandler"    # Ljava/lang/Runnable;

    .prologue
    invoke-static {}, Landroid/os/SystemClock;->elapsedRealtime()J

    move-result-wide v10

    .local v10, "startTime":J
    if-nez p8, :cond_1

    iget v2, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, p10

    invoke-virtual {p0, p1, v2, v0}, Lcom/android/server/am/ActivityManagerService;->getProcessRecordLocked(Ljava/lang/String;IZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    .local v3, "app":Lcom/android/server/am/ProcessRecord;
    const-string v2, "startProcess: after getProcessRecord"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    :goto_0
    if-eqz v3, :cond_3

    iget v2, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v2, :cond_3

    if-eqz p3, :cond_0

    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v2, :cond_2

    :cond_0
    iget-object v2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, p2, Landroid/content/pm/ApplicationInfo;->versionCode:I

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3, v2, v4, v6}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    const-string v2, "startProcess: done, added package to proc"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    move-object v2, v3

    :goto_1
    return-object v2

    .end local v3    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_1
    const/4 v3, 0x0

    .restart local v3    # "app":Lcom/android/server/am/ProcessRecord;
    goto :goto_0

    :cond_2
    const-string v2, "startProcess: bad proc running, killing"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    iget-object v2, v3, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-static {v2, v4}, Landroid/os/Process;->killProcessGroup(II)I

    const/4 v2, 0x1

    const/4 v4, 0x1

    invoke-direct {p0, v3, v2, v4}, Lcom/android/server/am/ActivityManagerService;->handleAppDiedLocked(Lcom/android/server/am/ProcessRecord;ZZ)V

    const-string v2, "startProcess: done killing old proc"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    :cond_3
    if-eqz p6, :cond_4

    invoke-virtual/range {p6 .. p6}, Landroid/content/ComponentName;->flattenToShortString()Ljava/lang/String;

    move-result-object v5

    .local v5, "hostingNameStr":Ljava/lang/String;
    :goto_2
    if-nez p8, :cond_6

    and-int/lit8 v2, p4, 0x4

    if-eqz v2, :cond_5

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v6}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v2

    if-eqz v2, :cond_6

    const/4 v2, 0x0

    goto :goto_1

    .end local v5    # "hostingNameStr":Ljava/lang/String;
    :cond_4
    const/4 v5, 0x0

    goto :goto_2

    .restart local v5    # "hostingNameStr":Ljava/lang/String;
    :cond_5
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCrashTimes:Lcom/android/internal/app/ProcessMap;

    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v6}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)V

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v6}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v2

    if-eqz v2, :cond_6

    const/16 v2, 0x7540

    const/4 v4, 0x3

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v6, 0x0

    iget v7, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v7}, Landroid/os/UserHandle;->getUserId(I)I

    move-result v7

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v4, v6

    const/4 v6, 0x1

    iget v7, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v4, v6

    const/4 v6, 0x2

    iget-object v7, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    aput-object v7, v4, v6

    invoke-static {v2, v4}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBadProcesses:Lcom/android/internal/app/ProcessMap;

    iget-object v4, p2, Landroid/content/pm/ApplicationInfo;->processName:Ljava/lang/String;

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v2, v4, v6}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)V

    if-eqz v3, :cond_6

    const/4 v2, 0x0

    iput-boolean v2, v3, Lcom/android/server/am/ProcessRecord;->bad:Z

    :cond_6
    if-nez v3, :cond_a

    const-string v2, "startProcess: creating new process record"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    move/from16 v0, p8

    move/from16 v1, p9

    invoke-virtual {p0, p2, p1, v0, v1}, Lcom/android/server/am/ActivityManagerService;->newProcessRecordLocked(Landroid/content/pm/ApplicationInfo;Ljava/lang/String;ZI)Lcom/android/server/am/ProcessRecord;

    move-result-object v3

    if-nez v3, :cond_7

    const-string v2, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Failed making new process record for "

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, "/"

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    iget v6, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v6, " isolated="

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move/from16 v0, p8

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v2, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v2, 0x0

    goto/16 :goto_1

    :cond_7
    move-object/from16 v0, p14

    iput-object v0, v3, Lcom/android/server/am/ProcessRecord;->crashHandler:Ljava/lang/Runnable;

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessNames:Lcom/android/internal/app/ProcessMap;

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, p1, v4, v3}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    if-eqz p8, :cond_8

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mIsolatedProcesses:Landroid/util/SparseArray;

    iget v4, v3, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v2, v4, v3}, Landroid/util/SparseArray;->put(ILjava/lang/Object;)V

    :cond_8
    const-string v2, "startProcess: done creating new process record"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    :goto_3
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v2, :cond_b

    invoke-virtual {p0, p2}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v2

    if-nez v2, :cond_b

    if-nez p7, :cond_b

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_9

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesOnHold:Ljava/util/ArrayList;

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_9
    const-string v2, "startProcess: returning with proc on hold"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    move-object v2, v3

    goto/16 :goto_1

    :cond_a
    iget-object v2, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget v4, p2, Landroid/content/pm/ApplicationInfo;->versionCode:I

    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3, v2, v4, v6}, Lcom/android/server/am/ProcessRecord;->addPackage(Ljava/lang/String;ILcom/android/server/am/ProcessStatsService;)Z

    const-string v2, "startProcess: added package to existing proc"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    goto :goto_3

    :cond_b
    const-string v2, "startProcess: stepping in to startProcess"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    move-object v2, p0

    move-object/from16 v4, p5

    move-object/from16 v6, p11

    move-object/from16 v7, p12

    move-object/from16 v8, p13

    invoke-direct/range {v2 .. v8}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)V

    const-string v2, "startProcess: done starting proc!"

    invoke-direct {p0, v10, v11, v2}, Lcom/android/server/am/ActivityManagerService;->checkTime(JLjava/lang/String;)V

    iget v2, v3, Lcom/android/server/am/ProcessRecord;->pid:I

    if-eqz v2, :cond_c

    move-object v2, v3

    goto/16 :goto_1

    :cond_c
    const/4 v2, 0x0

    goto/16 :goto_1
.end method

.method final startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;
    .locals 15
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingType"    # Ljava/lang/String;
    .param p6, "hostingName"    # Landroid/content/ComponentName;
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z
    .param p9, "keepIfLarge"    # Z

    .prologue
    const/4 v9, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    move-object v0, p0

    move-object/from16 v1, p1

    move-object/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p4

    move-object/from16 v5, p5

    move-object/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v10, p9

    invoke-virtual/range {v0 .. v14}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZIZLjava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/Runnable;)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    return-object v0
.end method

.method startProfilesLocked()V
    .locals 9

    .prologue
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v6

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const/4 v8, 0x0

    invoke-virtual {v6, v7, v8}, Lcom/android/server/pm/UserManagerService;->getProfiles(IZ)Ljava/util/List;

    move-result-object v3

    .local v3, "profiles":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    new-instance v4, Ljava/util/ArrayList;

    invoke-interface {v3}, Ljava/util/List;->size()I

    move-result v6

    invoke-direct {v4, v6}, Ljava/util/ArrayList;-><init>(I)V

    .local v4, "toStart":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/UserInfo;>;"
    invoke-interface {v3}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .local v1, "i$":Ljava/util/Iterator;
    :cond_0
    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v6

    if-eqz v6, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Landroid/content/pm/UserInfo;

    .local v5, "user":Landroid/content/pm/UserInfo;
    iget v6, v5, Landroid/content/pm/UserInfo;->flags:I

    and-int/lit8 v6, v6, 0x10

    const/16 v7, 0x10

    if-ne v6, v7, :cond_0

    iget v6, v5, Landroid/content/pm/UserInfo;->id:I

    iget v7, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    if-eq v6, v7, :cond_0

    invoke-interface {v4, v5}, Ljava/util/List;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .end local v5    # "user":Landroid/content/pm/UserInfo;
    :cond_1
    invoke-interface {v4}, Ljava/util/List;->size()I

    move-result v2

    .local v2, "n":I
    const/4 v0, 0x0

    .local v0, "i":I
    :goto_1
    if-ge v0, v2, :cond_2

    const/4 v6, 0x2

    if-ge v0, v6, :cond_2

    invoke-interface {v4, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Landroid/content/pm/UserInfo;

    iget v6, v6, Landroid/content/pm/UserInfo;->id:I

    invoke-virtual {p0, v6}, Lcom/android/server/am/ActivityManagerService;->startUserInBackground(I)Z

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_2
    if-ge v0, v2, :cond_3

    const-string v6, "ActivityManagerServiceMU"

    const-string v7, "More profiles than MAX_RUNNING_USERS"

    invoke-static {v6, v7}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :cond_3
    return-void
.end method

.method startRunningVoiceLocked()V
    .locals 1

    .prologue
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    iput-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mRunningVoice:Z

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateSleepIfNeededLocked()V

    :cond_0
    return-void
.end method

.method public startService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 10
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "userId"    # I

    .prologue
    const-string v0, "startService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v4

    .local v4, "callingPid":I
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v5

    .local v5, "callingUid":I
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .local v8, "origId":J
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    move-object v1, p1

    move-object v2, p2

    move-object v3, p3

    move v6, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;III)Landroid/content/ComponentName;

    move-result-object v7

    .local v7, "res":Landroid/content/ComponentName;
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    return-object v7

    .end local v4    # "callingPid":I
    .end local v5    # "callingUid":I
    .end local v7    # "res":Landroid/content/ComponentName;
    .end local v8    # "origId":J
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method startServiceInPackage(ILandroid/content/Intent;Ljava/lang/String;I)Landroid/content/ComponentName;
    .locals 10
    .param p1, "uid"    # I
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "userId"    # I

    .prologue
    monitor-enter p0

    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .local v8, "origId":J
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    const/4 v1, 0x0

    const/4 v4, -0x1

    move-object v2, p2

    move-object v3, p3

    move v5, p1

    move v6, p4

    invoke-virtual/range {v0 .. v6}, Lcom/android/server/am/ActiveServices;->startServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;III)Landroid/content/ComponentName;

    move-result-object v7

    .local v7, "res":Landroid/content/ComponentName;
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    return-object v7

    .end local v7    # "res":Landroid/content/ComponentName;
    .end local v8    # "origId":J
    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method startSetupActivityLocked()V
    .locals 29

    .prologue
    move-object/from16 v0, p0

    iget-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    if-eqz v2, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getContentResolver()Landroid/content/ContentResolver;

    move-result-object v25

    .local v25, "resolver":Landroid/content/ContentResolver;
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v3, 0x1

    if-eq v2, v3, :cond_0

    const-string v2, "device_provisioned"

    const/4 v3, 0x0

    move-object/from16 v0, v25

    invoke-static {v0, v2, v3}, Landroid/provider/Settings$Global;->getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I

    move-result v2

    if-eqz v2, :cond_0

    const/4 v2, 0x1

    .line 14551
    move-object/from16 v0, p0

    iput-boolean v2, v0, Lcom/android/server/am/ActivityManagerService;->mCheckedForSetup:Z

    new-instance v4, Landroid/content/Intent;

    const-string v2, "android.intent.action.UPGRADE_SETUP"

    invoke-direct {v4, v2}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .local v4, "intent":Landroid/content/Intent;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v2}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v2

    const/16 v3, 0x80

    invoke-virtual {v2, v4, v3}, Landroid/content/pm/PackageManager;->queryIntentActivities(Landroid/content/Intent;I)Ljava/util/List;

    move-result-object v27

    .local v27, "ris":Ljava/util/List;, "Ljava/util/List<Landroid/content/pm/ResolveInfo;>;"
    const/16 v26, 0x0

    .local v26, "ri":Landroid/content/pm/ResolveInfo;
    const/16 v23, 0x0

    .local v23, "i":I
    :goto_1
    if-eqz v27, :cond_2

    invoke-interface/range {v27 .. v27}, Ljava/util/List;->size()I

    move-result v2

    move/from16 v0, v23

    if-ge v0, v2, :cond_2

    move-object/from16 v0, v27

    move/from16 v1, v23

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/content/pm/ResolveInfo;

    iget-object v2, v2, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v2, v2, 0x1

    if-eqz v2, :cond_4

    move-object/from16 v0, v27

    move/from16 v1, v23

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v26

    .end local v26    # "ri":Landroid/content/pm/ResolveInfo;
    check-cast v26, Landroid/content/pm/ResolveInfo;

    .restart local v26    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_2
    if-eqz v26, :cond_0

    move-object/from16 v0, v26

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    if-eqz v2, :cond_5

    move-object/from16 v0, v26

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->metaData:Landroid/os/Bundle;

    const-string v3, "android.SETUP_VERSION"

    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v28

    .local v28, "vers":Ljava/lang/String;
    :goto_2
    if-nez v28, :cond_3

    move-object/from16 v0, v26

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    if-eqz v2, :cond_3

    move-object/from16 v0, v26

    iget-object v2, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v2, v2, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->metaData:Landroid/os/Bundle;

    const-string v3, "android.SETUP_VERSION"

    invoke-virtual {v2, v3}, Landroid/os/Bundle;->getString(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v28

    :cond_3
    const-string v2, "last_setup_shown"

    move-object/from16 v0, v25

    invoke-static {v0, v2}, Landroid/provider/Settings$Secure;->getString(Landroid/content/ContentResolver;Ljava/lang/String;)Ljava/lang/String;

    move-result-object v24

    .local v24, "lastVers":Ljava/lang/String;
    if-eqz v28, :cond_0

    move-object/from16 v0, v28

    move-object/from16 v1, v24

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    const/high16 v2, 0x10000000

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setFlags(I)Landroid/content/Intent;

    new-instance v2, Landroid/content/ComponentName;

    move-object/from16 v0, v26

    iget-object v3, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v3, v3, Landroid/content/pm/ActivityInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v26

    iget-object v5, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    iget-object v5, v5, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v2, v3, v5}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    invoke-virtual {v4, v2}, Landroid/content/Intent;->setComponent(Landroid/content/ComponentName;)Landroid/content/Intent;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v3, 0x0

    const/4 v5, 0x0

    move-object/from16 v0, v26

    iget-object v6, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v16, 0x0

    const/16 v17, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    const/16 v20, 0x0

    const/16 v21, 0x0

    const/16 v22, 0x0

    invoke-virtual/range {v2 .. v22}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;Landroid/content/pm/ActivityInfo;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IIILjava/lang/String;IIILandroid/os/Bundle;Z[Lcom/android/server/am/ActivityRecord;Lcom/android/server/am/ActivityStackSupervisor$ActivityContainer;Lcom/android/server/am/TaskRecord;)I

    goto/16 :goto_0

    .end local v24    # "lastVers":Ljava/lang/String;
    .end local v28    # "vers":Ljava/lang/String;
    :cond_4
    add-int/lit8 v23, v23, 0x1

    goto/16 :goto_1

    :cond_5
    const/16 v28, 0x0

    goto :goto_2
.end method

.method public startUserInBackground(I)Z
    .locals 1
    .param p1, "userId"    # I

    .prologue
    const/4 v0, 0x0

    invoke-direct {p0, p1, v0}, Lcom/android/server/am/ActivityManagerService;->startUser(IZ)Z

    move-result v0

    return v0
.end method

.method startUserInForeground(ILandroid/app/Dialog;)Z
    .locals 2
    .param p1, "userId"    # I
    .param p2, "dlg"    # Landroid/app/Dialog;

    .prologue
    const/4 v1, 0x1

    invoke-direct {p0, p1, v1}, Lcom/android/server/am/ActivityManagerService;->startUser(IZ)Z

    move-result v0

    .local v0, "result":Z
    invoke-virtual {p2}, Landroid/app/Dialog;->dismiss()V

    return v0
.end method

.method public startVoiceActivity(Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I
    .locals 21
    .param p1, "callingPackage"    # Ljava/lang/String;
    .param p2, "callingPid"    # I
    .param p3, "callingUid"    # I
    .param p4, "intent"    # Landroid/content/Intent;
    .param p5, "resolvedType"    # Ljava/lang/String;
    .param p6, "session"    # Landroid/service/voice/IVoiceInteractionSession;
    .param p7, "interactor"    # Lcom/android/internal/app/IVoiceInteractor;
    .param p8, "startFlags"    # I
    .param p9, "profilerInfo"    # Landroid/app/ProfilerInfo;
    .param p10, "options"    # Landroid/os/Bundle;
    .param p11, "userId"    # I

    .prologue
    const-string v1, "android.permission.BIND_VOICE_INTERACTION"

    move-object/from16 v0, p0

    invoke-virtual {v0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: startVoiceActivity() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.BIND_VOICE_INTERACTION"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v20

    .local v20, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    move-object/from16 v0, v20

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v1, Ljava/lang/SecurityException;

    move-object/from16 v0, v20

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .end local v20    # "msg":Ljava/lang/String;
    :cond_0
    if-eqz p6, :cond_1

    if-nez p7, :cond_2

    :cond_1
    new-instance v1, Ljava/lang/NullPointerException;

    const-string v2, "null session or interactor"

    invoke-direct {v1, v2}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_2
    const/4 v5, 0x0

    const/4 v6, 0x2

    const-string v7, "startVoiceActivity"

    const/4 v8, 0x0

    move-object/from16 v1, p0

    move/from16 v2, p2

    move/from16 v3, p3

    move/from16 v4, p11

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p11

    move-object/from16 v0, p0

    iget-object v1, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v2, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v14, 0x0

    const/4 v15, 0x0

    const/16 v18, 0x0

    const/16 v19, 0x0

    move/from16 v3, p3

    move-object/from16 v4, p1

    move-object/from16 v5, p4

    move-object/from16 v6, p5

    move-object/from16 v7, p6

    move-object/from16 v8, p7

    move/from16 v12, p8

    move-object/from16 v13, p9

    move-object/from16 v16, p10

    move/from16 v17, p11

    invoke-virtual/range {v1 .. v19}, Lcom/android/server/am/ActivityStackSupervisor;->startActivityMayWait(Landroid/app/IApplicationThread;ILjava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/app/IActivityManager$WaitResult;Landroid/content/res/Configuration;Landroid/os/Bundle;ILandroid/app/IActivityContainer;Lcom/android/server/am/TaskRecord;)I

    move-result v1

    return v1
.end method

.method public stopAppSwitches()V
    .locals 6

    .prologue
    const-wide/16 v4, 0x1388

    const-string v1, "android.permission.STOP_APP_SWITCHES"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    new-instance v1, Ljava/lang/SecurityException;

    const-string v2, "Requires permission android.permission.STOP_APP_SWITCHES"

    invoke-direct {v1, v2}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v2

    add-long/2addr v2, v4

    iput-wide v2, p0, Lcom/android/server/am/ActivityManagerService;->mAppSwitchesAllowedTime:J

    const/4 v1, 0x0

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mDidAppSwitch:Z

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x15

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v2, 0x15

    invoke-virtual {v1, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .local v0, "msg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/16 v2, 0x1388

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    monitor-exit p0

    return-void

    .end local v0    # "msg":Landroid/os/Message;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method stopAssociationLocked(ILjava/lang/String;ILandroid/content/ComponentName;)V
    .locals 10
    .param p1, "sourceUid"    # I
    .param p2, "sourceProcess"    # Ljava/lang/String;
    .param p3, "targetUid"    # I
    .param p4, "targetComponent"    # Landroid/content/ComponentName;

    .prologue
    iget-boolean v4, p0, Lcom/android/server/am/ActivityManagerService;->mTrackingAssociations:Z

    if-nez v4, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mAssociations:Landroid/util/SparseArray;

    invoke-virtual {v4, p3}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/util/ArrayMap;

    .local v1, "components":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Landroid/content/ComponentName;Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;>;"
    if-eqz v1, :cond_0

    invoke-virtual {v1, p4}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Landroid/util/SparseArray;

    .local v3, "sourceUids":Landroid/util/SparseArray;, "Landroid/util/SparseArray<Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;>;"
    if-eqz v3, :cond_0

    invoke-virtual {v3, p1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Landroid/util/ArrayMap;

    .local v2, "sourceProcesses":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Lcom/android/server/am/ActivityManagerService$Association;>;"
    if-eqz v2, :cond_0

    invoke-virtual {v2, p2}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ActivityManagerService$Association;

    .local v0, "ass":Lcom/android/server/am/ActivityManagerService$Association;
    if-eqz v0, :cond_0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-lez v4, :cond_0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    add-int/lit8 v4, v4, -0x1

    iput v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    iget v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mNesting:I

    if-nez v4, :cond_0

    iget-wide v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    iget-wide v8, v0, Lcom/android/server/am/ActivityManagerService$Association;->mStartTime:J

    sub-long/2addr v6, v8

    add-long/2addr v4, v6

    iput-wide v4, v0, Lcom/android/server/am/ActivityManagerService$Association;->mTime:J

    goto :goto_0
.end method

.method public stopLockTaskMode()V
    .locals 10

    .prologue
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .local v0, "callingUid":I
    const/16 v6, 0x3e8

    if-eq v0, v6, :cond_0

    :try_start_0
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    iget-object v6, v6, Lcom/android/server/am/ActivityStackSupervisor;->mLockTaskModeTask:Lcom/android/server/am/TaskRecord;

    iget-object v6, v6, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    invoke-virtual {v6}, Landroid/content/Intent;->getComponent()Landroid/content/ComponentName;

    move-result-object v6

    invoke-virtual {v6}, Landroid/content/ComponentName;->getPackageName()Ljava/lang/String;

    move-result-object v4

    .local v4, "pkg":Ljava/lang/String;
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v6}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v6

    invoke-static {}, Landroid/os/Binder;->getCallingUserHandle()Landroid/os/UserHandle;

    move-result-object v7

    invoke-virtual {v7}, Landroid/os/UserHandle;->getIdentifier()I

    move-result v7

    invoke-virtual {v6, v4, v7}, Landroid/content/pm/PackageManager;->getPackageUid(Ljava/lang/String;I)I

    move-result v5

    .local v5, "uid":I
    if-eq v5, v0, :cond_0

    new-instance v6, Ljava/lang/SecurityException;

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "Invalid uid, expected "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v5}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-direct {v6, v7}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v6
    :try_end_0
    .catch Landroid/content/pm/PackageManager$NameNotFoundException; {:try_start_0 .. :try_end_0} :catch_0

    .end local v4    # "pkg":Ljava/lang/String;
    .end local v5    # "uid":I
    :catch_0
    move-exception v1

    .local v1, "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    const-string v6, "ActivityManager"

    new-instance v7, Ljava/lang/StringBuilder;

    invoke-direct {v7}, Ljava/lang/StringBuilder;-><init>()V

    const-string v8, "stopLockTaskMode "

    invoke-virtual {v7, v8}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7, v1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v7

    invoke-static {v6, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    .end local v1    # "e":Landroid/content/pm/PackageManager$NameNotFoundException;
    :goto_0
    return-void

    :cond_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v2

    .local v2, "ident":J
    :try_start_1
    const-string v6, "ActivityManager"

    const-string v7, "stopLockTaskMode"

    invoke-static {v6, v7}, Landroid/util/Log;->d(Ljava/lang/String;Ljava/lang/String;)I

    monitor-enter p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    :try_start_2
    iget-object v6, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v7, 0x0

    const/4 v8, 0x0

    const-string v9, "stopLockTask"

    invoke-virtual {v6, v7, v8, v9}, Lcom/android/server/am/ActivityStackSupervisor;->setLockTaskModeLocked(Lcom/android/server/am/TaskRecord;ZLjava/lang/String;)V

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0

    :catchall_0
    move-exception v6

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v6
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception v6

    invoke-static {v2, v3}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v6
.end method

.method public stopLockTaskModeOnCurrent()V
    .locals 4
    .annotation system Ldalvik/annotation/Throws;
        value = {
            Landroid/os/RemoteException;
        }
    .end annotation

    .prologue
    const-string v2, "android.permission.MANAGE_ACTIVITY_STACKS"

    const-string v3, "stopLockTaskModeOnCurrent"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "ident":J
    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->stopLockTaskMode()V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    return-void

    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2
.end method

.method public stopService(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I
    .locals 2
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "service"    # Landroid/content/Intent;
    .param p3, "resolvedType"    # Ljava/lang/String;
    .param p4, "userId"    # I

    .prologue
    const-string v0, "stopService"

    invoke-virtual {p0, v0}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3, p4}, Lcom/android/server/am/ActiveServices;->stopServiceLocked(Landroid/app/IApplicationThread;Landroid/content/Intent;Ljava/lang/String;I)I

    move-result v0

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public stopServiceToken(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z
    .locals 1
    .param p1, "className"    # Landroid/content/ComponentName;
    .param p2, "token"    # Landroid/os/IBinder;
    .param p3, "startId"    # I

    .prologue
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->stopServiceTokenLocked(Landroid/content/ComponentName;Landroid/os/IBinder;I)Z

    move-result v0

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public stopUser(ILandroid/app/IStopUserCallback;)I
    .locals 4
    .param p1, "userId"    # I
    .param p2, "callback"    # Landroid/app/IStopUserCallback;

    .prologue
    const-string v1, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_0

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: switchUser() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.INTERACT_ACROSS_USERS_FULL"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v0

    .local v0, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v0}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v0}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .end local v0    # "msg":Ljava/lang/String;
    :cond_0
    if-gtz p1, :cond_1

    new-instance v1, Ljava/lang/IllegalArgumentException;

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v3, "Can\'t stop primary user "

    invoke-virtual {v2, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_1
    const-string v1, "no_debugging_features"

    invoke-virtual {p0, v1, p1}, Lcom/android/server/am/ActivityManagerService;->enforceShellRestriction(Ljava/lang/String;I)V

    monitor-enter p0

    :try_start_0
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->stopUserLocked(ILandroid/app/IStopUserCallback;)I

    move-result v1

    monitor-exit p0

    return v1

    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method public switchUser(I)Z
    .locals 6
    .param p1, "userId"    # I

    .prologue
    const/16 v5, 0x2e

    const/4 v2, 0x0

    const-string v3, "no_debugging_features"

    invoke-virtual {p0, v3, p1}, Lcom/android/server/am/ActivityManagerService;->enforceShellRestriction(Ljava/lang/String;I)V

    monitor-enter p0

    :try_start_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getUserManagerLocked()Lcom/android/server/pm/UserManagerService;

    move-result-object v3

    invoke-virtual {v3, p1}, Lcom/android/server/pm/UserManagerService;->getUserInfo(I)Landroid/content/pm/UserInfo;

    move-result-object v0

    .local v0, "userInfo":Landroid/content/pm/UserInfo;
    if-nez v0, :cond_0

    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "No user info for user #"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    monitor-exit p0

    :goto_0
    return v2

    :cond_0
    invoke-virtual {v0}, Landroid/content/pm/UserInfo;->isManagedProfile()Z

    move-result v3

    if-eqz v3, :cond_1

    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Cannot switch to User #"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4, p1}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, ": not a full user"

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    monitor-exit p0

    goto :goto_0

    .end local v0    # "userInfo":Landroid/content/pm/UserInfo;
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2

    .restart local v0    # "userInfo":Landroid/content/pm/UserInfo;
    :cond_1
    :try_start_1
    iget-object v1, v0, Landroid/content/pm/UserInfo;->name:Ljava/lang/String;

    .local v1, "userName":Ljava/lang/String;
    iput p1, p0, Lcom/android/server/am/ActivityManagerService;->mTargetUserId:I

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v3, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    iget-object v4, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v4, v5, p1, v2, v1}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(IIILjava/lang/Object;)Landroid/os/Message;

    move-result-object v2

    invoke-virtual {v3, v2}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    const/4 v2, 0x1

    goto :goto_0
.end method

.method public systemBackupRestored()V
    .locals 2

    .prologue
    monitor-enter p0

    :try_start_0
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    if-eqz v0, :cond_0

    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v0}, Lcom/android/server/am/TaskPersister;->restoreTasksFromOtherDeviceLocked()V

    :goto_0
    monitor-exit p0

    return-void

    :cond_0
    const-string v0, "ActivityManager"

    const-string v1, "System backup restored before system is ready"

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    goto :goto_0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public systemReady(Ljava/lang/Runnable;)V
    .locals 36
    .param p1, "goingCallback"    # Ljava/lang/Runnable;

    .prologue
    monitor-enter p0

    :try_start_0
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    if-eqz v4, :cond_1

    if-eqz p1, :cond_0

    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    :cond_0
    monitor-exit p0

    :goto_0
    return-void

    :cond_1
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->updateCurrentProfileIdsLocked()V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    if-nez v4, :cond_2

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4}, Lcom/android/server/am/TaskPersister;->restoreTasksLocked()Ljava/util/ArrayList;

    move-result-object v4

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4}, Lcom/android/server/am/TaskPersister;->restoreTasksFromOtherDeviceLocked()V

    const/4 v4, -0x1

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->cleanupRecentTasksLocked(I)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTaskPersister:Lcom/android/server/am/TaskPersister;

    invoke-virtual {v4}, Lcom/android/server/am/TaskPersister;->startPersisting()V

    :cond_2
    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    if-nez v4, :cond_5

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    if-eqz v4, :cond_3

    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v4

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v4

    :cond_3
    :try_start_1
    new-instance v24, Ljava/util/ArrayList;

    invoke-direct/range {v24 .. v24}, Ljava/util/ArrayList;-><init>()V

    .local v24, "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    new-instance v4, Lcom/android/server/am/ActivityManagerService$14;

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    move-object/from16 v2, p1

    invoke-direct {v4, v0, v1, v2}, Lcom/android/server/am/ActivityManagerService$14;-><init>(Lcom/android/server/am/ActivityManagerService;Ljava/util/ArrayList;Ljava/lang/Runnable;)V

    const/4 v5, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v24

    invoke-direct {v0, v4, v1, v5}, Lcom/android/server/am/ActivityManagerService;->deliverPreBootCompleted(Ljava/lang/Runnable;Ljava/util/ArrayList;I)Z

    move-result v4

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    move-object/from16 v0, p0

    iget-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mWaitingUpdate:Z

    if-eqz v4, :cond_4

    monitor-exit p0

    goto :goto_0

    :cond_4
    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mDidUpdate:Z

    .end local v24    # "doneReceivers":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/ComponentName;>;"
    :cond_5
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mAppOpsService:Lcom/android/server/AppOpsService;

    invoke-virtual {v4}, Lcom/android/server/AppOpsService;->systemReady()V

    const/4 v4, 0x1

    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    const/16 v32, 0x0

    .local v32, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    monitor-enter v5

    :try_start_2
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    invoke-virtual {v4}, Landroid/util/SparseArray;->size()I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    move-result v4

    add-int/lit8 v26, v4, -0x1

    .local v26, "i":I
    move-object/from16 v33, v32

    .end local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .local v33, "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_1
    if-ltz v26, :cond_6

    :try_start_3
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move/from16 v0, v26

    invoke-virtual {v4, v0}, Landroid/util/SparseArray;->valueAt(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Lcom/android/server/am/ProcessRecord;

    .local v31, "proc":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v31

    iget-object v4, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v0, p0

    invoke-virtual {v0, v4}, Lcom/android/server/am/ActivityManagerService;->isAllowedWhileBooting(Landroid/content/pm/ApplicationInfo;)Z

    move-result v4

    if-nez v4, :cond_11

    if-nez v33, :cond_10

    new-instance v32, Ljava/util/ArrayList;

    invoke-direct/range {v32 .. v32}, Ljava/util/ArrayList;-><init>()V
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_7

    .end local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :goto_2
    :try_start_4
    move-object/from16 v0, v32

    move-object/from16 v1, v31

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :goto_3
    add-int/lit8 v26, v26, -0x1

    move-object/from16 v33, v32

    .end local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto :goto_1

    .end local v31    # "proc":Lcom/android/server/am/ProcessRecord;
    :cond_6
    :try_start_5
    monitor-exit v5
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_7

    monitor-enter p0

    if-eqz v33, :cond_7

    :try_start_6
    invoke-virtual/range {v33 .. v33}, Ljava/util/ArrayList;->size()I

    move-result v4

    add-int/lit8 v26, v4, -0x1

    :goto_4
    if-ltz v26, :cond_7

    move-object/from16 v0, v33

    move/from16 v1, v26

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v31

    check-cast v31, Lcom/android/server/am/ProcessRecord;

    .restart local v31    # "proc":Lcom/android/server/am/ProcessRecord;
    const-string v4, "ActivityManager"

    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    const-string v6, "Removing system update proc: "

    invoke-virtual {v5, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    move-object/from16 v0, v31

    invoke-virtual {v5, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v5

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v5

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const/4 v4, 0x1

    const/4 v5, 0x0

    const-string v6, "system update done"

    move-object/from16 v0, p0

    move-object/from16 v1, v31

    invoke-direct {v0, v1, v4, v5, v6}, Lcom/android/server/am/ActivityManagerService;->removeProcessLocked(Lcom/android/server/am/ProcessRecord;ZZLjava/lang/String;)Z
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2

    add-int/lit8 v26, v26, -0x1

    goto :goto_4

    .end local v26    # "i":I
    .end local v31    # "proc":Lcom/android/server/am/ProcessRecord;
    .end local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :catchall_1
    move-exception v4

    :goto_5
    :try_start_7
    monitor-exit v5
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    throw v4

    .end local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v26    # "i":I
    .restart local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_7
    const/4 v4, 0x1

    :try_start_8
    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    monitor-exit p0
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_2

    const-string v4, "ActivityManager"

    const-string v5, "System now ready"

    invoke-static {v4, v5}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    const/16 v4, 0xbe0

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    invoke-static {v4, v8, v9}, Landroid/util/EventLog;->writeEvent(IJ)I

    monitor-enter p0

    :try_start_9
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I

    const/4 v5, 0x1

    if-ne v4, v5, :cond_8

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getPackageManager()Landroid/content/pm/PackageManager;

    move-result-object v4

    new-instance v5, Landroid/content/Intent;

    const-string v6, "android.intent.action.FACTORY_TEST"

    invoke-direct {v5, v6}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    const/16 v6, 0x400

    invoke-virtual {v4, v5, v6}, Landroid/content/pm/PackageManager;->resolveActivity(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;

    move-result-object v34

    .local v34, "ri":Landroid/content/pm/ResolveInfo;
    const/16 v25, 0x0

    .local v25, "errorMsg":Ljava/lang/CharSequence;
    if-eqz v34, :cond_c

    move-object/from16 v0, v34

    iget-object v0, v0, Landroid/content/pm/ResolveInfo;->activityInfo:Landroid/content/pm/ActivityInfo;

    move-object/from16 v21, v0

    .local v21, "ai":Landroid/content/pm/ActivityInfo;
    move-object/from16 v0, v21

    iget-object v0, v0, Landroid/content/pm/ActivityInfo;->applicationInfo:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v22, v0

    .local v22, "app":Landroid/content/pm/ApplicationInfo;
    move-object/from16 v0, v22

    iget v4, v0, Landroid/content/pm/ApplicationInfo;->flags:I

    and-int/lit8 v4, v4, 0x1

    if-eqz v4, :cond_b

    const-string v4, "android.intent.action.FACTORY_TEST"

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    new-instance v4, Landroid/content/ComponentName;

    move-object/from16 v0, v22

    iget-object v5, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    move-object/from16 v0, v21

    iget-object v6, v0, Landroid/content/pm/ActivityInfo;->name:Ljava/lang/String;

    invoke-direct {v4, v5, v6}, Landroid/content/ComponentName;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    .end local v21    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v22    # "app":Landroid/content/pm/ApplicationInfo;
    :goto_6
    if-eqz v25, :cond_8

    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopAction:Ljava/lang/String;

    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopData:Ljava/lang/String;

    const/4 v4, 0x0

    move-object/from16 v0, p0

    iput-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mTopComponent:Landroid/content/ComponentName;

    invoke-static {}, Landroid/os/Message;->obtain()Landroid/os/Message;

    move-result-object v30

    .local v30, "msg":Landroid/os/Message;
    const/4 v4, 0x3

    move-object/from16 v0, v30

    iput v4, v0, Landroid/os/Message;->what:I

    invoke-virtual/range {v30 .. v30}, Landroid/os/Message;->getData()Landroid/os/Bundle;

    move-result-object v4

    const-string v5, "msg"

    move-object/from16 v0, v25

    invoke-virtual {v4, v5, v0}, Landroid/os/Bundle;->putCharSequence(Ljava/lang/String;Ljava/lang/CharSequence;)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v30

    invoke-virtual {v4, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .end local v25    # "errorMsg":Ljava/lang/CharSequence;
    .end local v30    # "msg":Landroid/os/Message;
    .end local v34    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_8
    monitor-exit p0
    :try_end_9
    .catchall {:try_start_9 .. :try_end_9} :catchall_3

    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->retrieveSettings()V

    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->loadResourcesOnSystemReady()V

    monitor-enter p0

    :try_start_a
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->readGrantedUriPermissionsLocked()V

    monitor-exit p0
    :try_end_a
    .catchall {:try_start_a .. :try_end_a} :catchall_4

    if-eqz p1, :cond_9

    invoke-interface/range {p1 .. p1}, Ljava/lang/Runnable;->run()V

    :cond_9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v5, 0x8007

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v6}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v4, v5, v6, v8}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v5, 0x8008

    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-static {v6}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v6

    move-object/from16 v0, p0

    iget v8, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v4, v5, v6, v8}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mSystemServiceManager:Lcom/android/server/SystemServiceManager;

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v4, v5}, Lcom/android/server/SystemServiceManager;->startUser(I)V

    monitor-enter p0

    :try_start_b
    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mFactoryTest:I
    :try_end_b
    .catchall {:try_start_b .. :try_end_b} :catchall_5

    const/4 v5, 0x1

    if-eq v4, v5, :cond_d

    :try_start_c
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    const/16 v5, 0x400

    invoke-interface {v4, v5}, Landroid/content/pm/IPackageManager;->getPersistentApplications(I)Ljava/util/List;

    move-result-object v23

    .local v23, "apps":Ljava/util/List;
    if-eqz v23, :cond_d

    invoke-interface/range {v23 .. v23}, Ljava/util/List;->size()I

    move-result v20

    .local v20, "N":I
    const/16 v26, 0x0

    :goto_7
    move/from16 v0, v26

    move/from16 v1, v20

    if-ge v0, v1, :cond_d

    move-object/from16 v0, v23

    move/from16 v1, v26

    invoke-interface {v0, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v27

    check-cast v27, Landroid/content/pm/ApplicationInfo;

    .local v27, "info":Landroid/content/pm/ApplicationInfo;
    if-eqz v27, :cond_a

    move-object/from16 v0, v27

    iget-object v4, v0, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    const-string v5, "android"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_a

    const/4 v4, 0x0

    const/4 v5, 0x0

    move-object/from16 v0, p0

    move-object/from16 v1, v27

    invoke-virtual {v0, v1, v4, v5}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_c
    .catch Landroid/os/RemoteException; {:try_start_c .. :try_end_c} :catch_0
    .catchall {:try_start_c .. :try_end_c} :catchall_5

    :cond_a
    add-int/lit8 v26, v26, 0x1

    goto :goto_7

    .end local v20    # "N":I
    .end local v23    # "apps":Ljava/util/List;
    .end local v27    # "info":Landroid/content/pm/ApplicationInfo;
    :catchall_2
    move-exception v4

    :try_start_d
    monitor-exit p0
    :try_end_d
    .catchall {:try_start_d .. :try_end_d} :catchall_2

    throw v4

    .restart local v21    # "ai":Landroid/content/pm/ActivityInfo;
    .restart local v22    # "app":Landroid/content/pm/ApplicationInfo;
    .restart local v25    # "errorMsg":Ljava/lang/CharSequence;
    .restart local v34    # "ri":Landroid/content/pm/ResolveInfo;
    :cond_b
    :try_start_e
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    const v5, #android:string@factorytest_not_system#t

    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v25

    goto/16 :goto_6

    .end local v21    # "ai":Landroid/content/pm/ActivityInfo;
    .end local v22    # "app":Landroid/content/pm/ApplicationInfo;
    :cond_c
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mContext:Landroid/content/Context;

    invoke-virtual {v4}, Landroid/content/Context;->getResources()Landroid/content/res/Resources;

    move-result-object v4

    const v5, #android:string@factorytest_no_action#t

    invoke-virtual {v4, v5}, Landroid/content/res/Resources;->getText(I)Ljava/lang/CharSequence;

    move-result-object v25

    goto/16 :goto_6

    .end local v25    # "errorMsg":Ljava/lang/CharSequence;
    .end local v34    # "ri":Landroid/content/pm/ResolveInfo;
    :catchall_3
    move-exception v4

    monitor-exit p0
    :try_end_e
    .catchall {:try_start_e .. :try_end_e} :catchall_3

    throw v4

    :catchall_4
    move-exception v4

    :try_start_f
    monitor-exit p0
    :try_end_f
    .catchall {:try_start_f .. :try_end_f} :catchall_4

    throw v4

    :catch_0
    move-exception v4

    :cond_d
    const/4 v4, 0x1

    :try_start_10
    move-object/from16 v0, p0

    iput-boolean v4, v0, Lcom/android/server/am/ActivityManagerService;->mBooting:Z

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    const-string v5, "systemReady"

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->startHomeActivityLocked(ILjava/lang/String;)Z
    :try_end_10
    .catchall {:try_start_10 .. :try_end_10} :catchall_5

    :try_start_11
    invoke-static {}, Landroid/app/AppGlobals;->getPackageManager()Landroid/content/pm/IPackageManager;

    move-result-object v4

    invoke-interface {v4}, Landroid/content/pm/IPackageManager;->hasSystemUidErrors()Z

    move-result v4

    if-eqz v4, :cond_e

    const-string v4, "ActivityManager"

    const-string v5, "UIDs on the system are inconsistent, you need to wipe your data partition or your device will be unstable."

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0xe

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V
    :try_end_11
    .catch Landroid/os/RemoteException; {:try_start_11 .. :try_end_11} :catch_2
    .catchall {:try_start_11 .. :try_end_11} :catchall_5

    :cond_e
    :goto_8
    :try_start_12
    invoke-static {}, Landroid/os/Build;->isFingerprintConsistent()Z

    move-result v4

    if-nez v4, :cond_f

    const-string v4, "ActivityManager"

    const-string v5, "Build fingerprint is not consistent, warning user"

    invoke-static {v4, v5}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/16 v5, 0xf

    invoke-virtual {v4, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v4

    invoke-virtual {v4}, Landroid/os/Message;->sendToTarget()V

    :cond_f
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_12
    .catchall {:try_start_12 .. :try_end_12} :catchall_5

    move-result-wide v28

    .local v28, "ident":J
    :try_start_13
    new-instance v7, Landroid/content/Intent;

    const-string v4, "android.intent.action.USER_STARTED"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .local v7, "intent":Landroid/content/Intent;
    const/high16 v4, 0x50000000

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const-string v4, "android.intent.extra.user_handle"

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v7, v4, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, 0x0

    const/4 v14, -0x1

    const/4 v15, 0x0

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v18, 0x3e8

    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move/from16 v19, v0

    move-object/from16 v4, p0

    invoke-direct/range {v4 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    new-instance v7, Landroid/content/Intent;

    .end local v7    # "intent":Landroid/content/Intent;
    const-string v4, "android.intent.action.USER_STARTING"

    invoke-direct {v7, v4}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .restart local v7    # "intent":Landroid/content/Intent;
    const/high16 v4, 0x40000000    # 2.0f

    invoke-virtual {v7, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const-string v4, "android.intent.extra.user_handle"

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    invoke-virtual {v7, v4, v5}, Landroid/content/Intent;->putExtra(Ljava/lang/String;I)Landroid/content/Intent;

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v8, 0x0

    new-instance v9, Lcom/android/server/am/ActivityManagerService$15;

    move-object/from16 v0, p0

    invoke-direct {v9, v0}, Lcom/android/server/am/ActivityManagerService$15;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const-string v13, "android.permission.INTERACT_ACROSS_USERS"

    const/4 v14, -0x1

    const/4 v15, 0x1

    const/16 v16, 0x0

    sget v17, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v18, 0x3e8

    const/16 v19, -0x1

    move-object/from16 v4, p0

    invoke-direct/range {v4 .. v19}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I
    :try_end_13
    .catch Ljava/lang/Throwable; {:try_start_13 .. :try_end_13} :catch_1
    .catchall {:try_start_13 .. :try_end_13} :catchall_6

    :try_start_14
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    .end local v7    # "intent":Landroid/content/Intent;
    :goto_9
    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v4}, Lcom/android/server/am/ActivityStackSupervisor;->resumeTopActivitiesLocked()Z

    const/4 v4, -0x1

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move-object/from16 v0, p0

    invoke-virtual {v0, v4, v5}, Lcom/android/server/am/ActivityManagerService;->sendUserSwitchBroadcastsLocked(II)V

    monitor-exit p0

    goto/16 :goto_0

    .end local v28    # "ident":J
    :catchall_5
    move-exception v4

    monitor-exit p0
    :try_end_14
    .catchall {:try_start_14 .. :try_end_14} :catchall_5

    throw v4

    .restart local v28    # "ident":J
    :catch_1
    move-exception v35

    .local v35, "t":Ljava/lang/Throwable;
    :try_start_15
    const-string v4, "ActivityManager"

    const-string v5, "Failed sending first user broadcasts"

    move-object/from16 v0, v35

    invoke-static {v4, v5, v0}, Landroid/util/Slog;->wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I
    :try_end_15
    .catchall {:try_start_15 .. :try_end_15} :catchall_6

    :try_start_16
    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_9

    .end local v35    # "t":Ljava/lang/Throwable;
    :catchall_6
    move-exception v4

    invoke-static/range {v28 .. v29}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v4
    :try_end_16
    .catchall {:try_start_16 .. :try_end_16} :catchall_5

    .end local v28    # "ident":J
    :catch_2
    move-exception v4

    goto/16 :goto_8

    :catchall_7
    move-exception v4

    move-object/from16 v32, v33

    .end local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_5

    .end local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v31    # "proc":Lcom/android/server/am/ProcessRecord;
    .restart local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_10
    move-object/from16 v32, v33

    .end local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_2

    .end local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_11
    move-object/from16 v32, v33

    .end local v33    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    .restart local v32    # "procsToKill":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    goto/16 :goto_3
.end method

.method public takePersistableUriPermission(Landroid/net/Uri;II)V
    .locals 10
    .param p1, "uri"    # Landroid/net/Uri;
    .param p2, "modeFlags"    # I
    .param p3, "userId"    # I

    .prologue
    const/4 v6, 0x1

    const/4 v7, 0x0

    const-string v8, "takePersistableUriPermission"

    invoke-virtual {p0, v8}, Lcom/android/server/am/ActivityManagerService;->enforceNotIsolatedCaller(Ljava/lang/String;)V

    const/4 v8, 0x3

    invoke-static {p2, v8}, Lcom/android/internal/util/Preconditions;->checkFlagsArgument(II)V

    monitor-enter p0

    :try_start_0
    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v0

    .local v0, "callingUid":I
    const/4 v4, 0x0

    .local v4, "persistChanged":Z
    new-instance v3, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v8, 0x0

    invoke-direct {v3, p3, p1, v8}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    .local v3, "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    new-instance v8, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v9, 0x0

    invoke-direct {v8, p3, p1, v9}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v0, v8}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v1

    .local v1, "exactPerm":Lcom/android/server/am/UriPermission;
    new-instance v8, Lcom/android/server/am/ActivityManagerService$GrantUri;

    const/4 v9, 0x1

    invoke-direct {v8, p3, p1, v9}, Lcom/android/server/am/ActivityManagerService$GrantUri;-><init>(ILandroid/net/Uri;Z)V

    invoke-direct {p0, v0, v8}, Lcom/android/server/am/ActivityManagerService;->findUriPermissionLocked(ILcom/android/server/am/ActivityManagerService$GrantUri;)Lcom/android/server/am/UriPermission;

    move-result-object v5

    .local v5, "prefixPerm":Lcom/android/server/am/UriPermission;
    if-eqz v1, :cond_0

    iget v8, v1, Lcom/android/server/am/UriPermission;->persistableModeFlags:I

    and-int/2addr v8, p2

    if-ne v8, p2, :cond_0

    move v2, v6

    .local v2, "exactValid":Z
    :goto_0
    if-eqz v5, :cond_1

    iget v8, v5, Lcom/android/server/am/UriPermission;->persistableModeFlags:I

    and-int/2addr v8, p2

    if-ne v8, p2, :cond_1

    .local v6, "prefixValid":Z
    :goto_1
    if-nez v2, :cond_2

    if-nez v6, :cond_2

    new-instance v7, Ljava/lang/SecurityException;

    new-instance v8, Ljava/lang/StringBuilder;

    invoke-direct {v8}, Ljava/lang/StringBuilder;-><init>()V

    const-string v9, "No persistable permission grants found for UID "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v8

    const-string v9, " and Uri "

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v3}, Lcom/android/server/am/ActivityManagerService$GrantUri;->toSafeString()Ljava/lang/String;

    move-result-object v9

    invoke-virtual {v8, v9}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v8

    invoke-virtual {v8}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v8

    invoke-direct {v7, v8}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v7

    .end local v0    # "callingUid":I
    .end local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .end local v2    # "exactValid":Z
    .end local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .end local v4    # "persistChanged":Z
    .end local v5    # "prefixPerm":Lcom/android/server/am/UriPermission;
    .end local v6    # "prefixValid":Z
    :catchall_0
    move-exception v7

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v7

    .restart local v0    # "callingUid":I
    .restart local v1    # "exactPerm":Lcom/android/server/am/UriPermission;
    .restart local v3    # "grantUri":Lcom/android/server/am/ActivityManagerService$GrantUri;
    .restart local v4    # "persistChanged":Z
    .restart local v5    # "prefixPerm":Lcom/android/server/am/UriPermission;
    :cond_0
    move v2, v7

    goto :goto_0

    .restart local v2    # "exactValid":Z
    :cond_1
    move v6, v7

    goto :goto_1

    .restart local v6    # "prefixValid":Z
    :cond_2
    if-eqz v2, :cond_3

    :try_start_1
    invoke-virtual {v1, p2}, Lcom/android/server/am/UriPermission;->takePersistableModes(I)Z

    move-result v7

    or-int/2addr v4, v7

    :cond_3
    if-eqz v6, :cond_4

    invoke-virtual {v5, p2}, Lcom/android/server/am/UriPermission;->takePersistableModes(I)Z

    move-result v7

    or-int/2addr v4, v7

    :cond_4
    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->maybePrunePersistedUriGrantsLocked(I)Z

    move-result v7

    or-int/2addr v4, v7

    if-eqz v4, :cond_5

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->schedulePersistUriGrants()V

    :cond_5
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-void
.end method

.method public testIsSystemReady()Z
    .locals 1

    .prologue
    iget-boolean v0, p0, Lcom/android/server/am/ActivityManagerService;->mSystemReady:Z

    return v0
.end method

.method timeoutUserSwitch(Lcom/android/server/am/UserStartedState;II)V
    .locals 3
    .param p1, "uss"    # Lcom/android/server/am/UserStartedState;
    .param p2, "oldUserId"    # I
    .param p3, "newUserId"    # I

    .prologue
    monitor-enter p0

    :try_start_0
    const-string v0, "ActivityManager"

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "User switch timeout: from "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " to "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1, p3}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v0, v1}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    invoke-virtual {p0, p1, p2, p3}, Lcom/android/server/am/ActivityManagerService;->sendContinueUserSwitchLocked(Lcom/android/server/am/UserStartedState;II)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method final trimApplications()V
    .locals 6

    .prologue
    const/4 v3, 0x0

    monitor-enter p0

    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v1, v2, -0x1

    .local v1, "i":I
    :goto_0
    if-ltz v1, :cond_3

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/android/server/am/ProcessRecord;

    .local v0, "app":Lcom/android/server/am/ProcessRecord;
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-nez v2, :cond_0

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->curReceiver:Lcom/android/server/am/BroadcastRecord;

    if-nez v2, :cond_0

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    if-nez v2, :cond_0

    const-string v4, "ActivityManager"

    new-instance v2, Ljava/lang/StringBuilder;

    invoke-direct {v2}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Exiting empty application process "

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    iget-object v5, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, " ("

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v5

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v2, :cond_1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->asBinder()Landroid/os/IBinder;

    move-result-object v2

    :goto_1
    invoke-virtual {v5, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v2

    const-string v5, ")\n"

    invoke-virtual {v2, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v2

    invoke-virtual {v2}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v4, v2}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    if-lez v2, :cond_2

    iget v2, v0, Lcom/android/server/am/ProcessRecord;->pid:I

    sget v4, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    if-eq v2, v4, :cond_2

    const-string v2, "empty"

    const/4 v4, 0x0

    invoke-virtual {v0, v2, v4}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    :goto_2
    const/4 v2, 0x0

    const/4 v4, 0x1

    const/4 v5, -0x1

    invoke-direct {p0, v0, v2, v4, v5}, Lcom/android/server/am/ActivityManagerService;->cleanUpApplicationRecordLocked(Lcom/android/server/am/ProcessRecord;ZZI)Z

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mRemovedProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_0

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    const/4 v4, 0x0

    const/4 v5, 0x0

    invoke-virtual {p0, v2, v4, v5}, Lcom/android/server/am/ActivityManagerService;->addAppLocked(Landroid/content/pm/ApplicationInfo;ZLjava/lang/String;)Lcom/android/server/am/ProcessRecord;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_0
    add-int/lit8 v1, v1, -0x1

    goto :goto_0

    :cond_1
    move-object v2, v3

    goto :goto_1

    :cond_2
    :try_start_1
    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-interface {v2}, Landroid/app/IApplicationThread;->scheduleExit()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    goto :goto_2

    :catch_0
    move-exception v2

    goto :goto_2

    .end local v0    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_3
    :try_start_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    monitor-exit p0

    return-void

    .end local v1    # "i":I
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    throw v2
.end method

.method trimRecentsForTaskLocked(Lcom/android/server/am/TaskRecord;Z)I
    .locals 12
    .param p1, "task"    # Lcom/android/server/am/TaskRecord;
    .param p2, "doTrim"    # Z

    .prologue
    const/4 v8, 0x1

    const/4 v9, 0x0

    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    move-result v0

    .local v0, "N":I
    iget-object v3, p1, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    .local v3, "intent":Landroid/content/Intent;
    if-eqz v3, :cond_1

    invoke-virtual {v3}, Landroid/content/Intent;->isDocument()Z

    move-result v10

    if-eqz v10, :cond_1

    move v1, v8

    .local v1, "document":Z
    :goto_0
    iget v10, p1, Lcom/android/server/am/TaskRecord;->maxRecents:I

    add-int/lit8 v4, v10, -0x1

    .local v4, "maxRecents":I
    const/4 v2, 0x0

    .local v2, "i":I
    :goto_1
    if-ge v2, v0, :cond_c

    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v10, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/android/server/am/TaskRecord;

    .local v5, "tr":Lcom/android/server/am/TaskRecord;
    if-eq p1, v5, :cond_8

    iget v10, p1, Lcom/android/server/am/TaskRecord;->userId:I

    iget v11, v5, Lcom/android/server/am/TaskRecord;->userId:I

    if-eq v10, v11, :cond_2

    :cond_0
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    .end local v1    # "document":Z
    .end local v2    # "i":I
    .end local v4    # "maxRecents":I
    .end local v5    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_1
    move v1, v9

    goto :goto_0

    .restart local v1    # "document":Z
    .restart local v2    # "i":I
    .restart local v4    # "maxRecents":I
    .restart local v5    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_2
    const/4 v10, 0x3

    if-le v2, v10, :cond_3

    invoke-virtual {v5}, Lcom/android/server/am/TaskRecord;->freeLastThumbnail()V

    :cond_3
    iget-object v6, v5, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    .local v6, "trIntent":Landroid/content/Intent;
    iget-object v10, p1, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;

    if-eqz v10, :cond_4

    iget-object v10, p1, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;

    iget-object v11, v5, Lcom/android/server/am/TaskRecord;->affinity:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-nez v10, :cond_5

    :cond_4
    if-eqz v3, :cond_0

    invoke-virtual {v3, v6}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v10

    if-eqz v10, :cond_0

    :cond_5
    if-eqz v6, :cond_6

    invoke-virtual {v6}, Landroid/content/Intent;->isDocument()Z

    move-result v10

    if-eqz v10, :cond_6

    move v7, v8

    .local v7, "trIsDocument":Z
    :goto_3
    if-eqz v1, :cond_7

    if-eqz v7, :cond_7

    if-lez v4, :cond_8

    add-int/lit8 v4, v4, -0x1

    goto :goto_2

    .end local v7    # "trIsDocument":Z
    :cond_6
    move v7, v9

    goto :goto_3

    .restart local v7    # "trIsDocument":Z
    :cond_7
    if-nez v1, :cond_0

    if-nez v7, :cond_0

    .end local v6    # "trIntent":Landroid/content/Intent;
    .end local v7    # "trIsDocument":Z
    :cond_8
    if-nez p2, :cond_9

    .end local v2    # "i":I
    .end local v5    # "tr":Lcom/android/server/am/TaskRecord;
    :goto_4
    return v2

    .restart local v2    # "i":I
    .restart local v5    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_9
    invoke-virtual {v5}, Lcom/android/server/am/TaskRecord;->disposeThumbnail()V

    iget-object v10, p0, Lcom/android/server/am/ActivityManagerService;->mRecentTasks:Ljava/util/ArrayList;

    invoke-virtual {v10, v2}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    if-eq p1, v5, :cond_a

    invoke-virtual {v5}, Lcom/android/server/am/TaskRecord;->removedFromRecents()V

    :cond_a
    add-int/lit8 v2, v2, -0x1

    add-int/lit8 v0, v0, -0x1

    iget-object v10, p1, Lcom/android/server/am/TaskRecord;->intent:Landroid/content/Intent;

    if-nez v10, :cond_b

    move-object p1, v5

    :cond_b
    invoke-virtual {p0, v5, v9}, Lcom/android/server/am/ActivityManagerService;->notifyTaskPersisterLocked(Lcom/android/server/am/TaskRecord;Z)V

    goto :goto_2

    .end local v5    # "tr":Lcom/android/server/am/TaskRecord;
    :cond_c
    const/4 v2, -0x1

    goto :goto_4
.end method

.method public unbindBackupAgent(Landroid/content/pm/ApplicationInfo;)V
    .locals 5
    .param p1, "appInfo"    # Landroid/content/pm/ApplicationInfo;

    .prologue
    if-nez p1, :cond_0

    const-string v2, "ActivityManager"

    const-string v3, "unbind backup agent for null app"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    :goto_0
    return-void

    :cond_0
    monitor-enter p0

    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    if-nez v2, :cond_1

    const-string v2, "ActivityManager"

    const-string v3, "Unbinding backup agent with no active backup"

    invoke-static {v2, v3}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    const/4 v2, 0x0

    :try_start_1
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    monitor-exit p0

    goto :goto_0

    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v2

    :cond_1
    :try_start_2
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    iget-object v3, p1, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Unbind of "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " but is not the current backup target"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    const/4 v2, 0x0

    :try_start_3
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    goto :goto_0

    :cond_2
    :try_start_4
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    iget-object v1, v2, Lcom/android/server/am/BackupRecord;->app:Lcom/android/server/am/ProcessRecord;

    .local v1, "proc":Lcom/android/server/am/ProcessRecord;
    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z

    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    if-eqz v2, :cond_3

    :try_start_5
    iget-object v2, v1, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    invoke-virtual {p0, p1}, Lcom/android/server/am/ActivityManagerService;->compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo;

    move-result-object v3

    invoke-interface {v2, p1, v3}, Landroid/app/IApplicationThread;->scheduleDestroyBackupAgent(Landroid/content/pm/ApplicationInfo;Landroid/content/res/CompatibilityInfo;)V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_0
    .catchall {:try_start_5 .. :try_end_5} :catchall_1

    :cond_3
    :goto_1
    const/4 v2, 0x0

    :try_start_6
    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    const/4 v2, 0x0

    iput-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    monitor-exit p0
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_0

    goto :goto_0

    :catch_0
    move-exception v0

    .local v0, "e":Ljava/lang/Exception;
    :try_start_7
    const-string v2, "ActivityManager"

    const-string v3, "Exception when unbinding backup agent:"

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    invoke-virtual {v0}, Ljava/lang/Exception;->printStackTrace()V
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_1

    goto :goto_1

    .end local v0    # "e":Ljava/lang/Exception;
    .end local v1    # "proc":Lcom/android/server/am/ProcessRecord;
    :catchall_1
    move-exception v2

    const/4 v3, 0x0

    :try_start_8
    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupTarget:Lcom/android/server/am/BackupRecord;

    const/4 v3, 0x0

    iput-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mBackupAppName:Ljava/lang/String;

    throw v2
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0
.end method

.method public unbindFinished(Landroid/os/IBinder;Landroid/content/Intent;Z)V
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "doRebind"    # Z

    .prologue
    if-eqz p2, :cond_0

    invoke-virtual {p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v0

    const/4 v1, 0x1

    if-ne v0, v1, :cond_0

    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "File descriptors passed in Intent"

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_0
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    check-cast p1, Lcom/android/server/am/ServiceRecord;

    .end local p1    # "token":Landroid/os/IBinder;
    invoke-virtual {v0, p1, p2, p3}, Lcom/android/server/am/ActiveServices;->unbindFinishedLocked(Lcom/android/server/am/ServiceRecord;Landroid/content/Intent;Z)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public unbindService(Landroid/app/IServiceConnection;)Z
    .locals 1
    .param p1, "connection"    # Landroid/app/IServiceConnection;

    .prologue
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mServices:Lcom/android/server/am/ActiveServices;

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActiveServices;->unbindServiceLocked(Landroid/app/IServiceConnection;)Z

    move-result v0

    monitor-exit p0

    return v0

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public final unbroadcastIntent(Landroid/app/IApplicationThread;Landroid/content/Intent;I)V
    .locals 14
    .param p1, "caller"    # Landroid/app/IApplicationThread;
    .param p2, "intent"    # Landroid/content/Intent;
    .param p3, "userId"    # I

    .prologue
    if-eqz p2, :cond_0

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v1

    const/4 v2, 0x1

    if-ne v1, v2, :cond_0

    new-instance v1, Ljava/lang/IllegalArgumentException;

    const-string v2, "File descriptors passed in Intent"

    invoke-direct {v1, v2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v1

    :cond_0
    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v3

    const/4 v5, 0x1

    const/4 v6, 0x0

    const-string v7, "removeStickyBroadcast"

    const/4 v8, 0x0

    move-object v1, p0

    move/from16 v4, p3

    invoke-virtual/range {v1 .. v8}, Lcom/android/server/am/ActivityManagerService;->handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I

    move-result p3

    monitor-enter p0

    :try_start_0
    const-string v1, "android.permission.BROADCAST_STICKY"

    invoke-virtual {p0, v1}, Lcom/android/server/am/ActivityManagerService;->checkCallingPermission(Ljava/lang/String;)I

    move-result v1

    if-eqz v1, :cond_1

    new-instance v1, Ljava/lang/StringBuilder;

    invoke-direct {v1}, Ljava/lang/StringBuilder;-><init>()V

    const-string v2, "Permission Denial: unbroadcastIntent() from pid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingPid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, ", uid="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, " requires "

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    const-string v2, "android.permission.BROADCAST_STICKY"

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v12

    .local v12, "msg":Ljava/lang/String;
    const-string v1, "ActivityManager"

    invoke-static {v1, v12}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v1, Ljava/lang/SecurityException;

    invoke-direct {v1, v12}, Ljava/lang/SecurityException;-><init>(Ljava/lang/String;)V

    throw v1

    .end local v12    # "msg":Ljava/lang/String;
    :catchall_0
    move-exception v1

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    :cond_1
    :try_start_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p3

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v13

    check-cast v13, Landroid/util/ArrayMap;

    .local v13, "stickies":Landroid/util/ArrayMap;, "Landroid/util/ArrayMap<Ljava/lang/String;Ljava/util/ArrayList<Landroid/content/Intent;>;>;"
    if-eqz v13, :cond_4

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v1}, Landroid/util/ArrayMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Ljava/util/ArrayList;

    .local v11, "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    if-eqz v11, :cond_3

    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v9

    .local v9, "N":I
    const/4 v10, 0x0

    .local v10, "i":I
    :goto_0
    if-ge v10, v9, :cond_2

    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Landroid/content/Intent;

    move-object/from16 v0, p2

    invoke-virtual {v0, v1}, Landroid/content/Intent;->filterEquals(Landroid/content/Intent;)Z

    move-result v1

    if-eqz v1, :cond_5

    invoke-virtual {v11, v10}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    :cond_2
    invoke-virtual {v11}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-gtz v1, :cond_3

    invoke-virtual/range {p2 .. p2}, Landroid/content/Intent;->getAction()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v13, v1}, Landroid/util/ArrayMap;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .end local v9    # "N":I
    .end local v10    # "i":I
    :cond_3
    invoke-virtual {v13}, Landroid/util/ArrayMap;->size()I

    move-result v1

    if-gtz v1, :cond_4

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStickyBroadcasts:Landroid/util/SparseArray;

    move/from16 v0, p3

    invoke-virtual {v1, v0}, Landroid/util/SparseArray;->remove(I)V

    .end local v11    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_4
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    return-void

    .restart local v9    # "N":I
    .restart local v10    # "i":I
    .restart local v11    # "list":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Landroid/content/Intent;>;"
    :cond_5
    add-int/lit8 v10, v10, 0x1

    goto :goto_0
.end method

.method public unhandledBack()V
    .locals 4

    .prologue
    const-string v2, "android.permission.FORCE_BACK"

    const-string v3, "unhandledBack()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    monitor-enter p0

    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    move-result-wide v0

    .local v0, "origId":J
    :try_start_1
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v2

    invoke-virtual {v2}, Lcom/android/server/am/ActivityStack;->unhandledBackLocked()V
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :try_start_2
    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v2

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v2

    .end local v0    # "origId":J
    :catchall_1
    move-exception v2

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v2
.end method

.method public unregisterProcessObserver(Landroid/app/IProcessObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IProcessObserver;

    .prologue
    monitor-enter p0

    :try_start_0
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mProcessObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    monitor-exit p0

    return-void

    :catchall_0
    move-exception v0

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v0
.end method

.method public unregisterReceiver(Landroid/content/IIntentReceiver;)V
    .locals 12
    .param p1, "receiver"    # Landroid/content/IIntentReceiver;

    .prologue
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v8

    .local v8, "origId":J
    const/4 v7, 0x0

    .local v7, "doTrim":Z
    :try_start_0
    monitor-enter p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_1

    :try_start_1
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mRegisteredReceivers:Ljava/util/HashMap;

    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v11

    check-cast v11, Lcom/android/server/am/ReceiverList;

    .local v11, "rl":Lcom/android/server/am/ReceiverList;
    if-eqz v11, :cond_2

    iget-object v0, v11, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;

    if-eqz v0, :cond_0

    iget-object v10, v11, Lcom/android/server/am/ReceiverList;->curBroadcast:Lcom/android/server/am/BroadcastRecord;

    .local v10, "r":Lcom/android/server/am/BroadcastRecord;
    invoke-interface {p1}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v1

    iget v2, v10, Lcom/android/server/am/BroadcastRecord;->resultCode:I

    iget-object v3, v10, Lcom/android/server/am/BroadcastRecord;->resultData:Ljava/lang/String;

    iget-object v4, v10, Lcom/android/server/am/BroadcastRecord;->resultExtras:Landroid/os/Bundle;

    iget-boolean v5, v10, Lcom/android/server/am/BroadcastRecord;->resultAbort:Z

    move-object v0, p0

    invoke-direct/range {v0 .. v5}, Lcom/android/server/am/ActivityManagerService;->finishReceiverLocked(Landroid/os/IBinder;ILjava/lang/String;Landroid/os/Bundle;Z)Z

    move-result v6

    .local v6, "doNext":Z
    if-eqz v6, :cond_0

    const/4 v7, 0x1

    iget-object v0, v10, Lcom/android/server/am/BroadcastRecord;->queue:Lcom/android/server/am/BroadcastQueue;

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/android/server/am/BroadcastQueue;->processNextBroadcast(Z)V

    .end local v6    # "doNext":Z
    .end local v10    # "r":Lcom/android/server/am/BroadcastRecord;
    :cond_0
    iget-object v0, v11, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v0, :cond_1

    iget-object v0, v11, Lcom/android/server/am/ReceiverList;->app:Lcom/android/server/am/ProcessRecord;

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->receivers:Landroid/util/ArraySet;

    invoke-virtual {v0, v11}, Landroid/util/ArraySet;->remove(Ljava/lang/Object;)Z

    :cond_1
    invoke-virtual {p0, v11}, Lcom/android/server/am/ActivityManagerService;->removeReceiverLocked(Lcom/android/server/am/ReceiverList;)V

    iget-boolean v0, v11, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    if-eqz v0, :cond_2

    const/4 v0, 0x0

    iput-boolean v0, v11, Lcom/android/server/am/ReceiverList;->linkedToDeath:Z

    iget-object v0, v11, Lcom/android/server/am/ReceiverList;->receiver:Landroid/content/IIntentReceiver;

    invoke-interface {v0}, Landroid/content/IIntentReceiver;->asBinder()Landroid/os/IBinder;

    move-result-object v0

    const/4 v1, 0x0

    invoke-interface {v0, v11, v1}, Landroid/os/IBinder;->unlinkToDeath(Landroid/os/IBinder$DeathRecipient;I)Z

    :cond_2
    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    if-eqz v7, :cond_3

    :try_start_2
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->trimApplications()V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    :goto_0
    return-void

    .end local v11    # "rl":Lcom/android/server/am/ReceiverList;
    :catchall_0
    move-exception v0

    :try_start_3
    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_0

    :try_start_4
    throw v0
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_1

    :catchall_1
    move-exception v0

    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v0

    .restart local v11    # "rl":Lcom/android/server/am/ReceiverList;
    :cond_3
    invoke-static {v8, v9}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    goto :goto_0
.end method

.method public unregisterUserSwitchObserver(Landroid/app/IUserSwitchObserver;)V
    .locals 1
    .param p1, "observer"    # Landroid/app/IUserSwitchObserver;

    .prologue
    iget-object v0, p0, Lcom/android/server/am/ActivityManagerService;->mUserSwitchObservers:Landroid/os/RemoteCallbackList;

    invoke-virtual {v0, p1}, Landroid/os/RemoteCallbackList;->unregister(Landroid/os/IInterface;)Z

    return-void
.end method

.method unsafeConvertIncomingUser(I)I
    .locals 1
    .param p1, "userId"    # I

    .prologue
    const/4 v0, -0x2

    if-eq p1, v0, :cond_0

    const/4 v0, -0x3

    if-ne p1, v0, :cond_1

    :cond_0
    iget p1, p0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    .end local p1    # "userId":I
    :cond_1
    return p1
.end method

.method public unstableProviderDied(Landroid/os/IBinder;)V
    .locals 12
    .param p1, "connection"    # Landroid/os/IBinder;

    .prologue
    :try_start_0
    move-object v0, p1

    check-cast v0, Lcom/android/server/am/ContentProviderConnection;

    move-object v2, v0
    :try_end_0
    .catch Ljava/lang/ClassCastException; {:try_start_0 .. :try_end_0} :catch_0

    .local v2, "conn":Lcom/android/server/am/ContentProviderConnection;
    if-nez v2, :cond_0

    new-instance v9, Ljava/lang/NullPointerException;

    const-string v10, "connection is null"

    invoke-direct {v9, v10}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v9

    .end local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :catch_0
    move-exception v3

    .local v3, "e":Ljava/lang/ClassCastException;
    new-instance v9, Ljava/lang/StringBuilder;

    invoke-direct {v9}, Ljava/lang/StringBuilder;-><init>()V

    const-string v10, "refContentProvider: "

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v9

    const-string v10, " not a ContentProviderConnection"

    invoke-virtual {v9, v10}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v9

    invoke-virtual {v9}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .local v6, "msg":Ljava/lang/String;
    const-string v9, "ActivityManager"

    invoke-static {v9, v6}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v9, Ljava/lang/IllegalArgumentException;

    invoke-direct {v9, v6}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v9

    .end local v3    # "e":Ljava/lang/ClassCastException;
    .end local v6    # "msg":Ljava/lang/String;
    .restart local v2    # "conn":Lcom/android/server/am/ContentProviderConnection;
    :cond_0
    monitor-enter p0

    :try_start_1
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v8, v9, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    .local v8, "provider":Landroid/content/IContentProvider;
    monitor-exit p0

    if-nez v8, :cond_1

    :goto_0
    return-void

    .end local v8    # "provider":Landroid/content/IContentProvider;
    :catchall_0
    move-exception v9

    monitor-exit p0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    throw v9

    .restart local v8    # "provider":Landroid/content/IContentProvider;
    :cond_1
    invoke-interface {v8}, Landroid/content/IContentProvider;->asBinder()Landroid/os/IBinder;

    move-result-object v9

    invoke-interface {v9}, Landroid/os/IBinder;->pingBinder()Z

    move-result v9

    if-eqz v9, :cond_2

    monitor-enter p0

    :try_start_2
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "unstableProviderDied: caller "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-static {}, Landroid/os/Binder;->getCallingUid()I

    move-result v11

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " says "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " died, but we don\'t agree"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->w(Ljava/lang/String;Ljava/lang/String;)I

    monitor-exit p0

    goto :goto_0

    :catchall_1
    move-exception v9

    monitor-exit p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_1

    throw v9

    :cond_2
    monitor-enter p0

    :try_start_3
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v9, v9, Lcom/android/server/am/ContentProviderRecord;->provider:Landroid/content/IContentProvider;

    if-eq v9, v8, :cond_3

    monitor-exit p0

    goto :goto_0

    :catchall_2
    move-exception v9

    monitor-exit p0
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_2

    throw v9

    :cond_3
    :try_start_4
    iget-object v9, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    iget-object v7, v9, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    .local v7, "proc":Lcom/android/server/am/ProcessRecord;
    if-eqz v7, :cond_4

    iget-object v9, v7, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-nez v9, :cond_5

    :cond_4
    monitor-exit p0

    goto :goto_0

    :cond_5
    const-string v9, "ActivityManager"

    new-instance v10, Ljava/lang/StringBuilder;

    invoke-direct {v10}, Ljava/lang/StringBuilder;-><init>()V

    const-string v11, "Process "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget-object v11, v7, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, " (pid "

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    iget v11, v7, Lcom/android/server/am/ProcessRecord;->pid:I

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v10

    const-string v11, ") early provider death"

    invoke-virtual {v10, v11}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v10

    invoke-virtual {v10}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v10

    invoke-static {v9, v10}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    move-result-wide v4

    .local v4, "ident":J
    :try_start_5
    invoke-virtual {p0, v7}, Lcom/android/server/am/ActivityManagerService;->appDiedLocked(Lcom/android/server/am/ProcessRecord;)V
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_3

    :try_start_6
    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    goto/16 :goto_0

    :catchall_3
    move-exception v9

    invoke-static {v4, v5}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    throw v9
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_2
.end method

.method public updateConfiguration(Landroid/content/res/Configuration;)V
    .locals 5
    .param p1, "values"    # Landroid/content/res/Configuration;

    .prologue
    const-string v2, "android.permission.CHANGE_CONFIGURATION"

    const-string v3, "updateConfiguration()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    monitor-enter p0

    if-nez p1, :cond_0

    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v2, :cond_0

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2}, Lcom/android/server/wm/WindowManagerService;->computeNewConfiguration()Landroid/content/res/Configuration;

    move-result-object p1

    :cond_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v2, :cond_1

    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessList:Lcom/android/server/am/ProcessList;

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    invoke-virtual {v2, v3}, Lcom/android/server/am/ProcessList;->applyDisplaySize(Lcom/android/server/wm/WindowManagerService;)V

    :cond_1
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "origId":J
    if-eqz p1, :cond_2

    invoke-static {p1}, Landroid/provider/Settings$System;->clearConfiguration(Landroid/content/res/Configuration;)V

    :cond_2
    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    invoke-virtual {p0, p1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    return-void

    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z
    .locals 28
    .param p1, "values"    # Landroid/content/res/Configuration;
    .param p2, "starting"    # Lcom/android/server/am/ActivityRecord;
    .param p3, "persistent"    # Z
    .param p4, "initLocale"    # Z

    .prologue
    const/16 v21, 0x0

    .local v21, "changes":I
    if-eqz p1, :cond_7

    new-instance v27, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v27

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .local v27, "newConfig":Landroid/content/res/Configuration;
    move-object/from16 v0, v27

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Landroid/content/res/Configuration;->updateFrom(Landroid/content/res/Configuration;)I

    move-result v21

    if-eqz v21, :cond_7

    const/16 v3, 0xa9f

    move/from16 v0, v21

    invoke-static {v3, v0}, Landroid/util/EventLog;->writeEvent(II)I

    .line 14570
    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    if-eqz v3, :cond_0

    if-nez p4, :cond_0

    move-object/from16 v0, p1

    iget-object v4, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    .line 14606
    move-object/from16 v0, p1

    iget-object v3, v0, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    iget-object v5, v5, Landroid/content/res/Configuration;->locale:Ljava/util/Locale;

    invoke-virtual {v3, v5}, Ljava/util/Locale;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_5

    const/4 v3, 0x1

    :goto_0
    move-object/from16 v0, p1

    iget-boolean v5, v0, Landroid/content/res/Configuration;->userSetLocale:Z

    move-object/from16 v0, p0

    invoke-direct {v0, v4, v3, v5}, Lcom/android/server/am/ActivityManagerService;->saveLocaleLocked(Ljava/util/Locale;ZZ)V

    :cond_0
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    if-gtz v3, :cond_1

    const/4 v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    :cond_1
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfigurationSeq:I

    move-object/from16 v0, v27

    iput v3, v0, Landroid/content/res/Configuration;->seq:I

    move-object/from16 v0, v27

    move-object/from16 v1, p0

    iput-object v0, v1, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    const-string v3, "ActivityManager"

    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "Config changes="

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-static/range {v21 .. v21}, Ljava/lang/Integer;->toHexString(I)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    const-string v5, " "

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    move-object/from16 v0, v27

    invoke-virtual {v4, v0}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-static {v3, v4}, Landroid/util/Slog;->i(Ljava/lang/String;Ljava/lang/String;)I

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    move-object/from16 v0, p0

    iget v4, v0, Lcom/android/server/am/ActivityManagerService;->mCurrentUserId:I

    move-object/from16 v0, v27

    invoke-virtual {v3, v0, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportConfigurationChange(Landroid/content/res/Configuration;I)V

    new-instance v22, Landroid/content/res/Configuration;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    move-object/from16 v0, v22

    invoke-direct {v0, v3}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    .local v22, "configCopy":Landroid/content/res/Configuration;
    invoke-static/range {v27 .. v27}, Lcom/android/server/am/ActivityManagerService;->shouldShowDialogs(Landroid/content/res/Configuration;)Z

    move-result v3

    move-object/from16 v0, p0

    iput-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mShowDialogs:Z

    invoke-static {}, Lcom/android/server/AttributeCache;->instance()Lcom/android/server/AttributeCache;

    move-result-object v19

    .local v19, "ac":Lcom/android/server/AttributeCache;
    if-eqz v19, :cond_2

    move-object/from16 v0, v19

    move-object/from16 v1, v22

    invoke-virtual {v0, v1}, Lcom/android/server/AttributeCache;->updateConfiguration(Landroid/content/res/Configuration;)V

    :cond_2
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mSystemThread:Landroid/app/ActivityThread;

    move-object/from16 v0, v22

    invoke-virtual {v3, v0}, Landroid/app/ActivityThread;->applyConfigurationToResources(Landroid/content/res/Configuration;)V

    if-eqz p3, :cond_3

    invoke-static/range {v21 .. v21}, Landroid/provider/Settings$System;->hasInterestingConfigurationChanges(I)Z

    move-result v3

    if-eqz v3, :cond_3

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const/4 v4, 0x4

    invoke-virtual {v3, v4}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v26

    .local v26, "msg":Landroid/os/Message;
    new-instance v3, Landroid/content/res/Configuration;

    move-object/from16 v0, v22

    invoke-direct {v3, v0}, Landroid/content/res/Configuration;-><init>(Landroid/content/res/Configuration;)V

    move-object/from16 v0, v26

    iput-object v3, v0, Landroid/os/Message;->obj:Ljava/lang/Object;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    move-object/from16 v0, v26

    invoke-virtual {v3, v0}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessage(Landroid/os/Message;)Z

    .end local v26    # "msg":Landroid/os/Message;
    :cond_3
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    add-int/lit8 v23, v3, -0x1

    .local v23, "i":I
    :goto_1
    if-ltz v23, :cond_6

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v23

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v20

    check-cast v20, Lcom/android/server/am/ProcessRecord;

    .local v20, "app":Lcom/android/server/am/ProcessRecord;
    :try_start_0
    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_4

    move-object/from16 v0, v20

    iget-object v3, v0, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move-object/from16 v0, v22

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleConfigurationChanged(Landroid/content/res/Configuration;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    :cond_4
    :goto_2
    add-int/lit8 v23, v23, -0x1

    goto :goto_1

    .end local v19    # "ac":Lcom/android/server/AttributeCache;
    .end local v20    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "configCopy":Landroid/content/res/Configuration;
    .end local v23    # "i":I
    :cond_5
    const/4 v3, 0x0

    goto/16 :goto_0

    .restart local v19    # "ac":Lcom/android/server/AttributeCache;
    .restart local v22    # "configCopy":Landroid/content/res/Configuration;
    .restart local v23    # "i":I
    :cond_6
    new-instance v6, Landroid/content/Intent;

    const-string v3, "android.intent.action.CONFIGURATION_CHANGED"

    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .local v6, "intent":Landroid/content/Intent;
    const/high16 v3, 0x70000000

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v17, 0x3e8

    const/16 v18, -0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    and-int/lit8 v3, v21, 0x4

    if-eqz v3, :cond_7

    new-instance v6, Landroid/content/Intent;

    .end local v6    # "intent":Landroid/content/Intent;
    const-string v3, "android.intent.action.LOCALE_CHANGED"

    invoke-direct {v6, v3}, Landroid/content/Intent;-><init>(Ljava/lang/String;)V

    .restart local v6    # "intent":Landroid/content/Intent;
    const/high16 v3, 0x10000000

    invoke-virtual {v6, v3}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v7, 0x0

    const/4 v8, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    const/4 v11, 0x0

    const/4 v12, 0x0

    const/4 v13, -0x1

    const/4 v14, 0x0

    const/4 v15, 0x0

    sget v16, Lcom/android/server/am/ActivityManagerService;->MY_PID:I

    const/16 v17, 0x3e8

    const/16 v18, -0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v18}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    .end local v6    # "intent":Landroid/content/Intent;
    .end local v19    # "ac":Lcom/android/server/AttributeCache;
    .end local v22    # "configCopy":Landroid/content/res/Configuration;
    .end local v23    # "i":I
    .end local v27    # "newConfig":Landroid/content/res/Configuration;
    :cond_7
    const/16 v24, 0x1

    .local v24, "kept":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v3}, Lcom/android/server/am/ActivityStackSupervisor;->getFocusedStack()Lcom/android/server/am/ActivityStack;

    move-result-object v25

    .local v25, "mainStack":Lcom/android/server/am/ActivityStack;
    if-eqz v25, :cond_9

    if-eqz v21, :cond_8

    if-nez p2, :cond_8

    const/4 v3, 0x0

    move-object/from16 v0, v25

    invoke-virtual {v0, v3}, Lcom/android/server/am/ActivityStack;->topRunningActivityLocked(Lcom/android/server/am/ActivityRecord;)Lcom/android/server/am/ActivityRecord;

    move-result-object p2

    :cond_8
    if-eqz p2, :cond_9

    move-object/from16 v0, v25

    move-object/from16 v1, p2

    move/from16 v2, v21

    invoke-virtual {v0, v1, v2}, Lcom/android/server/am/ActivityStack;->ensureActivityConfigurationLocked(Lcom/android/server/am/ActivityRecord;I)Z

    move-result v24

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    move-object/from16 v0, p2

    move/from16 v1, v21

    invoke-virtual {v3, v0, v1}, Lcom/android/server/am/ActivityStackSupervisor;->ensureActivitiesVisibleLocked(Lcom/android/server/am/ActivityRecord;I)V

    :cond_9
    if-eqz p1, :cond_a

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    if-eqz v3, :cond_a

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mWindowManager:Lcom/android/server/wm/WindowManagerService;

    move-object/from16 v0, p0

    iget-object v4, v0, Lcom/android/server/am/ActivityManagerService;->mConfiguration:Landroid/content/res/Configuration;

    invoke-virtual {v3, v4}, Lcom/android/server/wm/WindowManagerService;->setNewConfiguration(Landroid/content/res/Configuration;)V

    :cond_a
    return v24

    .end local v24    # "kept":Z
    .end local v25    # "mainStack":Lcom/android/server/am/ActivityStack;
    .restart local v19    # "ac":Lcom/android/server/AttributeCache;
    .restart local v20    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v22    # "configCopy":Landroid/content/res/Configuration;
    .restart local v23    # "i":I
    .restart local v27    # "newConfig":Landroid/content/res/Configuration;
    :catch_0
    move-exception v3

    goto/16 :goto_2
.end method

.method updateCpuStats()V
    .locals 6

    .prologue
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v0

    .local v0, "now":J
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    invoke-virtual {v2}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v2

    const-wide/16 v4, 0x1388

    sub-long v4, v0, v4

    cmp-long v2, v2, v4

    if-ltz v2, :cond_1

    :cond_0
    :goto_0
    return-void

    :cond_1
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    const/4 v3, 0x1

    const/4 v4, 0x0

    invoke-virtual {v2, v3, v4}, Ljava/util/concurrent/atomic/AtomicBoolean;->compareAndSet(ZZ)Z

    move-result v2

    if-eqz v2, :cond_0

    iget-object v3, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    monitor-enter v3

    :try_start_0
    iget-object v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuThread:Ljava/lang/Thread;

    invoke-virtual {v2}, Ljava/lang/Object;->notify()V

    monitor-exit v3

    goto :goto_0

    :catchall_0
    move-exception v2

    monitor-exit v3
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method updateCpuStatsNow()V
    .locals 34

    .prologue
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v27, v0

    monitor-enter v27

    :try_start_0
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuMutexFree:Ljava/util/concurrent/atomic/AtomicBoolean;

    move-object/from16 v26, v0

    const/16 v28, 0x0

    move-object/from16 v0, v26

    move/from16 v1, v28

    invoke-virtual {v0, v1}, Ljava/util/concurrent/atomic/AtomicBoolean;->set(Z)V

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v12

    .local v12, "now":J
    const/4 v7, 0x0

    .local v7, "haveNewCpuStats":Z
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Ljava/util/concurrent/atomic/AtomicLong;->get()J

    move-result-wide v28

    const-wide/16 v30, 0x1388

    sub-long v30, v12, v30

    cmp-long v26, v28, v30

    if-gez v26, :cond_1

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastCpuTime:Ljava/util/concurrent/atomic/AtomicLong;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    invoke-virtual {v0, v12, v13}, Ljava/util/concurrent/atomic/AtomicLong;->set(J)V

    const/4 v7, 0x1

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->update()V

    const-string v26, "true"

    const-string v28, "events.cpu"

    invoke-static/range {v28 .. v28}, Landroid/os/SystemProperties;->get(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v28

    move-object/from16 v0, v26

    move-object/from16 v1, v28

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v26

    if-eqz v26, :cond_1

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->getLastUserTime()I

    move-result v25

    .local v25, "user":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSystemTime()I

    move-result v21

    .local v21, "system":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIoWaitTime()I

    move-result v10

    .local v10, "iowait":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIrqTime()I

    move-result v11

    .local v11, "irq":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->getLastSoftIrqTime()I

    move-result v19

    .local v19, "softIrq":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->getLastIdleTime()I

    move-result v9

    .local v9, "idle":I
    add-int v26, v25, v21

    add-int v26, v26, v10

    add-int v26, v26, v11

    add-int v26, v26, v19

    add-int v22, v26, v9

    .local v22, "total":I
    if-nez v22, :cond_0

    const/16 v22, 0x1

    :cond_0
    const/16 v26, 0xaa1

    const/16 v28, 0x6

    move/from16 v0, v28

    new-array v0, v0, [Ljava/lang/Object;

    move-object/from16 v28, v0

    const/16 v29, 0x0

    add-int v30, v25, v21

    add-int v30, v30, v10

    add-int v30, v30, v11

    add-int v30, v30, v19

    mul-int/lit8 v30, v30, 0x64

    div-int v30, v30, v22

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    aput-object v30, v28, v29

    const/16 v29, 0x1

    mul-int/lit8 v30, v25, 0x64

    div-int v30, v30, v22

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    aput-object v30, v28, v29

    const/16 v29, 0x2

    mul-int/lit8 v30, v21, 0x64

    div-int v30, v30, v22

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    aput-object v30, v28, v29

    const/16 v29, 0x3

    mul-int/lit8 v30, v10, 0x64

    div-int v30, v30, v22

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    aput-object v30, v28, v29

    const/16 v29, 0x4

    mul-int/lit8 v30, v11, 0x64

    div-int v30, v30, v22

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    aput-object v30, v28, v29

    const/16 v29, 0x5

    mul-int/lit8 v30, v19, 0x64

    div-int v30, v30, v22

    invoke-static/range {v30 .. v30}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v30

    aput-object v30, v28, v29

    move/from16 v0, v26

    move-object/from16 v1, v28

    invoke-static {v0, v1}, Landroid/util/EventLog;->writeEvent(I[Ljava/lang/Object;)I

    .end local v9    # "idle":I
    .end local v10    # "iowait":I
    .end local v11    # "irq":I
    .end local v19    # "softIrq":I
    .end local v21    # "system":I
    .end local v22    # "total":I
    .end local v25    # "user":I
    :cond_1
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->getLastCpuSpeedTimes()[J

    move-result-object v6

    .local v6, "cpuSpeedTimes":[J
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v5

    .local v5, "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    monitor-enter v5
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_2

    :try_start_1
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v28, v0

    monitor-enter v28
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    if-eqz v7, :cond_9

    :try_start_2
    move-object/from16 v0, p0

    iget-boolean v0, v0, Lcom/android/server/am/ActivityManagerService;->mOnBattery:Z

    move/from16 v26, v0

    if-eqz v26, :cond_9

    invoke-virtual {v5}, Lcom/android/internal/os/BatteryStatsImpl;->startAddingCpuLocked()I

    move-result v16

    .local v16, "perc":I
    const/16 v24, 0x0

    .local v24, "totalUTime":I
    const/16 v23, 0x0

    .local v23, "totalSTime":I
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/ProcessCpuTracker;->countStats()I

    move-result v4

    .local v4, "N":I
    const/4 v8, 0x0

    .local v8, "i":I
    :goto_0
    if-ge v8, v4, :cond_8

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mProcessCpuTracker:Lcom/android/internal/os/ProcessCpuTracker;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    invoke-virtual {v0, v8}, Lcom/android/internal/os/ProcessCpuTracker;->getStats(I)Lcom/android/internal/os/ProcessCpuTracker$Stats;

    move-result-object v20

    .local v20, "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    move-object/from16 v0, v20

    iget-boolean v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->working:Z

    move/from16 v26, v0

    if-nez v26, :cond_2

    :goto_1
    add-int/lit8 v8, v8, 0x1

    goto :goto_0

    :cond_2
    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mPidsSelfLocked:Landroid/util/SparseArray;

    move-object/from16 v26, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->pid:I

    move/from16 v29, v0

    move-object/from16 v0, v26

    move/from16 v1, v29

    invoke-virtual {v0, v1}, Landroid/util/SparseArray;->get(I)Ljava/lang/Object;

    move-result-object v17

    check-cast v17, Lcom/android/server/am/ProcessRecord;

    .local v17, "pr":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v26, v0

    mul-int v26, v26, v16

    div-int/lit8 v15, v26, 0x64

    .local v15, "otherUTime":I
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v26, v0

    mul-int v26, v26, v16

    div-int/lit8 v14, v26, 0x64

    .local v14, "otherSTime":I
    add-int v24, v24, v15

    add-int v23, v23, v14

    if-eqz v17, :cond_5

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->curProcBatteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-object/from16 v18, v0

    .local v18, "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    if-eqz v18, :cond_3

    invoke-virtual/range {v18 .. v18}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->isActive()Z

    move-result v26

    if-nez v26, :cond_4

    :cond_3
    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    move-object/from16 v26, v0

    move-object/from16 v0, v26

    iget v0, v0, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v26, v0

    move-object/from16 v0, v17

    iget-object v0, v0, Lcom/android/server/am/ProcessRecord;->processName:Ljava/lang/String;

    move-object/from16 v29, v0

    move/from16 v0, v26

    move-object/from16 v1, v29

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, v17

    iput-object v0, v1, Lcom/android/server/am/ProcessRecord;->curProcBatteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    :cond_4
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v26, v0

    sub-int v26, v26, v15

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v29, v0

    sub-int v29, v29, v14

    move-object/from16 v0, v18

    move/from16 v1, v26

    move/from16 v2, v29

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addSpeedStepTimes([J)V

    move-object/from16 v0, v17

    iget-wide v0, v0, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    move-wide/from16 v30, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v26, v0

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v29, v0

    add-int v26, v26, v29

    mul-int/lit8 v26, v26, 0xa

    move/from16 v0, v26

    int-to-long v0, v0

    move-wide/from16 v32, v0

    add-long v30, v30, v32

    move-wide/from16 v0, v30

    move-object/from16 v2, v17

    iput-wide v0, v2, Lcom/android/server/am/ProcessRecord;->curCpuTime:J

    goto/16 :goto_1

    .end local v4    # "N":I
    .end local v8    # "i":I
    .end local v14    # "otherSTime":I
    .end local v15    # "otherUTime":I
    .end local v16    # "perc":I
    .end local v17    # "pr":Lcom/android/server/am/ProcessRecord;
    .end local v18    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v20    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .end local v23    # "totalSTime":I
    .end local v24    # "totalUTime":I
    :catchall_0
    move-exception v26

    monitor-exit v28
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    :try_start_3
    throw v26

    :catchall_1
    move-exception v26

    monitor-exit v5
    :try_end_3
    .catchall {:try_start_3 .. :try_end_3} :catchall_1

    :try_start_4
    throw v26

    .end local v5    # "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    .end local v6    # "cpuSpeedTimes":[J
    .end local v7    # "haveNewCpuStats":Z
    .end local v12    # "now":J
    :catchall_2
    move-exception v26

    monitor-exit v27
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_2

    throw v26

    .restart local v4    # "N":I
    .restart local v5    # "bstats":Lcom/android/internal/os/BatteryStatsImpl;
    .restart local v6    # "cpuSpeedTimes":[J
    .restart local v7    # "haveNewCpuStats":Z
    .restart local v8    # "i":I
    .restart local v12    # "now":J
    .restart local v14    # "otherSTime":I
    .restart local v15    # "otherUTime":I
    .restart local v16    # "perc":I
    .restart local v17    # "pr":Lcom/android/server/am/ProcessRecord;
    .restart local v20    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    .restart local v23    # "totalSTime":I
    .restart local v24    # "totalUTime":I
    :cond_5
    :try_start_5
    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-object/from16 v18, v0

    .restart local v18    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    if-eqz v18, :cond_6

    invoke-virtual/range {v18 .. v18}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->isActive()Z

    move-result v26

    if-nez v26, :cond_7

    .line 14616
    :cond_6
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->uid:I

    move/from16 v26, v0

    move/from16 v0, v26

    invoke-virtual {v5, v0}, Lcom/android/internal/os/BatteryStatsImpl;->mapUid(I)I

    move-result v26

    move-object/from16 v0, v20

    iget-object v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->name:Ljava/lang/String;

    move-object/from16 v29, v0

    move/from16 v0, v26

    move-object/from16 v1, v29

    invoke-virtual {v5, v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->getProcessStatsLocked(ILjava/lang/String;)Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    move-result-object v18

    move-object/from16 v0, v18

    move-object/from16 v1, v20

    iput-object v0, v1, Lcom/android/internal/os/ProcessCpuTracker$Stats;->batteryStats:Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;

    :cond_7
    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_utime:I

    move/from16 v26, v0

    sub-int v26, v26, v15

    move-object/from16 v0, v20

    iget v0, v0, Lcom/android/internal/os/ProcessCpuTracker$Stats;->rel_stime:I

    move/from16 v29, v0

    sub-int v29, v29, v14

    move-object/from16 v0, v18

    move/from16 v1, v26

    move/from16 v2, v29

    invoke-virtual {v0, v1, v2}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addCpuTimeLocked(II)V

    move-object/from16 v0, v18

    invoke-virtual {v0, v6}, Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;->addSpeedStepTimes([J)V

    goto/16 :goto_1

    .end local v14    # "otherSTime":I
    .end local v15    # "otherUTime":I
    .end local v17    # "pr":Lcom/android/server/am/ProcessRecord;
    .end local v18    # "ps":Lcom/android/internal/os/BatteryStatsImpl$Uid$Proc;
    .end local v20    # "st":Lcom/android/internal/os/ProcessCpuTracker$Stats;
    :cond_8
    move/from16 v0, v16

    move/from16 v1, v24

    move/from16 v2, v23

    invoke-virtual {v5, v0, v1, v2, v6}, Lcom/android/internal/os/BatteryStatsImpl;->finishAddingCpuLocked(III[J)V

    .end local v4    # "N":I
    .end local v8    # "i":I
    .end local v16    # "perc":I
    .end local v23    # "totalSTime":I
    .end local v24    # "totalUTime":I
    :cond_9
    monitor-exit v28
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    :try_start_6
    move-object/from16 v0, p0

    iget-wide v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    move-wide/from16 v28, v0

    const-wide/32 v30, 0x1b7740

    sub-long v30, v12, v30

    cmp-long v26, v28, v30

    if-gez v26, :cond_a

    move-object/from16 v0, p0

    iput-wide v12, v0, Lcom/android/server/am/ActivityManagerService;->mLastWriteTime:J

    move-object/from16 v0, p0

    iget-object v0, v0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    move-object/from16 v26, v0

    invoke-virtual/range {v26 .. v26}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v26

    invoke-virtual/range {v26 .. v26}, Lcom/android/internal/os/BatteryStatsImpl;->writeAsyncLocked()V

    .line 14640
    :cond_a
    monitor-exit v5
    :try_end_6
    .catchall {:try_start_6 .. :try_end_6} :catchall_1

    :try_start_7
    monitor-exit v27
    :try_end_7
    .catchall {:try_start_7 .. :try_end_7} :catchall_2

    return-void
.end method

.method final updateLruProcessLocked(Lcom/android/server/am/ProcessRecord;ZLcom/android/server/am/ProcessRecord;)V
    .locals 29
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "activityChange"    # Z
    .param p3, "client"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-gtz v2, :cond_0

    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->hasClientActivities:Z

    if-nez v2, :cond_0

    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->treatLikeActivity:Z

    if-eqz v2, :cond_2

    :cond_0
    const/16 v20, 0x1

    .local v20, "hasActivity":Z
    :goto_0
    const/16 v21, 0x0

    .local v21, "hasService":Z
    if-nez p2, :cond_3

    if-eqz v20, :cond_3

    :cond_1
    :goto_1
    return-void

    .end local v20    # "hasActivity":Z
    .end local v21    # "hasService":Z
    :cond_2
    const/16 v20, 0x0

    goto :goto_0

    .restart local v20    # "hasActivity":Z
    .restart local v21    # "hasService":Z
    :cond_3
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v4

    .local v4, "now":J
    move-object/from16 v0, p1

    iput-wide v4, v0, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    if-eqz v20, :cond_a

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v18

    .local v18, "N":I
    if-lez v18, :cond_4

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v18, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object/from16 v0, p1

    if-eq v2, v0, :cond_1

    .end local v18    # "N":I
    :cond_4
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v25

    .local v25, "lrui":I
    move-object/from16 v0, p1

    iget-boolean v2, v0, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-eqz v2, :cond_5

    if-gez v25, :cond_1

    :cond_5
    if-ltz v25, :cond_8

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    move/from16 v0, v25

    if-ge v0, v2, :cond_6

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v2, v2, -0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    :cond_6
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    move/from16 v0, v25

    if-ge v0, v2, :cond_7

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v2, v2, -0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    :cond_7
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v25

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    :cond_8
    if-eqz v20, :cond_e

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v18

    .restart local v18    # "N":I
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->activities:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-nez v2, :cond_b

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v3, v18, -0x1

    if-ge v2, v3, :cond_b

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v18, -0x1

    move-object/from16 v0, p1

    invoke-virtual {v2, v3, v0}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v0, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v28, v0

    .local v28, "uid":I
    add-int/lit8 v22, v18, -0x2

    .local v22, "i":I
    :goto_2
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    move/from16 v0, v22

    if-le v0, v2, :cond_c

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v26

    check-cast v26, Lcom/android/server/am/ProcessRecord;

    .local v26, "subProc":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, v26

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, v28

    if-ne v2, v0, :cond_c

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v22, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ProcessRecord;

    iget-object v2, v2, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v2, v2, Landroid/content/pm/ApplicationInfo;->uid:I

    move/from16 v0, v28

    if-eq v2, v0, :cond_9

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v22

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v27

    check-cast v27, Lcom/android/server/am/ProcessRecord;

    .local v27, "tmp":Lcom/android/server/am/ProcessRecord;
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v7, v22, -0x1

    invoke-virtual {v3, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    move/from16 v0, v22

    invoke-virtual {v2, v0, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    add-int/lit8 v3, v22, -0x1

    move-object/from16 v0, v27

    invoke-virtual {v2, v3, v0}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v22, v22, -0x1

    .end local v27    # "tmp":Lcom/android/server/am/ProcessRecord;
    :cond_9
    add-int/lit8 v22, v22, -0x1

    goto :goto_2

    .end local v18    # "N":I
    .end local v22    # "i":I
    .end local v25    # "lrui":I
    .end local v26    # "subProc":Lcom/android/server/am/ProcessRecord;
    .end local v28    # "uid":I
    :cond_a
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    if-lez v2, :cond_4

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v3, v3, -0x1

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    move-object/from16 v0, p1

    if-ne v2, v0, :cond_4

    goto/16 :goto_1

    .restart local v18    # "N":I
    .restart local v25    # "lrui":I
    :cond_b
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p1

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_c
    move-object/from16 v0, p0

    iget v6, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    .end local v18    # "N":I
    .local v6, "nextIndex":I
    :goto_3
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->connections:Landroid/util/ArraySet;

    invoke-virtual {v2}, Landroid/util/ArraySet;->size()I

    move-result v2

    add-int/lit8 v24, v2, -0x1

    .local v24, "j":I
    :goto_4
    if-ltz v24, :cond_11

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->connections:Landroid/util/ArraySet;

    move/from16 v0, v24

    invoke-virtual {v2, v0}, Landroid/util/ArraySet;->valueAt(I)Ljava/lang/Object;

    move-result-object v8

    check-cast v8, Lcom/android/server/am/ConnectionRecord;

    .local v8, "cr":Lcom/android/server/am/ConnectionRecord;
    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    if-eqz v2, :cond_d

    iget-boolean v2, v8, Lcom/android/server/am/ConnectionRecord;->serviceDead:Z

    if-nez v2, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    if-eqz v2, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->lruSeq:I

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    if-eq v2, v3, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v2, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v2, :cond_d

    iget-object v2, v8, Lcom/android/server/am/ConnectionRecord;->binding:Lcom/android/server/am/AppBindRecord;

    iget-object v2, v2, Lcom/android/server/am/AppBindRecord;->service:Lcom/android/server/am/ServiceRecord;

    iget-object v3, v2, Lcom/android/server/am/ServiceRecord;->app:Lcom/android/server/am/ProcessRecord;

    const-string v7, "service connection"

    move-object/from16 v2, p0

    move-object/from16 v9, p1

    invoke-direct/range {v2 .. v9}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I

    move-result v6

    :cond_d
    add-int/lit8 v24, v24, -0x1

    goto :goto_4

    .end local v6    # "nextIndex":I
    .end local v8    # "cr":Lcom/android/server/am/ConnectionRecord;
    .end local v24    # "j":I
    :cond_e
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    move/from16 v23, v0

    .local v23, "index":I
    if-eqz p3, :cond_10

    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move-object/from16 v0, p3

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->lastIndexOf(Ljava/lang/Object;)I

    move-result v19

    .local v19, "clientIndex":I
    move/from16 v0, v19

    move/from16 v1, v25

    if-gt v0, v1, :cond_f

    move/from16 v19, v25

    :cond_f
    if-ltz v19, :cond_10

    move/from16 v0, v23

    move/from16 v1, v19

    if-le v0, v1, :cond_10

    move/from16 v23, v19

    .end local v19    # "clientIndex":I
    :cond_10
    move-object/from16 v0, p0

    iget-object v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v23

    move-object/from16 v1, p1

    invoke-virtual {v2, v0, v1}, Ljava/util/ArrayList;->add(ILjava/lang/Object;)V

    add-int/lit8 v6, v23, -0x1

    .restart local v6    # "nextIndex":I
    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessActivityStart:I

    move-object/from16 v0, p0

    iget v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    add-int/lit8 v2, v2, 0x1

    move-object/from16 v0, p0

    iput v2, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcessServiceStart:I

    goto/16 :goto_3

    .end local v23    # "index":I
    .restart local v24    # "j":I
    :cond_11
    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    add-int/lit8 v24, v2, -0x1

    :goto_5
    if-ltz v24, :cond_1

    move-object/from16 v0, p1

    iget-object v2, v0, Lcom/android/server/am/ProcessRecord;->conProviders:Ljava/util/ArrayList;

    move/from16 v0, v24

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/android/server/am/ContentProviderConnection;

    iget-object v0, v2, Lcom/android/server/am/ContentProviderConnection;->provider:Lcom/android/server/am/ContentProviderRecord;

    move-object/from16 v16, v0

    .local v16, "cpr":Lcom/android/server/am/ContentProviderRecord;
    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    if-eqz v2, :cond_12

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget v2, v2, Lcom/android/server/am/ProcessRecord;->lruSeq:I

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruSeq:I

    if-eq v2, v3, :cond_12

    move-object/from16 v0, v16

    iget-object v2, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    iget-boolean v2, v2, Lcom/android/server/am/ProcessRecord;->persistent:Z

    if-nez v2, :cond_12

    move-object/from16 v0, v16

    iget-object v11, v0, Lcom/android/server/am/ContentProviderRecord;->proc:Lcom/android/server/am/ProcessRecord;

    const-string v15, "provider reference"

    move-object/from16 v10, p0

    move-wide v12, v4

    move v14, v6

    move-object/from16 v17, p1

    invoke-direct/range {v10 .. v17}, Lcom/android/server/am/ActivityManagerService;->updateLruProcessInternalLocked(Lcom/android/server/am/ProcessRecord;JILjava/lang/String;Ljava/lang/Object;Lcom/android/server/am/ProcessRecord;)I

    move-result v6

    :cond_12
    add-int/lit8 v24, v24, -0x1

    goto :goto_5
.end method

.method final updateOomAdjLocked()V
    .locals 45

    .prologue
    invoke-direct/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v16

    .local v16, "TOP_ACT":Lcom/android/server/am/ActivityRecord;
    if-eqz v16, :cond_7

    move-object/from16 v0, v16

    iget-object v6, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    .local v6, "TOP_APP":Lcom/android/server/am/ProcessRecord;
    :goto_0
    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v8

    .local v8, "now":J
    const-wide/32 v10, 0x1b7740

    sub-long v40, v8, v10

    .local v40, "oldTime":J
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v2

    .local v2, "N":I
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumAServiceProcs:I

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    if-gtz v3, :cond_8

    const/16 v19, 0x0

    .local v19, "cachedProcessLimit":I
    move/from16 v24, v19

    .local v24, "emptyProcessLimit":I
    :goto_1
    const/16 v37, 0x3

    .local v37, "numSlots":I
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    sub-int v3, v2, v3

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    sub-int v36, v3, v5

    .local v36, "numEmptyProcs":I
    move/from16 v0, v36

    move/from16 v1, v19

    if-le v0, v1, :cond_0

    move/from16 v36, v19

    :cond_0
    div-int v23, v36, v37

    .local v23, "emptyFactor":I
    const/4 v3, 0x1

    move/from16 v0, v23

    if-ge v0, v3, :cond_1

    const/16 v23, 0x1

    :cond_1
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    if-lez v3, :cond_a

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    :goto_2
    div-int v18, v3, v37

    .local v18, "cachedFactor":I
    const/4 v3, 0x1

    move/from16 v0, v18

    if-ge v0, v3, :cond_2

    const/16 v18, 0x1

    :cond_2
    const/16 v42, 0x0

    .local v42, "stepCached":I
    const/16 v43, 0x0

    .local v43, "stepEmpty":I
    const/16 v33, 0x0

    .local v33, "numCached":I
    const/16 v35, 0x0

    .local v35, "numEmpty":I
    const/16 v38, 0x0

    .local v38, "numTrimming":I
    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    const/4 v3, 0x0

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    const/16 v20, 0x9

    .local v20, "curCachedAdj":I
    add-int/lit8 v31, v20, 0x1

    .local v31, "nextCachedAdj":I
    const/16 v21, 0x9

    .local v21, "curEmptyAdj":I
    add-int/lit8 v32, v21, 0x2

    .local v32, "nextEmptyAdj":I
    add-int/lit8 v27, v2, -0x1

    .local v27, "i":I
    :goto_3
    if-ltz v27, :cond_c

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v27

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .local v4, "app":Lcom/android/server/am/ProcessRecord;
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v3, :cond_6

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_6

    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    const/16 v5, 0x10

    const/4 v7, 0x1

    move-object/from16 v3, p0

    invoke-direct/range {v3 .. v9}, Lcom/android/server/am/ActivityManagerService;->computeOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)I

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    const/16 v5, 0x10

    if-lt v3, v5, :cond_3

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    packed-switch v3, :pswitch_data_0

    move/from16 v0, v21

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move/from16 v0, v21

    invoke-virtual {v4, v0}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move/from16 v0, v21

    move/from16 v1, v32

    if-eq v0, v1, :cond_3

    add-int/lit8 v43, v43, 0x1

    move/from16 v0, v43

    move/from16 v1, v23

    if-lt v0, v1, :cond_3

    const/16 v43, 0x0

    move/from16 v21, v32

    add-int/lit8 v32, v32, 0x2

    const/16 v3, 0xf

    move/from16 v0, v32

    if-le v0, v3, :cond_3

    const/16 v32, 0xf

    :cond_3
    :goto_4
    const/4 v13, 0x1

    move-object/from16 v10, p0

    move-object v11, v4

    move-object v12, v6

    move-wide v14, v8

    invoke-direct/range {v10 .. v15}, Lcom/android/server/am/ActivityManagerService;->applyOomAdjLocked(Lcom/android/server/am/ProcessRecord;Lcom/android/server/am/ProcessRecord;ZJ)Z

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    packed-switch v3, :pswitch_data_1

    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumNonCachedProcs:I

    :cond_4
    :goto_5
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->isolated:Z

    if-eqz v3, :cond_5

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->services:Landroid/util/ArraySet;

    invoke-virtual {v3}, Landroid/util/ArraySet;->size()I

    move-result v3

    if-gtz v3, :cond_5

    const-string v3, "isolated not needed"

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    :cond_5
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0x9

    if-lt v3, v5, :cond_6

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v3, :cond_6

    add-int/lit8 v38, v38, 0x1

    :cond_6
    add-int/lit8 v27, v27, -0x1

    goto/16 :goto_3

    .end local v2    # "N":I
    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v6    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .end local v8    # "now":J
    .end local v18    # "cachedFactor":I
    .end local v19    # "cachedProcessLimit":I
    .end local v20    # "curCachedAdj":I
    .end local v21    # "curEmptyAdj":I
    .end local v23    # "emptyFactor":I
    .end local v24    # "emptyProcessLimit":I
    .end local v27    # "i":I
    .end local v31    # "nextCachedAdj":I
    .end local v32    # "nextEmptyAdj":I
    .end local v33    # "numCached":I
    .end local v35    # "numEmpty":I
    .end local v36    # "numEmptyProcs":I
    .end local v37    # "numSlots":I
    .end local v38    # "numTrimming":I
    .end local v40    # "oldTime":J
    .end local v42    # "stepCached":I
    .end local v43    # "stepEmpty":I
    :cond_7
    const/4 v6, 0x0

    goto/16 :goto_0

    .restart local v2    # "N":I
    .restart local v6    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .restart local v8    # "now":J
    .restart local v40    # "oldTime":J
    :cond_8
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    const/4 v5, 0x1

    if-ne v3, v5, :cond_9

    const/16 v24, 0x1

    .restart local v24    # "emptyProcessLimit":I
    const/16 v19, 0x0

    .restart local v19    # "cachedProcessLimit":I
    goto/16 :goto_1

    .end local v19    # "cachedProcessLimit":I
    .end local v24    # "emptyProcessLimit":I
    :cond_9
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    invoke-static {v3}, Lcom/android/server/am/ProcessList;->computeEmptyProcessLimit(I)I

    move-result v24

    .restart local v24    # "emptyProcessLimit":I
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessLimit:I

    sub-int v19, v3, v24

    .restart local v19    # "cachedProcessLimit":I
    goto/16 :goto_1

    .restart local v23    # "emptyFactor":I
    .restart local v36    # "numEmptyProcs":I
    .restart local v37    # "numSlots":I
    :cond_a
    const/4 v3, 0x1

    goto/16 :goto_2

    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v18    # "cachedFactor":I
    .restart local v20    # "curCachedAdj":I
    .restart local v21    # "curEmptyAdj":I
    .restart local v27    # "i":I
    .restart local v31    # "nextCachedAdj":I
    .restart local v32    # "nextEmptyAdj":I
    .restart local v33    # "numCached":I
    .restart local v35    # "numEmpty":I
    .restart local v38    # "numTrimming":I
    .restart local v42    # "stepCached":I
    .restart local v43    # "stepEmpty":I
    :pswitch_0
    move/from16 v0, v20

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    move/from16 v0, v20

    invoke-virtual {v4, v0}, Lcom/android/server/am/ProcessRecord;->modifyRawOomAdj(I)I

    move-result v3

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->curAdj:I

    move/from16 v0, v20

    move/from16 v1, v31

    if-eq v0, v1, :cond_3

    add-int/lit8 v42, v42, 0x1

    move/from16 v0, v42

    move/from16 v1, v18

    if-lt v0, v1, :cond_3

    const/16 v42, 0x0

    move/from16 v20, v31

    add-int/lit8 v31, v31, 0x2

    const/16 v3, 0xf

    move/from16 v0, v31

    if-le v0, v3, :cond_3

    const/16 v31, 0xf

    goto/16 :goto_4

    :pswitch_1
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    add-int/lit8 v3, v3, 0x1

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumCachedHiddenProcs:I

    add-int/lit8 v33, v33, 0x1

    move/from16 v0, v33

    move/from16 v1, v19

    if-le v0, v1, :cond_4

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "cached #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v33

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_5

    :pswitch_2
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_EMPTY_APPS:I

    move/from16 v0, v35

    if-le v0, v3, :cond_b

    iget-wide v10, v4, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    cmp-long v3, v10, v40

    if-gez v3, :cond_b

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "empty for "

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-wide/32 v10, 0x1b7740

    add-long v10, v10, v40

    iget-wide v12, v4, Lcom/android/server/am/ProcessRecord;->lastActivityTime:J

    sub-long/2addr v10, v12

    const-wide/16 v12, 0x3e8

    div-long/2addr v10, v12

    invoke-virtual {v3, v10, v11}, Ljava/lang/StringBuilder;->append(J)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v5, "s"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_5

    :cond_b
    add-int/lit8 v35, v35, 0x1

    move/from16 v0, v35

    move/from16 v1, v24

    if-le v0, v1, :cond_4

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v5, "empty #"

    invoke-virtual {v3, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    move/from16 v0, v35

    invoke-virtual {v3, v0}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    const/4 v5, 0x1

    invoke-virtual {v4, v3, v5}, Lcom/android/server/am/ProcessRecord;->kill(Ljava/lang/String;Z)V

    goto/16 :goto_5

    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_c
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mNewNumServiceProcs:I

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mNumServiceProcs:I

    add-int v34, v33, v35

    .local v34, "numCachedAndEmpty":I
    sget v3, Lcom/android/server/am/ProcessList;->TRIM_CACHED_APPS:I

    move/from16 v0, v33

    if-gt v0, v3, :cond_19

    sget v3, Lcom/android/server/am/ProcessList;->TRIM_EMPTY_APPS:I

    move/from16 v0, v35

    if-gt v0, v3, :cond_19

    const/4 v3, 0x3

    move/from16 v0, v34

    if-gt v0, v3, :cond_17

    const/16 v29, 0x3

    .local v29, "memFactor":I
    :goto_6
    move-object/from16 v0, p0

    iget v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move/from16 v0, v29

    if-le v0, v3, :cond_e

    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAllowLowerMemLevel:Z

    if-eqz v3, :cond_d

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    move-object/from16 v0, p0

    iget v5, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    if-lt v3, v5, :cond_e

    :cond_d
    move-object/from16 v0, p0

    iget v0, v0, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move/from16 v29, v0

    :cond_e
    move/from16 v0, v29

    move-object/from16 v1, p0

    iput v0, v1, Lcom/android/server/am/ActivityManagerService;->mLastMemoryLevel:I

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    move-object/from16 v0, p0

    iput v3, v0, Lcom/android/server/am/ActivityManagerService;->mLastNumProcesses:I

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual/range {p0 .. p0}, Lcom/android/server/am/ActivityManagerService;->isSleeping()Z

    move-result v3

    if-nez v3, :cond_1a

    const/4 v3, 0x1

    :goto_7
    move/from16 v0, v29

    invoke-virtual {v5, v0, v3, v8, v9}, Lcom/android/server/am/ProcessStatsService;->setMemFactorLocked(IZJ)Z

    move-result v17

    .local v17, "allChanged":Z
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3}, Lcom/android/server/am/ProcessStatsService;->getMemFactorLocked()I

    move-result v44

    .local v44, "trackerMemFactor":I
    if-eqz v29, :cond_22

    move-object/from16 v0, p0

    iget-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v12, 0x0

    cmp-long v3, v10, v12

    if-nez v3, :cond_f

    move-object/from16 v0, p0

    iput-wide v8, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    :cond_f
    const/16 v39, 0x0

    .local v39, "step":I
    packed-switch v29, :pswitch_data_2

    const/16 v26, 0x5

    .local v26, "fgTrimLevel":I
    :goto_8
    div-int/lit8 v25, v38, 0x3

    .local v25, "factor":I
    const/16 v30, 0x2

    .local v30, "minFactor":I
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHomeProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_10

    add-int/lit8 v30, v30, 0x1

    :cond_10
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mPreviousProcess:Lcom/android/server/am/ProcessRecord;

    if-eqz v3, :cond_11

    add-int/lit8 v30, v30, 0x1

    :cond_11
    move/from16 v0, v25

    move/from16 v1, v30

    if-ge v0, v1, :cond_12

    move/from16 v25, v30

    :cond_12
    const/16 v22, 0x50

    .local v22, "curLevel":I
    add-int/lit8 v27, v2, -0x1

    :goto_9
    if-ltz v27, :cond_29

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v27

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    if-nez v17, :cond_13

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    if-eqz v3, :cond_14

    :cond_13
    move-object/from16 v0, p0

    move/from16 v1, v44

    invoke-direct {v0, v4, v1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    :cond_14
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/16 v5, 0x9

    if-lt v3, v5, :cond_1b

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->killedByAm:Z

    if-nez v3, :cond_1b

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v0, v22

    if-ge v3, v0, :cond_15

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_15

    :try_start_0
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move/from16 v0, v22

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_0
    .catch Landroid/os/RemoteException; {:try_start_0 .. :try_end_0} :catch_4

    :cond_15
    :goto_a
    move/from16 v0, v22

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    add-int/lit8 v39, v39, 0x1

    move/from16 v0, v39

    move/from16 v1, v25

    if-lt v0, v1, :cond_16

    .line 14641
    const/16 v39, 0x0

    sparse-switch v22, :sswitch_data_0

    :cond_16
    :goto_b
    add-int/lit8 v27, v27, -0x1

    goto :goto_9

    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v17    # "allChanged":Z
    .end local v22    # "curLevel":I
    .end local v25    # "factor":I
    .end local v26    # "fgTrimLevel":I
    .end local v29    # "memFactor":I
    .end local v30    # "minFactor":I
    .end local v39    # "step":I
    .end local v44    # "trackerMemFactor":I
    :cond_17
    const/4 v3, 0x5

    move/from16 v0, v34

    if-gt v0, v3, :cond_18

    const/16 v29, 0x2

    .restart local v29    # "memFactor":I
    goto/16 :goto_6

    .end local v29    # "memFactor":I
    :cond_18
    const/16 v29, 0x1

    .restart local v29    # "memFactor":I
    goto/16 :goto_6

    .end local v29    # "memFactor":I
    :cond_19
    const/16 v29, 0x0

    .restart local v29    # "memFactor":I
    goto/16 :goto_6

    :cond_1a
    const/4 v3, 0x0

    goto/16 :goto_7

    .restart local v17    # "allChanged":Z
    .restart local v39    # "step":I
    .restart local v44    # "trackerMemFactor":I
    :pswitch_3
    const/16 v26, 0xf

    .restart local v26    # "fgTrimLevel":I
    goto/16 :goto_8

    .end local v26    # "fgTrimLevel":I
    :pswitch_4
    const/16 v26, 0xa

    .restart local v26    # "fgTrimLevel":I
    goto/16 :goto_8

    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .restart local v22    # "curLevel":I
    .restart local v25    # "factor":I
    .restart local v30    # "minFactor":I
    :sswitch_0
    const/16 v22, 0x3c

    goto :goto_b

    :sswitch_1
    const/16 v22, 0x28

    goto :goto_b

    :cond_1b
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x6

    if-ne v3, v5, :cond_1d

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x28

    if-ge v3, v5, :cond_1c

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1c

    :try_start_1
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/16 v5, 0x28

    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_1
    .catch Landroid/os/RemoteException; {:try_start_1 .. :try_end_1} :catch_3

    :cond_1c
    :goto_c
    const/16 v3, 0x28

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    goto :goto_b

    :cond_1d
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    const/4 v5, 0x4

    if-ge v3, v5, :cond_1e

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-eqz v3, :cond_20

    :cond_1e
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    if-eqz v3, :cond_20

    const/16 v28, 0x14

    .local v28, "level":I
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x14

    if-ge v3, v5, :cond_1f

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_1f

    :try_start_2
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/16 v5, 0x14

    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_2
    .catch Landroid/os/RemoteException; {:try_start_2 .. :try_end_2} :catch_2

    :cond_1f
    :goto_d
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    .end local v28    # "level":I
    :cond_20
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    move/from16 v0, v26

    if-ge v3, v0, :cond_21

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_21

    :try_start_3
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    move/from16 v0, v26

    invoke-interface {v3, v0}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_3
    .catch Landroid/os/RemoteException; {:try_start_3 .. :try_end_3} :catch_1

    :cond_21
    :goto_e
    move/from16 v0, v26

    iput v0, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    goto :goto_b

    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    .end local v22    # "curLevel":I
    .end local v25    # "factor":I
    .end local v26    # "fgTrimLevel":I
    .end local v30    # "minFactor":I
    .end local v39    # "step":I
    :cond_22
    move-object/from16 v0, p0

    iget-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    const-wide/16 v12, 0x0

    cmp-long v3, v10, v12

    if-eqz v3, :cond_23

    move-object/from16 v0, p0

    iget-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    move-object/from16 v0, p0

    iget-wide v12, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    sub-long v12, v8, v12

    add-long/2addr v10, v12

    move-object/from16 v0, p0

    iput-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamTimeSinceLastIdle:J

    const-wide/16 v10, 0x0

    move-object/from16 v0, p0

    iput-wide v10, v0, Lcom/android/server/am/ActivityManagerService;->mLowRamStartTime:J

    :cond_23
    add-int/lit8 v27, v2, -0x1

    :goto_f
    if-ltz v27, :cond_29

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mLruProcesses:Ljava/util/ArrayList;

    move/from16 v0, v27

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/android/server/am/ProcessRecord;

    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    if-nez v17, :cond_24

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    if-eqz v3, :cond_25

    :cond_24
    move-object/from16 v0, p0

    move/from16 v1, v44

    invoke-direct {v0, v4, v1, v8, v9}, Lcom/android/server/am/ActivityManagerService;->setProcessTrackerStateLocked(Lcom/android/server/am/ProcessRecord;IJ)V

    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->procStateChanged:Z

    :cond_25
    iget v3, v4, Lcom/android/server/am/ProcessRecord;->curProcState:I

    .line 14693
    const/4 v5, 0x4

    if-ge v3, v5, :cond_26

    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->systemNoUi:Z

    if-eqz v3, :cond_28

    :cond_26
    iget-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    if-eqz v3, :cond_28

    iget v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    const/16 v5, 0x14

    if-ge v3, v5, :cond_27

    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    if-eqz v3, :cond_27

    :try_start_4
    iget-object v3, v4, Lcom/android/server/am/ProcessRecord;->thread:Landroid/app/IApplicationThread;

    const/16 v5, 0x14

    invoke-interface {v3, v5}, Landroid/app/IApplicationThread;->scheduleTrimMemory(I)V
    :try_end_4
    .catch Landroid/os/RemoteException; {:try_start_4 .. :try_end_4} :catch_0

    :cond_27
    :goto_10
    const/4 v3, 0x0

    iput-boolean v3, v4, Lcom/android/server/am/ProcessRecord;->pendingUiClean:Z

    :cond_28
    const/4 v3, 0x0

    iput v3, v4, Lcom/android/server/am/ProcessRecord;->trimMemoryLevel:I

    add-int/lit8 v27, v27, -0x1

    goto :goto_f

    .end local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :cond_29
    move-object/from16 v0, p0

    iget-boolean v3, v0, Lcom/android/server/am/ActivityManagerService;->mAlwaysFinishActivities:Z

    if-eqz v3, :cond_2a

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    const/4 v5, 0x0

    const-string v7, "always-finish"

    invoke-virtual {v3, v5, v7}, Lcom/android/server/am/ActivityStackSupervisor;->scheduleDestroyAllActivities(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;)V

    :cond_2a
    if-eqz v17, :cond_2b

    const/4 v3, 0x0

    move-object/from16 v0, p0

    iget-object v5, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v5}, Lcom/android/server/am/ProcessStatsService;->isMemFactorLowered()Z

    move-result v5

    move-object/from16 v0, p0

    invoke-virtual {v0, v8, v9, v3, v5}, Lcom/android/server/am/ActivityManagerService;->requestPssAllProcsLocked(JZZ)V

    :cond_2b
    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mProcessStats:Lcom/android/server/am/ProcessStatsService;

    invoke-virtual {v3, v8, v9}, Lcom/android/server/am/ProcessStatsService;->shouldWriteNowLocked(J)Z

    move-result v3

    if-eqz v3, :cond_2c

    move-object/from16 v0, p0

    iget-object v3, v0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    new-instance v5, Lcom/android/server/am/ActivityManagerService$23;

    move-object/from16 v0, p0

    invoke-direct {v5, v0}, Lcom/android/server/am/ActivityManagerService$23;-><init>(Lcom/android/server/am/ActivityManagerService;)V

    invoke-virtual {v3, v5}, Lcom/android/server/am/ActivityManagerService$MainHandler;->post(Ljava/lang/Runnable;)Z

    :cond_2c
    return-void

    .restart local v4    # "app":Lcom/android/server/am/ProcessRecord;
    :catch_0
    move-exception v3

    goto :goto_10

    .restart local v22    # "curLevel":I
    .restart local v25    # "factor":I
    .restart local v26    # "fgTrimLevel":I
    .restart local v30    # "minFactor":I
    .restart local v39    # "step":I
    :catch_1
    move-exception v3

    goto/16 :goto_e

    .restart local v28    # "level":I
    :catch_2
    move-exception v3

    goto/16 :goto_d

    .end local v28    # "level":I
    :catch_3
    move-exception v3

    goto/16 :goto_c

    :catch_4
    move-exception v3

    goto/16 :goto_a

    nop

    :pswitch_data_0
    .packed-switch 0xb
        :pswitch_0
        :pswitch_0
    .end packed-switch

    :pswitch_data_1
    .packed-switch 0xb
        :pswitch_1
        :pswitch_1
        :pswitch_2
    .end packed-switch

    :pswitch_data_2
    .packed-switch 0x2
        :pswitch_4
        :pswitch_3
    .end packed-switch

    :sswitch_data_0
    .sparse-switch
        0x3c -> :sswitch_1
        0x50 -> :sswitch_0
    .end sparse-switch
.end method

.method final updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;)Z
    .locals 11
    .param p1, "app"    # Lcom/android/server/am/ProcessRecord;

    .prologue
    const/16 v10, 0x10

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->resumedAppLocked()Lcom/android/server/am/ActivityRecord;

    move-result-object v0

    .local v0, "TOP_ACT":Lcom/android/server/am/ActivityRecord;
    if-eqz v0, :cond_2

    iget-object v4, v0, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    .local v4, "TOP_APP":Lcom/android/server/am/ProcessRecord;
    :goto_0
    iget-boolean v9, p1, Lcom/android/server/am/ProcessRecord;->cached:Z

    .local v9, "wasCached":Z
    iget v1, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    add-int/lit8 v1, v1, 0x1

    iput v1, p0, Lcom/android/server/am/ActivityManagerService;->mAdjSeq:I

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    const/16 v2, 0x9

    if-lt v1, v2, :cond_3

    iget v3, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    .local v3, "cachedAdj":I
    :goto_1
    const/4 v5, 0x0

    invoke-static {}, Landroid/os/SystemClock;->uptimeMillis()J

    move-result-wide v6

    move-object v1, p0

    move-object v2, p1

    invoke-direct/range {v1 .. v7}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked(Lcom/android/server/am/ProcessRecord;ILcom/android/server/am/ProcessRecord;ZJ)Z

    move-result v8

    .local v8, "success":Z
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->cached:Z

    if-ne v9, v1, :cond_0

    iget v1, p1, Lcom/android/server/am/ProcessRecord;->curRawAdj:I

    if-ne v1, v10, :cond_1

    :cond_0
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    :cond_1
    return v8

    .end local v3    # "cachedAdj":I
    .end local v4    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .end local v8    # "success":Z
    .end local v9    # "wasCached":Z
    :cond_2
    const/4 v4, 0x0

    goto :goto_0

    .restart local v4    # "TOP_APP":Lcom/android/server/am/ProcessRecord;
    .restart local v9    # "wasCached":Z
    :cond_3
    move v3, v10

    goto :goto_1
.end method

.method public updatePersistentConfiguration(Landroid/content/res/Configuration;)V
    .locals 5
    .param p1, "values"    # Landroid/content/res/Configuration;

    .prologue
    const-string v2, "android.permission.CHANGE_CONFIGURATION"

    const-string v3, "updateConfiguration()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    const-string v2, "android.permission.WRITE_SETTINGS"

    const-string v3, "updateConfiguration()"

    invoke-virtual {p0, v2, v3}, Lcom/android/server/am/ActivityManagerService;->enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V

    if-nez p1, :cond_0

    new-instance v2, Ljava/lang/NullPointerException;

    const-string v3, "Configuration must not be null"

    invoke-direct {v2, v3}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_0
    monitor-enter p0

    :try_start_0
    invoke-static {}, Landroid/os/Binder;->clearCallingIdentity()J

    move-result-wide v0

    .local v0, "origId":J
    const/4 v2, 0x0

    const/4 v3, 0x1

    const/4 v4, 0x0

    invoke-virtual {p0, p1, v2, v3, v4}, Lcom/android/server/am/ActivityManagerService;->updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/am/ActivityRecord;ZZ)Z

    invoke-static {v0, v1}, Landroid/os/Binder;->restoreCallingIdentity(J)V

    monitor-exit p0

    return-void

    .end local v0    # "origId":J
    :catchall_0
    move-exception v2

    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v2
.end method

.method final updateProcessForegroundLocked(Lcom/android/server/am/ProcessRecord;ZZ)V
    .locals 5
    .param p1, "proc"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "isForeground"    # Z
    .param p3, "oomAdj"    # Z

    .prologue
    iget-boolean v1, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    if-eq p2, v1, :cond_2

    iput-boolean p2, p1, Lcom/android/server/am/ProcessRecord;->foregroundServices:Z

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/app/ProcessMap;->get(Ljava/lang/String;I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/util/ArrayList;

    .local v0, "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    if-eqz p2, :cond_3

    if-nez v0, :cond_0

    new-instance v0, Ljava/util/ArrayList;

    .end local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .restart local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, v0}, Lcom/android/internal/app/ProcessMap;->put(Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/Object;

    :cond_0
    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_1

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const v2, 0x8002

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    :cond_1
    :goto_0
    if-eqz p3, :cond_2

    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->updateOomAdjLocked()V

    .end local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_2
    return-void

    .restart local v0    # "curProcs":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Lcom/android/server/am/ProcessRecord;>;"
    :cond_3
    if-eqz v0, :cond_1

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    const/16 v2, 0x4002

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v3, v3, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v4, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v4, v4, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3, v4}, Lcom/android/server/am/BatteryStatsService;->noteEvent(ILjava/lang/String;I)V

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-gtz v1, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mForegroundPackages:Lcom/android/internal/app/ProcessMap;

    iget-object v2, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget-object v2, v2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    iget-object v3, p1, Lcom/android/server/am/ProcessRecord;->info:Landroid/content/pm/ApplicationInfo;

    iget v3, v3, Landroid/content/pm/ApplicationInfo;->uid:I

    invoke-virtual {v1, v2, v3}, Lcom/android/internal/app/ProcessMap;->remove(Ljava/lang/String;I)V

    goto :goto_0
.end method

.method updateSleepIfNeededLocked()V
    .locals 4

    .prologue
    const/16 v3, 0x1b

    const/4 v2, 0x0

    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-eqz v1, :cond_1

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->shouldSleepLocked()Z

    move-result v1

    if-nez v1, :cond_1

    iput-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->comeOutOfSleepIfNeededLocked()V

    :cond_0
    :goto_0
    return-void

    :cond_1
    iget-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    if-nez v1, :cond_0

    invoke-direct {p0}, Lcom/android/server/am/ActivityManagerService;->shouldSleepLocked()Z

    move-result v1

    if-eqz v1, :cond_0

    const/4 v1, 0x1

    iput-boolean v1, p0, Lcom/android/server/am/ActivityManagerService;->mSleeping:Z

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mStackSupervisor:Lcom/android/server/am/ActivityStackSupervisor;

    invoke-virtual {v1}, Lcom/android/server/am/ActivityStackSupervisor;->goingToSleepLocked()V

    invoke-virtual {p0, v2}, Lcom/android/server/am/ActivityManagerService;->checkExcessivePowerUsageLocked(Z)V

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->removeMessages(I)V

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    invoke-virtual {v1, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->obtainMessage(I)Landroid/os/Message;

    move-result-object v0

    .local v0, "nmsg":Landroid/os/Message;
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mHandler:Lcom/android/server/am/ActivityManagerService$MainHandler;

    const-wide/32 v2, 0xdbba0

    invoke-virtual {v1, v0, v2, v3}, Lcom/android/server/am/ActivityManagerService$MainHandler;->sendMessageDelayed(Landroid/os/Message;J)Z

    goto :goto_0
.end method

.method updateUsageStats(Lcom/android/server/am/ActivityRecord;Z)V
    .locals 5
    .param p1, "component"    # Lcom/android/server/am/ActivityRecord;
    .param p2, "resumed"    # Z

    .prologue
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mBatteryStatsService:Lcom/android/server/am/BatteryStatsService;

    invoke-virtual {v1}, Lcom/android/server/am/BatteryStatsService;->getActiveStatistics()Lcom/android/internal/os/BatteryStatsImpl;

    move-result-object v0

    .local v0, "stats":Lcom/android/internal/os/BatteryStatsImpl;
    if-eqz p2, :cond_1

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_0

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    iget v3, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    const/4 v4, 0x1

    invoke-virtual {v1, v2, v3, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;II)V

    :cond_0
    monitor-enter v0

    :try_start_0
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityResumedLocked(I)V

    monitor-exit v0

    :goto_0
    return-void

    :catchall_0
    move-exception v1

    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1

    :cond_1
    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    if-eqz v1, :cond_2

    iget-object v1, p0, Lcom/android/server/am/ActivityManagerService;->mUsageStatsService:Landroid/app/usage/UsageStatsManagerInternal;

    iget-object v2, p1, Lcom/android/server/am/ActivityRecord;->realActivity:Landroid/content/ComponentName;

    iget v3, p1, Lcom/android/server/am/ActivityRecord;->userId:I

    const/4 v4, 0x2

    invoke-virtual {v1, v2, v3, v4}, Landroid/app/usage/UsageStatsManagerInternal;->reportEvent(Landroid/content/ComponentName;II)V

    :cond_2
    monitor-enter v0

    :try_start_1
    iget-object v1, p1, Lcom/android/server/am/ActivityRecord;->app:Lcom/android/server/am/ProcessRecord;

    iget v1, v1, Lcom/android/server/am/ProcessRecord;->uid:I

    invoke-virtual {v0, v1}, Lcom/android/internal/os/BatteryStatsImpl;->noteActivityPausedLocked(I)V

    monitor-exit v0

    goto :goto_0

    .line 10619
    :catchall_1
    move-exception v1

    monitor-exit v0
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_1

    throw v1
.end method

.method final verifyBroadcastLocked(Landroid/content/Intent;)Landroid/content/Intent;
    .locals 5
    .param p1, "intent"    # Landroid/content/Intent;

    .prologue
    const/high16 v4, 0x40000000    # 2.0f

    if-eqz p1, :cond_0

    invoke-virtual {p1}, Landroid/content/Intent;->hasFileDescriptors()Z

    move-result v2

    const/4 v3, 0x1

    if-ne v2, v3, :cond_0

    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "File descriptors passed in Intent"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 10899
    :cond_0
    invoke-virtual {p1}, Landroid/content/Intent;->getFlags()I

    move-result v0

    .local v0, "flags":I
    iget-boolean v2, p0, Lcom/android/server/am/ActivityManagerService;->mProcessesReady:Z

    if-nez v2, :cond_1

    const/high16 v2, 0x4000000

    and-int/2addr v2, v0

    if-eqz v2, :cond_2

    new-instance v1, Landroid/content/Intent;

    invoke-direct {v1, p1}, Landroid/content/Intent;-><init>(Landroid/content/Intent;)V

    .end local p1    # "intent":Landroid/content/Intent;
    .local v1, "intent":Landroid/content/Intent;
    invoke-virtual {v1, v4}, Landroid/content/Intent;->addFlags(I)Landroid/content/Intent;

    move-object p1, v1

    .end local v1    # "intent":Landroid/content/Intent;
    .restart local p1    # "intent":Landroid/content/Intent;
    :cond_1
    const/high16 v2, 0x2000000

    and-int/2addr v2, v0

    if-eqz v2, :cond_3

    new-instance v2, Ljava/lang/IllegalArgumentException;

    const-string v3, "Can\'t use FLAG_RECEIVER_BOOT_UPGRADE here"

    invoke-direct {v2, v3}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_2
    and-int v2, v0, v4

    if-nez v2, :cond_1

    const-string v2, "ActivityManager"

    new-instance v3, Ljava/lang/StringBuilder;

    invoke-direct {v3}, Ljava/lang/StringBuilder;-><init>()V

    const-string v4, "Attempt to launch receivers of broadcast intent "

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    move-result-object v3

    const-string v4, " before boot completion"

    invoke-virtual {v3, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v3

    invoke-virtual {v3}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v2, v3}, Landroid/util/Slog;->e(Ljava/lang/String;Ljava/lang/String;)I

    new-instance v2, Ljava/lang/IllegalStateException;

    const-string v3, "Cannot broadcast before boot completed"

    invoke-direct {v2, v3}, Ljava/lang/IllegalStateException;-><init>(Ljava/lang/String;)V

    throw v2

    :cond_3
    return-object p1
.end method

.method public willActivityBeVisible(Landroid/os/IBinder;)Z
    .locals 2
    .param p1, "token"    # Landroid/os/IBinder;

    .prologue
    monitor-enter p0

    :try_start_0
    invoke-static {p1}, Lcom/android/server/am/ActivityRecord;->getStackLocked(Landroid/os/IBinder;)Lcom/android/server/am/ActivityStack;

    move-result-object v0

    .local v0, "stack":Lcom/android/server/am/ActivityStack;
    if-eqz v0, :cond_0

    invoke-virtual {v0, p1}, Lcom/android/server/am/ActivityStack;->willActivityBeVisibleLocked(Landroid/os/IBinder;)Z

    move-result v1

    monitor-exit p0

    :goto_0
    return v1

    :cond_0
    const/4 v1, 0x0

    monitor-exit p0

    goto :goto_0

    .end local v0    # "stack":Lcom/android/server/am/ActivityStack;
    :catchall_0
    move-exception v1

    .line 7578
    monitor-exit p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw v1
.end method

.method private final isApplicationRunningLocked(Ljava/lang/String;)Z
    .locals 8
    .param p1, "packageName"    # Ljava/lang/String;

    .prologue
    invoke-virtual {p0}, Lcom/android/server/am/ActivityManagerService;->getRunningAppProcesses()Ljava/util/List;

    move-result-object v6

    .local v6, "runningApps":Ljava/util/List;, "Ljava/util/List<Landroid/app/ActivityManager$RunningAppProcessInfo;>;"
    if-eqz v6, :cond_2

    invoke-interface {v6}, Ljava/util/List;->size()I

    move-result v7

    if-lez v7, :cond_2

    invoke-interface {v6}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :cond_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v7

    if-eqz v7, :cond_2

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Landroid/app/ActivityManager$RunningAppProcessInfo;

    .local v0, "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    iget-object v7, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    if-eqz v7, :cond_0

    iget-object v1, v0, Landroid/app/ActivityManager$RunningAppProcessInfo;->pkgList:[Ljava/lang/String;

    .local v1, "arr$":[Ljava/lang/String;
    array-length v4, v1

    .local v4, "len$":I
    const/4 v3, 0x0

    .local v3, "i$":I
    :goto_0
    if-ge v3, v4, :cond_0

    aget-object v5, v1, v3

    .local v5, "pkg":Ljava/lang/String;
    if-eqz p1, :cond_1

    invoke-virtual {p1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_1

    const/4 v7, 0x1

    .end local v0    # "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v3    # "i$":I
    .end local v4    # "len$":I
    .end local v5    # "pkg":Ljava/lang/String;
    :goto_1
    return v7

    .restart local v0    # "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .restart local v1    # "arr$":[Ljava/lang/String;
    .restart local v3    # "i$":I
    .restart local v4    # "len$":I
    .restart local v5    # "pkg":Ljava/lang/String;
    :cond_1
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .end local v0    # "app":Landroid/app/ActivityManager$RunningAppProcessInfo;
    .end local v1    # "arr$":[Ljava/lang/String;
    .end local v3    # "i$":I
    .end local v4    # "len$":I
    .end local v5    # "pkg":Ljava/lang/String;
    :cond_2
    const/4 v7, 0x0

    goto :goto_1
.end method

.method flymeInvokeMethodBroadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I
    .locals 1
    .param p1, "callerApp"    # Lcom/android/server/am/ProcessRecord;
    .param p2, "callerPackage"    # Ljava/lang/String;
    .param p3, "intent"    # Landroid/content/Intent;
    .param p4, "resolvedType"    # Ljava/lang/String;
    .param p5, "resultTo"    # Landroid/content/IIntentReceiver;
    .param p6, "resultCode"    # I
    .param p7, "resultData"    # Ljava/lang/String;
    .param p8, "map"    # Landroid/os/Bundle;
    .param p9, "requiredPermission"    # Ljava/lang/String;
    .param p10, "appOp"    # I
    .param p11, "ordered"    # Z
    .param p12, "sticky"    # Z
    .param p13, "callingPid"    # I
    .param p14, "callingUid"    # I
    .param p15, "userId"    # I

    .prologue
    invoke-direct/range {p0 .. p15}, Lcom/android/server/am/ActivityManagerService;->broadcastIntentLocked(Lcom/android/server/am/ProcessRecord;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/content/IIntentReceiver;ILjava/lang/String;Landroid/os/Bundle;Ljava/lang/String;IZZIII)I

    move-result v0

    return v0
.end method

.method flymeInvokeMethodRemoveTaskByIdLocked(IZ)Z
    .locals 1
    .param p1, "taskId"    # I
    .param p2, "killProcess"    # Z

    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->removeTaskByIdLocked(IZ)Z

    move-result v0

    return v0
.end method

.method flymeInvokeMethodStartUser(IZ)Z
    .locals 1
    .param p1, "userId"    # I
    .param p2, "foreground"    # Z

    .prologue
    invoke-direct {p0, p1, p2}, Lcom/android/server/am/ActivityManagerService;->startUser(IZ)Z

    move-result v0

    return v0
.end method

.method final hook_startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;
    .locals 2
    .param p1, "processName"    # Ljava/lang/String;
    .param p2, "info"    # Landroid/content/pm/ApplicationInfo;
    .param p3, "knownToBeDead"    # Z
    .param p4, "intentFlags"    # I
    .param p5, "hostingType"    # Ljava/lang/String;
    .param p6, "hostingName"    # Landroid/content/ComponentName;
    .param p7, "allowWhileBooting"    # Z
    .param p8, "isolated"    # Z
    .param p9, "keepIfLarge"    # Z

    .prologue
    iget v0, p2, Landroid/content/pm/ApplicationInfo;->uid:I

    iget-object v1, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-static {v0, v1}, Lcom/android/server/am/BroadcastQueue$FlymeBroadcastQueueInjector;->interceptForPermissionControl(ILjava/lang/String;)Z

    move-result v0

    if-nez v0, :cond_0

    iget-object v0, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-static {v0}, Lcom/android/server/am/BroadcastQueue$PowerSupperInjector;->interceptForSupperModePermissionControl(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 19229
    :cond_0
    iget-object v0, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-static {v0}, Lcom/android/server/am/BroadcastQueue$FlymeBroadcastQueueInjector;->isSystemSignatures(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 18595
    :cond_1
    invoke-virtual/range {p0 .. p9}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    :goto_0
    return-object v0

    .line 3398
    :cond_2
    iget-object v0, p2, Landroid/content/pm/ApplicationInfo;->packageName:Ljava/lang/String;

    invoke-direct {p0, v0}, Lcom/android/server/am/ActivityManagerService;->isApplicationRunningLocked(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    invoke-virtual/range {p0 .. p9}, Lcom/android/server/am/ActivityManagerService;->startProcessLocked(Ljava/lang/String;Landroid/content/pm/ApplicationInfo;ZILjava/lang/String;Landroid/content/ComponentName;ZZZ)Lcom/android/server/am/ProcessRecord;

    move-result-object v0

    goto :goto_0

    .line 3401
    :cond_3
    const/4 v0, 0x0

    goto :goto_0
.end method
